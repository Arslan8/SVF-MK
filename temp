Pass incomplete
  call void @vApplicationStackOverflowHook(%struct.tskTaskControlBlock* %7, i8* nonnull %arraydecay) #18, !dbg !1106
Pass incomplete
  %call = call i8* @pvPortMalloc(i32 %mul) #18, !dbg !1094
Pass incomplete
  %call2 = call i8* @pvPortMalloc(i32 88) #18, !dbg !1099
  call void @xcall_arg1p(i32 14, i8* bitcast (void (i8*)* @vPortFree to i8*), i8* %call, i32 ptrtoint (i8* getelementptr (i8, i8* null, i32 1) to i32))
  call void @xcall_arg1p(i32 4, i8* bitcast (void (%struct.xLIST_ITEM*)* @vListInitialiseItem to i8*), i8* %10, i32 ptrtoint (%struct.xLIST_ITEM* getelementptr (%struct.xLIST_ITEM, %struct.xLIST_ITEM* null, i32 1) to i32))
  call void @xcall_arg1p(i32 4, i8* bitcast (void (%struct.xLIST_ITEM*)* @vListInitialiseItem to i8*), i8* %11, i32 ptrtoint (%struct.xLIST_ITEM* getelementptr (%struct.xLIST_ITEM, %struct.xLIST_ITEM* null, i32 1) to i32))
Pass incomplete
  call void @vListInsertEnd(%struct.xLIST* nonnull %arrayidx, %struct.xLIST_ITEM* nonnull %xStateListItem) #18, !dbg !1120
  call void @xcall_arg1p(i32 4, i8* bitcast (void (%struct.xLIST*)* @vListInitialise to i8*), i8* %0, i32 ptrtoint (%struct.xLIST* getelementptr (%struct.xLIST, %struct.xLIST* null, i32 1) to i32))
  call void @xcall_arg1p(i32 4, i8* bitcast (void (%struct.xLIST*)* @vListInitialise to i8*), i8* bitcast (%struct.xLIST* @xDelayedTaskList1 to i8*), i32 ptrtoint (%struct.xLIST* getelementptr (%struct.xLIST, %struct.xLIST* null, i32 1) to i32))
  call void @xcall_arg1p(i32 4, i8* bitcast (void (%struct.xLIST*)* @vListInitialise to i8*), i8* bitcast (%struct.xLIST* @xPendingReadyList to i8*), i32 ptrtoint (%struct.xLIST* getelementptr (%struct.xLIST, %struct.xLIST* null, i32 1) to i32))
  call void @xcall_arg1p(i32 4, i8* bitcast (void (%struct.xLIST*)* @vListInitialise to i8*), i8* bitcast (%struct.xLIST* @xSuspendedTaskList to i8*), i32 ptrtoint (%struct.xLIST* getelementptr (%struct.xLIST, %struct.xLIST* null, i32 1) to i32))
  %2 = call i32 @icall_arg1p(i32 4, i8* bitcast (i32 (%struct.xLIST_ITEM*)* @uxListRemove to i8*), i8* %1, i32 ptrtoint (%struct.xLIST_ITEM* getelementptr (%struct.xLIST_ITEM, %struct.xLIST_ITEM* null, i32 1) to i32))
  %7 = call i32 @icall_arg1p(i32 4, i8* bitcast (i32 (%struct.xLIST_ITEM*)* @uxListRemove to i8*), i8* %6, i32 ptrtoint (%struct.xLIST_ITEM* getelementptr (%struct.xLIST_ITEM, %struct.xLIST_ITEM* null, i32 1) to i32))
Pass incomplete
  call void @vListInsertEnd(%struct.xLIST* nonnull @xTasksWaitingTermination, %struct.xLIST_ITEM* nonnull %xStateListItem) #18, !dbg !1116
  call void @xcall_arg1p(i32 14, i8* bitcast (void (i8*)* @vPortFree to i8*), i8* %1, i32 ptrtoint (i8* getelementptr (i8, i8* null, i32 1) to i32))
  call void @xcall_arg1p(i32 14, i8* bitcast (void (i8*)* @vPortFree to i8*), i8* %2, i32 ptrtoint (i8* getelementptr (i8, i8* null, i32 1) to i32))
  %3 = call i32 @icall_arg1p(i32 4, i8* bitcast (i32 (%struct.xLIST_ITEM*)* @uxListRemove to i8*), i8* %2, i32 ptrtoint (%struct.xLIST_ITEM* getelementptr (%struct.xLIST_ITEM, %struct.xLIST_ITEM* null, i32 1) to i32))
Pass incomplete
  call void @vListInsertEnd(%struct.xLIST* nonnull @xSuspendedTaskList, %struct.xLIST_ITEM* nonnull %xStateListItem4) #18, !dbg !1107
Pass incomplete
  call void @vListInsert(%struct.xLIST* %8, %struct.xLIST_ITEM* nonnull %xStateListItem9) #18, !dbg !1120
Pass incomplete
  call void @vListInsert(%struct.xLIST* %10, %struct.xLIST_ITEM* nonnull %xStateListItem11) #18, !dbg !1126
  %17 = call i32 @icall_arg1p(i32 4, i8* bitcast (i32 (%struct.xLIST_ITEM*)* @uxListRemove to i8*), i8* %16, i32 ptrtoint (%struct.xLIST_ITEM* getelementptr (%struct.xLIST_ITEM, %struct.xLIST_ITEM* null, i32 1) to i32))
  %18 = call i32 @icall_arg1p(i32 4, i8* bitcast (i32 (%struct.xLIST_ITEM*)* @uxListRemove to i8*), i8* %17, i32 ptrtoint (%struct.xLIST_ITEM* getelementptr (%struct.xLIST_ITEM, %struct.xLIST_ITEM* null, i32 1) to i32))
Pass incomplete
  call void @vListInsertEnd(%struct.xLIST* nonnull %arrayidx, %struct.xLIST_ITEM* nonnull %xStateListItem) #18, !dbg !1129
  %18 = call i32 @icall_arg1p(i32 4, i8* bitcast (i32 (%struct.xLIST_ITEM*)* @uxListRemove to i8*), i8* %17, i32 ptrtoint (%struct.xLIST_ITEM* getelementptr (%struct.xLIST_ITEM, %struct.xLIST_ITEM* null, i32 1) to i32))
  %19 = call i32 @icall_arg1p(i32 4, i8* bitcast (i32 (%struct.xLIST_ITEM*)* @uxListRemove to i8*), i8* %18, i32 ptrtoint (%struct.xLIST_ITEM* getelementptr (%struct.xLIST_ITEM, %struct.xLIST_ITEM* null, i32 1) to i32))
Pass incomplete
  call void @vListInsertEnd(%struct.xLIST* nonnull %arrayidx, %struct.xLIST_ITEM* nonnull %xStateListItem) #18, !dbg !1162
  call void @xcall_arg0(i32 9, void ()* @vApplicationTickHook)
  call void @xcall_arg0(i32 9, void ()* @vApplicationTickHook)
  %11 = call i32 @icall_arg1p(i32 4, i8* bitcast (i32 (%struct.xLIST_ITEM*)* @uxListRemove to i8*), i8* %10, i32 ptrtoint (%struct.xLIST_ITEM* getelementptr (%struct.xLIST_ITEM, %struct.xLIST_ITEM* null, i32 1) to i32))
Pass incomplete
  call void @vListInsertEnd(%struct.xLIST* nonnull %arrayidx65, %struct.xLIST_ITEM* nonnull %xStateListItem) #18, !dbg !1166
  %2 = call i32 @icall_arg1p(i32 4, i8* bitcast (i32 (%struct.xLIST_ITEM*)* @uxListRemove to i8*), i8* %1, i32 ptrtoint (%struct.xLIST_ITEM* getelementptr (%struct.xLIST_ITEM, %struct.xLIST_ITEM* null, i32 1) to i32))
  %7 = call i32 @icall_arg1p(i32 4, i8* bitcast (i32 (%struct.xLIST_ITEM*)* @uxListRemove to i8*), i8* %6, i32 ptrtoint (%struct.xLIST_ITEM* getelementptr (%struct.xLIST_ITEM, %struct.xLIST_ITEM* null, i32 1) to i32))
Pass incomplete
  call void @vListInsertEnd(%struct.xLIST* nonnull @xSuspendedTaskList, %struct.xLIST_ITEM* nonnull %xStateListItem) #18, !dbg !1113
  %8 = call i32 @icall_arg1p(i32 4, i8* bitcast (i32 (%struct.xLIST_ITEM*)* @uxListRemove to i8*), i8* %7, i32 ptrtoint (%struct.xLIST_ITEM* getelementptr (%struct.xLIST_ITEM, %struct.xLIST_ITEM* null, i32 1) to i32))
Pass incomplete
  call void @vListInsertEnd(%struct.xLIST* nonnull %arrayidx, %struct.xLIST_ITEM* nonnull %xStateListItem) #18, !dbg !1114
  %9 = call i32 @icall_arg1p(i32 4, i8* bitcast (i32 (%struct.xLIST_ITEM*)* @uxListRemove to i8*), i8* %8, i32 ptrtoint (%struct.xLIST_ITEM* getelementptr (%struct.xLIST_ITEM, %struct.xLIST_ITEM* null, i32 1) to i32))
Pass incomplete
  call void @vListInsertEnd(%struct.xLIST* nonnull %arrayidx, %struct.xLIST_ITEM* nonnull %xStateListItem) #18, !dbg !1141
Pass incomplete
  call void @vListInsertEnd(%struct.xLIST* nonnull @xPendingReadyList, %struct.xLIST_ITEM* nonnull %xEventListItem) #18, !dbg !1145
  %1 = call i32 @icall_arg0(i32 6, i32 ()* @xTimerCreateTimerTask)
  call void @xcall_arg0(i32 9, void ()* @vApplicationIdleHook)
  %9 = call i32 @icall_arg1p(i32 4, i8* bitcast (i32 (%struct.xLIST_ITEM*)* @uxListRemove to i8*), i8* %8, i32 ptrtoint (%struct.xLIST_ITEM* getelementptr (%struct.xLIST_ITEM, %struct.xLIST_ITEM* null, i32 1) to i32))
Pass incomplete
  call void @vListInsert(%struct.xLIST* nonnull %pxEventList, %struct.xLIST_ITEM* nonnull %xEventListItem) #18, !dbg !1103
Pass incomplete
  call void @vListInsertEnd(%struct.xLIST* nonnull %pxEventList, %struct.xLIST_ITEM* nonnull %xEventListItem8) #18, !dbg !1123
Pass incomplete
  call void @vListInsertEnd(%struct.xLIST* nonnull %pxEventList, %struct.xLIST_ITEM* nonnull %xEventListItem) #18, !dbg !1104
  %6 = call i32 @icall_arg1p(i32 4, i8* bitcast (i32 (%struct.xLIST_ITEM*)* @uxListRemove to i8*), i8* %5, i32 ptrtoint (%struct.xLIST_ITEM* getelementptr (%struct.xLIST_ITEM, %struct.xLIST_ITEM* null, i32 1) to i32))
  %9 = call i32 @icall_arg1p(i32 4, i8* bitcast (i32 (%struct.xLIST_ITEM*)* @uxListRemove to i8*), i8* %8, i32 ptrtoint (%struct.xLIST_ITEM* getelementptr (%struct.xLIST_ITEM, %struct.xLIST_ITEM* null, i32 1) to i32))
Pass incomplete
  call void @vListInsertEnd(%struct.xLIST* nonnull %arrayidx, %struct.xLIST_ITEM* nonnull %xStateListItem) #18, !dbg !1120
Pass incomplete
  call void @vListInsertEnd(%struct.xLIST* nonnull @xPendingReadyList, %struct.xLIST_ITEM* nonnull %xEventListItem) #18, !dbg !1124
  %11 = call i32 @icall_arg1p(i32 4, i8* bitcast (i32 (%struct.xLIST_ITEM*)* @uxListRemove to i8*), i8* %10, i32 ptrtoint (%struct.xLIST_ITEM* getelementptr (%struct.xLIST_ITEM, %struct.xLIST_ITEM* null, i32 1) to i32))
  %12 = call i32 @icall_arg1p(i32 4, i8* bitcast (i32 (%struct.xLIST_ITEM*)* @uxListRemove to i8*), i8* %11, i32 ptrtoint (%struct.xLIST_ITEM* getelementptr (%struct.xLIST_ITEM, %struct.xLIST_ITEM* null, i32 1) to i32))
Pass incomplete
  call void @vListInsertEnd(%struct.xLIST* nonnull %arrayidx, %struct.xLIST_ITEM* nonnull %xStateListItem) #18, !dbg !1124
  %8 = call i32 @icall_arg1p(i32 4, i8* bitcast (i32 (%struct.xLIST_ITEM*)* @uxListRemove to i8*), i8* %7, i32 ptrtoint (%struct.xLIST_ITEM* getelementptr (%struct.xLIST_ITEM, %struct.xLIST_ITEM* null, i32 1) to i32))
Pass incomplete
  call void @vListInsertEnd(%struct.xLIST* nonnull %arrayidx25, %struct.xLIST_ITEM* nonnull %xStateListItem) #18, !dbg !1122
  %7 = call i32 @icall_arg1p(i32 4, i8* bitcast (i32 (%struct.xLIST_ITEM*)* @uxListRemove to i8*), i8* %6, i32 ptrtoint (%struct.xLIST_ITEM* getelementptr (%struct.xLIST_ITEM, %struct.xLIST_ITEM* null, i32 1) to i32))
Pass incomplete
  call void @vListInsertEnd(%struct.xLIST* nonnull %arrayidx, %struct.xLIST_ITEM* nonnull %xStateListItem) #18, !dbg !1148
  %9 = call i32 @icall_arg1p(i32 4, i8* bitcast (i32 (%struct.xLIST_ITEM*)* @uxListRemove to i8*), i8* %8, i32 ptrtoint (%struct.xLIST_ITEM* getelementptr (%struct.xLIST_ITEM, %struct.xLIST_ITEM* null, i32 1) to i32))
Pass incomplete
  call void @vListInsertEnd(%struct.xLIST* nonnull %arrayidx43, %struct.xLIST_ITEM* nonnull %xStateListItem) #18, !dbg !1163
  %12 = call i32 @icall_arg1p(i32 4, i8* bitcast (i32 (%struct.xLIST_ITEM*)* @uxListRemove to i8*), i8* %11, i32 ptrtoint (%struct.xLIST_ITEM* getelementptr (%struct.xLIST_ITEM, %struct.xLIST_ITEM* null, i32 1) to i32))
Pass incomplete
  call void @vListInsertEnd(%struct.xLIST* nonnull %arrayidx44, %struct.xLIST_ITEM* nonnull %xStateListItem) #18, !dbg !1168
  %15 = call i32 @icall_arg1p(i32 4, i8* bitcast (i32 (%struct.xLIST_ITEM*)* @uxListRemove to i8*), i8* %14, i32 ptrtoint (%struct.xLIST_ITEM* getelementptr (%struct.xLIST_ITEM, %struct.xLIST_ITEM* null, i32 1) to i32))
Pass incomplete
  call void @vListInsertEnd(%struct.xLIST* nonnull %arrayidx54, %struct.xLIST_ITEM* nonnull %xStateListItem) #18, !dbg !1204
Pass incomplete
  call void @vListInsertEnd(%struct.xLIST* nonnull @xPendingReadyList, %struct.xLIST_ITEM* nonnull %xEventListItem) #18, !dbg !1207
  %11 = call i32 @icall_arg1p(i32 4, i8* bitcast (i32 (%struct.xLIST_ITEM*)* @uxListRemove to i8*), i8* %10, i32 ptrtoint (%struct.xLIST_ITEM* getelementptr (%struct.xLIST_ITEM, %struct.xLIST_ITEM* null, i32 1) to i32))
Pass incomplete
  call void @vListInsertEnd(%struct.xLIST* nonnull %arrayidx26, %struct.xLIST_ITEM* nonnull %xStateListItem) #18, !dbg !1163
Pass incomplete
  call void @vListInsertEnd(%struct.xLIST* nonnull @xPendingReadyList, %struct.xLIST_ITEM* nonnull %xEventListItem) #18, !dbg !1166
  call void @xcall_arg1i(i32 12, i8* bitcast (void (i32)* @vStartLEDFlashTasks to i8*), i32 1, i32 1)
  call void @xcall_arg0(i32 0, void ()* @SystemInit)
  call void @xcall_arg0(i32 10, void ()* @vParTestInitialise)
  call void @xcall_arg1i(i32 11, i8* bitcast (void (i32)* @vRegTestClearFlopRegistersToParameterValue to i8*), i32 1, i32 1)
  %1 = call i32 @icall_arg1i(i32 11, i8* bitcast (i32 (i32)* @ulRegTestCheckFlopRegistersContainParameterValue to i8*), i32 1, i32 1)
  call void @xcall_arg1i(i32 15, i8* bitcast (void (i32)* @EXTI_ClearITPendingBit to i8*), i32 64, i32 64)
Pass incomplete
  %call = call i32 @xQueueGiveFromISR(%struct.QueueDefinition* null, i32* nonnull %lHigherPriorityTaskWoken) #18, !dbg !1081
  call void @xcall_arg0(i32 0, void ()* @vPortEnterCritical)
  %6 = call i32 @icall_arg1p(i32 0, i8* bitcast (i32 (%struct.xLIST*)* @xTaskRemoveFromEventList to i8*), i8* %5, i32 ptrtoint (%struct.xLIST* getelementptr (%struct.xLIST, %struct.xLIST* null, i32 1) to i32))
  call void @xcall_arg1p(i32 4, i8* bitcast (void (%struct.xLIST*)* @vListInitialise to i8*), i8* %6, i32 ptrtoint (%struct.xLIST* getelementptr (%struct.xLIST, %struct.xLIST* null, i32 1) to i32))
  call void @xcall_arg1p(i32 4, i8* bitcast (void (%struct.xLIST*)* @vListInitialise to i8*), i8* %7, i32 ptrtoint (%struct.xLIST* getelementptr (%struct.xLIST, %struct.xLIST* null, i32 1) to i32))
  call void @xcall_arg0(i32 0, void ()* @vPortExitCritical)
Pass incomplete
  %call = call i8* @pvPortMalloc(i32 %add) #18, !dbg !1127
  %7 = call i32 @icall_arg0(i32 0, i32 ()* @xTaskGetSchedulerState)
  call void @xcall_arg0(i32 0, void ()* @vPortEnterCritical)
  %12 = call i32 @icall_arg1p(i32 0, i8* bitcast (i32 (%struct.xLIST*)* @xTaskRemoveFromEventList to i8*), i8* %11, i32 ptrtoint (%struct.xLIST* getelementptr (%struct.xLIST, %struct.xLIST* null, i32 1) to i32))
  call void @xcall_arg0(i32 0, void ()* @vPortExitCritical)
  call void @xcall_arg0(i32 0, void ()* @vPortExitCritical)
  call void @xcall_arg1p(i32 0, i8* bitcast (void (%struct.xTIME_OUT*)* @vTaskInternalSetTimeOutState to i8*), i8* %13, i32 mul nuw (i32 ptrtoint (i32* getelementptr (i32, i32* null, i32 1) to i32), i32 2))
  call void @xcall_arg0(i32 0, void ()* @vPortExitCritical)
  call void @xcall_arg0(i32 0, void ()* @vPortEnterCritical)
  call void @xcall_arg0(i32 0, void ()* @vPortExitCritical)
Pass incomplete
  %call68 = call i32 @xTaskCheckForTimeOut(%struct.xTIME_OUT* nonnull %xTimeOut, i32* nonnull %xTicksToWait.addr) #18, !dbg !1233
Pass incomplete
  call void @vTaskPlaceOnEventList(%struct.xLIST* nonnull %xTasksWaitingToSend, i32 %16) #18, !dbg !1244
  %17 = call i32 @icall_arg0(i32 0, i32 ()* @xTaskResumeAll)
  %17 = call i32 @icall_arg0(i32 0, i32 ()* @xTaskResumeAll)
  %17 = call i32 @icall_arg0(i32 0, i32 ()* @xTaskResumeAll)
  %5 = call i32 @icall_arg1p(i32 0, i8* bitcast (i32 (%struct.tskTaskControlBlock*)* @xTaskPriorityDisinherit to i8*), i8* %4, i32 ptrtoint (%struct.tskTaskControlBlock* getelementptr (%struct.tskTaskControlBlock, %struct.tskTaskControlBlock* null, i32 1) to i32))
  call void @xcall_arg0(i32 0, void ()* @vPortEnterCritical)
  call void @xcall_arg0(i32 0, void ()* @vPortExitCritical)
  call void @xcall_arg0(i32 0, void ()* @vPortEnterCritical)
  %3 = call i32 @icall_arg1p(i32 0, i8* bitcast (i32 (%struct.xLIST*)* @xTaskRemoveFromEventList to i8*), i8* %2, i32 ptrtoint (%struct.xLIST* getelementptr (%struct.xLIST, %struct.xLIST* null, i32 1) to i32))
  call void @xcall_arg0(i32 0, void ()* @vTaskMissedYield)
  call void @xcall_arg0(i32 0, void ()* @vPortExitCritical)
  %6 = call i32 @icall_arg1p(i32 0, i8* bitcast (i32 (%struct.xLIST*)* @xTaskRemoveFromEventList to i8*), i8* %5, i32 ptrtoint (%struct.xLIST* getelementptr (%struct.xLIST, %struct.xLIST* null, i32 1) to i32))
  call void @xcall_arg0(i32 0, void ()* @vTaskMissedYield)
  call void @xcall_arg0(i32 0, void ()* @vPortExitCritical)
Pass incomplete
  %call = call %struct.tskTaskControlBlock* @xTaskGetCurrentTaskHandle() #18, !dbg !1103
Pass incomplete
  %call = call %struct.tskTaskControlBlock* @xTaskGetCurrentTaskHandle() #18, !dbg !1104
  %5 = call i32 @icall_arg0(i32 0, i32 ()* @xTaskGetSchedulerState)
  call void @xcall_arg0(i32 0, void ()* @vPortEnterCritical)
Pass incomplete
  %call24 = call %struct.tskTaskControlBlock* @pvTaskIncrementMutexHeldCount() #18, !dbg !1177
  %10 = call i32 @icall_arg1p(i32 0, i8* bitcast (i32 (%struct.xLIST*)* @xTaskRemoveFromEventList to i8*), i8* %9, i32 ptrtoint (%struct.xLIST* getelementptr (%struct.xLIST, %struct.xLIST* null, i32 1) to i32))
  call void @xcall_arg0(i32 0, void ()* @vPortExitCritical)
  call void @xcall_arg0(i32 0, void ()* @vPortExitCritical)
  call void @xcall_arg1p(i32 0, i8* bitcast (void (%struct.xTIME_OUT*)* @vTaskInternalSetTimeOutState to i8*), i8* %12, i32 mul nuw (i32 ptrtoint (i32* getelementptr (i32, i32* null, i32 1) to i32), i32 2))
  call void @xcall_arg0(i32 0, void ()* @vPortExitCritical)
  call void @xcall_arg0(i32 0, void ()* @vPortEnterCritical)
  call void @xcall_arg0(i32 0, void ()* @vPortExitCritical)
Pass incomplete
  %call71 = call i32 @xTaskCheckForTimeOut(%struct.xTIME_OUT* nonnull %xTimeOut, i32* nonnull %xTicksToWait.addr) #18, !dbg !1242
  call void @xcall_arg0(i32 0, void ()* @vPortEnterCritical)
  %18 = call i32 @icall_arg1p(i32 0, i8* bitcast (i32 (%struct.tskTaskControlBlock*)* @xTaskPriorityInherit to i8*), i8* %17, i32 ptrtoint (%struct.tskTaskControlBlock* getelementptr (%struct.tskTaskControlBlock, %struct.tskTaskControlBlock* null, i32 1) to i32))
  call void @xcall_arg0(i32 0, void ()* @vPortExitCritical)
Pass incomplete
  call void @vTaskPlaceOnEventList(%struct.xLIST* nonnull %xTasksWaitingToReceive, i32 %18) #18, !dbg !1264
  %19 = call i32 @icall_arg0(i32 0, i32 ()* @xTaskResumeAll)
  %19 = call i32 @icall_arg0(i32 0, i32 ()* @xTaskResumeAll)
  %19 = call i32 @icall_arg0(i32 0, i32 ()* @xTaskResumeAll)
  call void @xcall_arg0(i32 0, void ()* @vPortEnterCritical)
Pass incomplete
  call void @vTaskPriorityDisinheritAfterTimeout(%struct.tskTaskControlBlock* %19, i32 %call107) #18, !dbg !1291
  call void @xcall_arg0(i32 0, void ()* @vPortExitCritical)
  call void @xcall_arg0(i32 0, void ()* @vPortEnterCritical)
  call void @xcall_arg0(i32 0, void ()* @vPortExitCritical)
  call void @xcall_arg0(i32 0, void ()* @vPortValidateInterruptPriority)
  %12 = call i32 @icall_arg1p(i32 0, i8* bitcast (i32 (%struct.xLIST*)* @xTaskRemoveFromEventList to i8*), i8* %11, i32 ptrtoint (%struct.xLIST* getelementptr (%struct.xLIST, %struct.xLIST* null, i32 1) to i32))
  call void @xcall_arg0(i32 0, void ()* @vPortValidateInterruptPriority)
  %12 = call i32 @icall_arg1p(i32 0, i8* bitcast (i32 (%struct.xLIST*)* @xTaskRemoveFromEventList to i8*), i8* %11, i32 ptrtoint (%struct.xLIST* getelementptr (%struct.xLIST, %struct.xLIST* null, i32 1) to i32))
  %5 = call i32 @icall_arg0(i32 0, i32 ()* @xTaskGetSchedulerState)
  call void @xcall_arg0(i32 0, void ()* @vPortEnterCritical)
  %9 = call i32 @icall_arg1p(i32 0, i8* bitcast (i32 (%struct.xLIST*)* @xTaskRemoveFromEventList to i8*), i8* %8, i32 ptrtoint (%struct.xLIST* getelementptr (%struct.xLIST, %struct.xLIST* null, i32 1) to i32))
  call void @xcall_arg0(i32 0, void ()* @vPortExitCritical)
  call void @xcall_arg0(i32 0, void ()* @vPortExitCritical)
  call void @xcall_arg1p(i32 0, i8* bitcast (void (%struct.xTIME_OUT*)* @vTaskInternalSetTimeOutState to i8*), i8* %10, i32 mul nuw (i32 ptrtoint (i32* getelementptr (i32, i32* null, i32 1) to i32), i32 2))
  call void @xcall_arg0(i32 0, void ()* @vPortExitCritical)
  call void @xcall_arg0(i32 0, void ()* @vPortEnterCritical)
  call void @xcall_arg0(i32 0, void ()* @vPortExitCritical)
Pass incomplete
  %call53 = call i32 @xTaskCheckForTimeOut(%struct.xTIME_OUT* nonnull %xTimeOut, i32* nonnull %xTicksToWait.addr) #18, !dbg !1210
Pass incomplete
  call void @vTaskPlaceOnEventList(%struct.xLIST* nonnull %xTasksWaitingToReceive, i32 %13) #18, !dbg !1221
  %14 = call i32 @icall_arg0(i32 0, i32 ()* @xTaskResumeAll)
  %14 = call i32 @icall_arg0(i32 0, i32 ()* @xTaskResumeAll)
  %14 = call i32 @icall_arg0(i32 0, i32 ()* @xTaskResumeAll)
  %5 = call i32 @icall_arg0(i32 0, i32 ()* @xTaskGetSchedulerState)
  call void @xcall_arg0(i32 0, void ()* @vPortEnterCritical)
  %10 = call i32 @icall_arg1p(i32 0, i8* bitcast (i32 (%struct.xLIST*)* @xTaskRemoveFromEventList to i8*), i8* %9, i32 ptrtoint (%struct.xLIST* getelementptr (%struct.xLIST, %struct.xLIST* null, i32 1) to i32))
  call void @xcall_arg0(i32 0, void ()* @vPortExitCritical)
  call void @xcall_arg0(i32 0, void ()* @vPortExitCritical)
  call void @xcall_arg1p(i32 0, i8* bitcast (void (%struct.xTIME_OUT*)* @vTaskInternalSetTimeOutState to i8*), i8* %11, i32 mul nuw (i32 ptrtoint (i32* getelementptr (i32, i32* null, i32 1) to i32), i32 2))
  call void @xcall_arg0(i32 0, void ()* @vPortExitCritical)
  call void @xcall_arg0(i32 0, void ()* @vPortEnterCritical)
  call void @xcall_arg0(i32 0, void ()* @vPortExitCritical)
Pass incomplete
  %call56 = call i32 @xTaskCheckForTimeOut(%struct.xTIME_OUT* nonnull %xTimeOut, i32* nonnull %xTicksToWait.addr) #18, !dbg !1212
Pass incomplete
  call void @vTaskPlaceOnEventList(%struct.xLIST* nonnull %xTasksWaitingToReceive64, i32 %14) #18, !dbg !1223
  %15 = call i32 @icall_arg0(i32 0, i32 ()* @xTaskResumeAll)
  %15 = call i32 @icall_arg0(i32 0, i32 ()* @xTaskResumeAll)
  %15 = call i32 @icall_arg0(i32 0, i32 ()* @xTaskResumeAll)
  call void @xcall_arg0(i32 0, void ()* @vPortValidateInterruptPriority)
  %8 = call i32 @icall_arg1p(i32 0, i8* bitcast (i32 (%struct.xLIST*)* @xTaskRemoveFromEventList to i8*), i8* %7, i32 ptrtoint (%struct.xLIST* getelementptr (%struct.xLIST, %struct.xLIST* null, i32 1) to i32))
  call void @xcall_arg0(i32 0, void ()* @vPortValidateInterruptPriority)
  call void @xcall_arg0(i32 0, void ()* @vPortEnterCritical)
  call void @xcall_arg0(i32 0, void ()* @vPortExitCritical)
  call void @xcall_arg0(i32 0, void ()* @vPortEnterCritical)
  call void @xcall_arg0(i32 0, void ()* @vPortExitCritical)
  call void @xcall_arg1p(i32 14, i8* bitcast (void (i8*)* @vPortFree to i8*), i8* %1, i32 ptrtoint (i8* getelementptr (i8, i8* null, i32 1) to i32))
  call void @xcall_arg0(i32 0, void ()* @vPortEnterCritical)
  call void @xcall_arg0(i32 0, void ()* @vPortExitCritical)
Pass incomplete
  call void @vTaskPlaceOnEventListRestricted(%struct.xLIST* nonnull %xTasksWaitingToReceive, i32 %xTicksToWait, i32 %xWaitIndefinitely) #18, !dbg !1107
Pass incomplete
  %call = call i32 @xTaskCreate(void (i8*)* nonnull @prvTimerTask, i8* %1, i16 zeroext 260, i8* null, i32 2, %struct.tskTaskControlBlock** nonnull @xTimerTaskHandle) #18, !dbg !1082
  call void @xcall_arg0(i32 0, void ()* @vPortEnterCritical)
  call void @xcall_arg1p(i32 4, i8* bitcast (void (%struct.xLIST*)* @vListInitialise to i8*), i8* bitcast (%struct.xLIST* @xActiveTimerList1 to i8*), i32 ptrtoint (%struct.xLIST* getelementptr (%struct.xLIST, %struct.xLIST* null, i32 1) to i32))
Pass incomplete
  %call = call %struct.QueueDefinition* @xQueueGenericCreate(i32 10, i32 12, i8 zeroext 0) #18, !dbg !1086
Pass incomplete
  call void @vQueueAddToRegistry(%struct.QueueDefinition* nonnull %call, i8* %1) #18, !dbg !1093
  call void @xcall_arg0(i32 0, void ()* @vPortExitCritical)
  call void @xcall_arg0(i32 0, void ()* @vTaskSuspendAll)
  %2 = call i32 @icall_arg0(i32 0, i32 ()* @xTaskResumeAll)
Pass incomplete
  call void @vQueueWaitForMessageRestricted(%struct.QueueDefinition* %4, i32 %sub, i32 %xListWasEmpty.addr.0) #18, !dbg !1113
  %5 = call i32 @icall_arg0(i32 0, i32 ()* @xTaskResumeAll)
  %5 = call i32 @icall_arg0(i32 0, i32 ()* @xTaskResumeAll)
Pass incomplete
  %call = call i32 @xQueueReceive(%struct.QueueDefinition* %2, i8* nonnull %0, i32 0) #18, !dbg !1098
  %7 = call i32 @icall_arg1p(i32 4, i8* bitcast (i32 (%struct.xLIST_ITEM*)* @uxListRemove to i8*), i8* %6, i32 ptrtoint (%struct.xLIST_ITEM* getelementptr (%struct.xLIST_ITEM, %struct.xLIST_ITEM* null, i32 1) to i32))
Indirect Call
  %16 = load void (%struct.tmrTimerControl*)*, void (%struct.tmrTimerControl*)** %pxCallbackFunction, align 4, !dbg !1151, !tbaa !1152
  %16 = load void (%struct.tmrTimerControl*)*, void (%struct.tmrTimerControl*)** %pxCallbackFunction, align 4, !dbg !1151, !tbaa !1152
Zero Target
Pass incomplete
  call void @xcall_arg1p(i32 14, i8* bitcast (void (i8*)* @vPortFree to i8*), i8* %25, i32 ptrtoint (i8* getelementptr (i8, i8* null, i32 1) to i32))
  %1 = call i32 @icall_arg0(i32 0, i32 ()* @xTaskGetTickCount)
Pass incomplete
  call void @vListInsert(%struct.xLIST* %2, %struct.xLIST_ITEM* nonnull %xTimerListItem) #18, !dbg !1104
Pass incomplete
  call void @vListInsert(%struct.xLIST* %3, %struct.xLIST_ITEM* nonnull %xTimerListItem) #18, !dbg !1111
Indirect Call
  %2 = load void (%struct.tmrTimerControl*)*, void (%struct.tmrTimerControl*)** %pxCallbackFunction, align 4, !dbg !1094, !tbaa !1095
  %2 = load void (%struct.tmrTimerControl*)*, void (%struct.tmrTimerControl*)** %pxCallbackFunction, align 4, !dbg !1094, !tbaa !1095
Zero Target
Pass incomplete
  %7 = call i32 @icall_arg1p(i32 4, i8* bitcast (i32 (%struct.xLIST_ITEM*)* @uxListRemove to i8*), i8* %6, i32 ptrtoint (%struct.xLIST_ITEM* getelementptr (%struct.xLIST_ITEM, %struct.xLIST_ITEM* null, i32 1) to i32))
Indirect Call
  %7 = load void (%struct.tmrTimerControl*)*, void (%struct.tmrTimerControl*)** %pxCallbackFunction, align 4, !dbg !1104, !tbaa !1105
  %7 = load void (%struct.tmrTimerControl*)*, void (%struct.tmrTimerControl*)** %pxCallbackFunction, align 4, !dbg !1104, !tbaa !1105
Zero Target
Pass incomplete
Pass incomplete
  %call = call i8* @pvPortMalloc(i32 44) #18, !dbg !1083
  call void @xcall_arg1p(i32 4, i8* bitcast (void (%struct.xLIST_ITEM*)* @vListInitialiseItem to i8*), i8* %1, i32 ptrtoint (%struct.xLIST_ITEM* getelementptr (%struct.xLIST_ITEM, %struct.xLIST_ITEM* null, i32 1) to i32))
  %3 = call i32 @icall_arg0(i32 0, i32 ()* @xTaskGetSchedulerState)
Pass incomplete
  %call9 = call i32 @xQueueGenericSend(%struct.QueueDefinition* %3, i8* nonnull %0, i32 %xTicksToWait, i32 0) #18, !dbg !1144
Pass incomplete
  %call10 = call i32 @xQueueGenericSend(%struct.QueueDefinition* %4, i8* nonnull %0, i32 0, i32 0) #18, !dbg !1147
Pass incomplete
  %call13 = call i32 @xQueueGenericSendFromISR(%struct.QueueDefinition* nonnull %2, i8* nonnull %0, i32* %pxHigherPriorityTaskWoken, i32 0) #18, !dbg !1149
  call void @xcall_arg0(i32 0, void ()* @vPortEnterCritical)
  call void @xcall_arg0(i32 0, void ()* @vPortExitCritical)
  call void @xcall_arg0(i32 0, void ()* @vPortEnterCritical)
  call void @xcall_arg0(i32 0, void ()* @vPortExitCritical)
  call void @xcall_arg0(i32 0, void ()* @vPortEnterCritical)
  call void @xcall_arg0(i32 0, void ()* @vPortExitCritical)
  call void @xcall_arg0(i32 0, void ()* @vPortEnterCritical)
  call void @xcall_arg0(i32 0, void ()* @vPortExitCritical)
  call void @xcall_arg0(i32 0, void ()* @vPortEnterCritical)
  call void @xcall_arg0(i32 0, void ()* @vPortExitCritical)
Pass incomplete
  %call = call i8* @pvPortMalloc(i32 28) #18, !dbg !1075
  call void @xcall_arg1p(i32 4, i8* bitcast (void (%struct.xLIST*)* @vListInitialise to i8*), i8* %1, i32 ptrtoint (%struct.xLIST* getelementptr (%struct.xLIST, %struct.xLIST* null, i32 1) to i32))
  %3 = call i32 @icall_arg0(i32 0, i32 ()* @xTaskGetSchedulerState)
  call void @xcall_arg0(i32 0, void ()* @vTaskSuspendAll)
Pass incomplete
  call void @vTaskPlaceOnUnorderedEventList(%struct.xLIST* nonnull %xTasksWaitingForBits, i32 %or31, i32 %xTicksToWait) #18, !dbg !1160
  %7 = call i32 @icall_arg0(i32 0, i32 ()* @xTaskResumeAll)
  %7 = call i32 @icall_arg0(i32 0, i32 ()* @uxTaskResetEventItemValue)
  call void @xcall_arg0(i32 0, void ()* @vPortEnterCritical)
  call void @xcall_arg0(i32 0, void ()* @vPortExitCritical)
  call void @xcall_arg0(i32 0, void ()* @vTaskSuspendAll)
Pass incomplete
  call void @vTaskRemoveFromUnorderedEventList(%struct.xLIST_ITEM* %pxListItem.081, i32 %or44) #18, !dbg !1172
  %12 = call i32 @icall_arg0(i32 0, i32 ()* @xTaskResumeAll)
  %3 = call i32 @icall_arg0(i32 0, i32 ()* @xTaskGetSchedulerState)
  call void @xcall_arg0(i32 0, void ()* @vTaskSuspendAll)
Pass incomplete
  call void @vTaskPlaceOnUnorderedEventList(%struct.xLIST* nonnull %xTasksWaitingForBits, i32 %or49, i32 %xTicksToWait) #18, !dbg !1186
  %5 = call i32 @icall_arg0(i32 0, i32 ()* @xTaskResumeAll)
  %5 = call i32 @icall_arg0(i32 0, i32 ()* @uxTaskResetEventItemValue)
  call void @xcall_arg0(i32 0, void ()* @vPortEnterCritical)
  call void @xcall_arg0(i32 0, void ()* @vPortExitCritical)
  call void @xcall_arg0(i32 0, void ()* @vPortEnterCritical)
  call void @xcall_arg0(i32 0, void ()* @vPortExitCritical)
  call void @xcall_arg0(i32 0, void ()* @vTaskSuspendAll)
Pass incomplete
  call void @vTaskRemoveFromUnorderedEventList(%struct.xLIST_ITEM* %3, i32 33554432) #18, !dbg !1128
  call void @xcall_arg1p(i32 14, i8* bitcast (void (i8*)* @vPortFree to i8*), i8* %6, i32 ptrtoint (i8* getelementptr (i8, i8* null, i32 1) to i32))
  call void @xcall_arg0(i32 0, void ()* @vTaskSuspendAll)
  %7 = call i32 @icall_arg0(i32 0, i32 ()* @xTaskResumeAll)
  call void @xcall_arg0(i32 0, void ()* @vApplicationMallocFailedHook)
Pass incomplete
  %call = call i32 @xTaskCreate(void (i8*)* nonnull @vLEDFlashTask, i8* %0, i16 zeroext 130, i8* null, i32 %uxPriority, %struct.tskTaskControlBlock** null) #18, !dbg !1077
  call void @xcall_arg0(i32 0, void ()* @vPortEnterCritical)
  call void @xcall_arg0(i32 0, void ()* @vPortExitCritical)
  %3 = call i32 @icall_arg0(i32 0, i32 ()* @xTaskGetTickCount)
Pass incomplete
  %call2 = call i32 @xTaskDelayUntil(i32* nonnull %xLastFlashTime, i32 %div1) #18, !dbg !1095
  call void @xcall_arg1i(i32 10, i8* bitcast (void (i32)* @vParTestToggleLED to i8*), i32 %1, i32 %1)
  call void @xcall_arg1i(i32 10, i8* bitcast (void (i32)* @vParTestToggleLED to i8*), i32 %1, i32 %1)
  call void @xcall_arg1i(i32 17, i8* bitcast (void (i32)* @STM_EVAL_LEDInit to i8*), i32 0, i32 0)
  call void @xcall_arg1i(i32 17, i8* bitcast (void (i32)* @STM_EVAL_LEDInit to i8*), i32 2, i32 2)
  call void @xcall_arg1i(i32 17, i8* bitcast (void (i32)* @STM_EVAL_LEDOn to i8*), i32 %0, i32 %0)
  call void @xcall_arg1i(i32 17, i8* bitcast (void (i32)* @STM_EVAL_LEDOff to i8*), i32 %1, i32 %1)
  call void @xcall_arg0(i32 0, void ()* @vPortEnterCritical)
  call void @xcall_arg1i(i32 17, i8* bitcast (void (i32)* @STM_EVAL_LEDToggle to i8*), i32 %0, i32 %0)
  call void @xcall_arg1p(i32 5, i8* bitcast (void (%struct.GPIO_TypeDef*)* @GPIO_DeInit to i8*), i8* inttoptr (i32 1073872896 to i8*), i32 ptrtoint (%struct.GPIO_TypeDef* getelementptr (%struct.GPIO_TypeDef, %struct.GPIO_TypeDef* null, i32 1) to i32))
  call void @xcall_arg1p(i32 5, i8* bitcast (void (%struct.GPIO_TypeDef*)* @GPIO_DeInit to i8*), i8* inttoptr (i32 1073874944 to i8*), i32 ptrtoint (%struct.GPIO_TypeDef* getelementptr (%struct.GPIO_TypeDef, %struct.GPIO_TypeDef* null, i32 1) to i32))
  call void @xcall_arg1p(i32 5, i8* bitcast (void (%struct.GPIO_TypeDef*)* @GPIO_DeInit to i8*), i8* inttoptr (i32 1073876992 to i8*), i32 ptrtoint (%struct.GPIO_TypeDef* getelementptr (%struct.GPIO_TypeDef, %struct.GPIO_TypeDef* null, i32 1) to i32))
  call void @xcall_arg1p(i32 5, i8* bitcast (void (%struct.GPIO_TypeDef*)* @GPIO_DeInit to i8*), i8* inttoptr (i32 1073879040 to i8*), i32 ptrtoint (%struct.GPIO_TypeDef* getelementptr (%struct.GPIO_TypeDef, %struct.GPIO_TypeDef* null, i32 1) to i32))
  call void @xcall_arg1p(i32 5, i8* bitcast (void (%struct.GPIO_TypeDef*)* @GPIO_DeInit to i8*), i8* inttoptr (i32 1073881088 to i8*), i32 ptrtoint (%struct.GPIO_TypeDef* getelementptr (%struct.GPIO_TypeDef, %struct.GPIO_TypeDef* null, i32 1) to i32))
Pass incomplete
  call void @RCC_AHB1PeriphClockCmd(i32 %1, i32 1) #18, !dbg !1094
Pass incomplete
  call void @GPIO_Init(%struct.GPIO_TypeDef* %3, %struct.SEC_INFO* nonnull %GPIO_InitStructure) #18, !dbg !1117
Pass incomplete
  call void @RCC_AHB1PeriphClockCmd(i32 %3, i32 1) #18, !dbg !1112
Pass incomplete
  call void @RCC_APB2PeriphClockCmd(i32 16384, i32 1) #18, !dbg !1113
Pass incomplete
  call void @GPIO_Init(%struct.GPIO_TypeDef* %5, %struct.SEC_INFO* nonnull %GPIO_InitStructure) #18, !dbg !1130
Pass incomplete
  call void @SYSCFG_EXTILineConfig(i8 zeroext %conv5, i8 zeroext %conv7) #18, !dbg !1137
  call void @xcall_arg1p(i32 15, i8* bitcast (void (%struct.EXTI_InitTypeDef*)* @EXTI_Init to i8*), i8* %10, i32 mul nuw (i32 ptrtoint (i32* getelementptr (i32, i32* null, i32 1) to i32), i32 4))
  call void @xcall_arg1p(i32 1, i8* bitcast (void (%struct.NVIC_InitTypeDef*)* @NVIC_Init to i8*), i8* %11, i32 ptrtoint (%struct.NVIC_InitTypeDef* getelementptr (%struct.NVIC_InitTypeDef, %struct.NVIC_InitTypeDef* null, i32 1) to i32))
Pass incomplete
  %call = call zeroext i8 @GPIO_ReadInputDataBit(%struct.GPIO_TypeDef* %0, i16 zeroext %1) #18, !dbg !1083
Pass incomplete
  call void @RCC_AHB1PeriphClockCmd(i32 %or, i32 1) #18, !dbg !1109
Pass incomplete
  call void @RCC_APB2PeriphClockCmd(i32 32, i32 1) #18, !dbg !1113
Pass incomplete
  call void @GPIO_PinAFConfig(%struct.GPIO_TypeDef* %3, i16 zeroext %4, i8 zeroext %conv) #18, !dbg !1123
Pass incomplete
  call void @GPIO_PinAFConfig(%struct.GPIO_TypeDef* %6, i16 zeroext %7, i8 zeroext %conv9) #18, !dbg !1127
Pass incomplete
  call void @GPIO_Init(%struct.GPIO_TypeDef* %10, %struct.SEC_INFO* nonnull %GPIO_InitStructure) #18, !dbg !1146
Pass incomplete
  call void @GPIO_Init(%struct.GPIO_TypeDef* %12, %struct.SEC_INFO* nonnull %GPIO_InitStructure) #18, !dbg !1151
Pass incomplete
  call void @RCC_AHB1PeriphResetCmd(i32 1, i32 1) #18, !dbg !1075
Pass incomplete
  call void @RCC_AHB1PeriphResetCmd(i32 1, i32 0) #18, !dbg !1078
Pass incomplete
  call void @RCC_AHB1PeriphResetCmd(i32 2, i32 1) #18, !dbg !1080
Pass incomplete
  call void @RCC_AHB1PeriphResetCmd(i32 2, i32 0) #18, !dbg !1083
Pass incomplete
  call void @RCC_AHB1PeriphResetCmd(i32 4, i32 1) #18, !dbg !1085
Pass incomplete
  call void @RCC_AHB1PeriphResetCmd(i32 4, i32 0) #18, !dbg !1088
Pass incomplete
  call void @RCC_AHB1PeriphResetCmd(i32 8, i32 1) #18, !dbg !1090
Pass incomplete
  call void @RCC_AHB1PeriphResetCmd(i32 8, i32 0) #18, !dbg !1093
Pass incomplete
  call void @RCC_AHB1PeriphResetCmd(i32 16, i32 1) #18, !dbg !1095
Pass incomplete
  call void @RCC_AHB1PeriphResetCmd(i32 16, i32 0) #18, !dbg !1098
Pass incomplete
  call void @RCC_AHB1PeriphResetCmd(i32 32, i32 1) #18, !dbg !1100
Pass incomplete
  call void @RCC_AHB1PeriphResetCmd(i32 32, i32 0) #18, !dbg !1103
Pass incomplete
  call void @RCC_AHB1PeriphResetCmd(i32 64, i32 1) #18, !dbg !1105
Pass incomplete
  call void @RCC_AHB1PeriphResetCmd(i32 64, i32 0) #18, !dbg !1108
Pass incomplete
  call void @RCC_AHB1PeriphResetCmd(i32 128, i32 1) #18, !dbg !1110
Pass incomplete
  call void @RCC_AHB1PeriphResetCmd(i32 128, i32 0) #18, !dbg !1113
Pass incomplete
  call void @RCC_AHB1PeriphResetCmd(i32 256, i32 1) #18, !dbg !1115
Pass incomplete
  call void @RCC_AHB1PeriphResetCmd(i32 256, i32 0) #18, !dbg !1119
Pass incomplete
  call void @RCC_APB2PeriphResetCmd(i32 16384, i32 1) #18, !dbg !1071
Pass incomplete
  call void @RCC_APB2PeriphResetCmd(i32 16384, i32 0) #18, !dbg !1072
temp.bc updated
; Function Attrs: nounwind
define dso_local void @vTaskSwitchContext() #0 section ".csection0" !dbg !1068 {
entry:
  %0 = load volatile i32, i32* @uxSchedulerSuspended, align 4, !dbg !1084, !tbaa !1085
  %cmp.not = icmp eq i32 %0, 0, !dbg !1089
  br i1 %cmp.not, label %if.else, label %if.then, !dbg !1090

if.then:                                          ; preds = %entry
  store volatile i32 1, i32* @xYieldPending, align 4, !dbg !1091, !tbaa !1085
  br label %if.end29, !dbg !1093

if.else:                                          ; preds = %entry
  store volatile i32 0, i32* @xYieldPending, align 4, !dbg !1094, !tbaa !1085
  %1 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !1095, !tbaa !1096
  %pxStack = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %1, i32 0, i32 4, !dbg !1095
  %2 = load i32*, i32** %pxStack, align 4, !dbg !1095, !tbaa !1098
  call void @llvm.dbg.value(metadata i32* %2, metadata !1072, metadata !DIExpression()), !dbg !1102
  call void @llvm.dbg.value(metadata i32 -1515870811, metadata !1078, metadata !DIExpression()), !dbg !1102
  %3 = load i32, i32* %2, align 4, !dbg !1103, !tbaa !1105
  %cmp1.not = icmp eq i32 %3, -1515870811, !dbg !1103
  br i1 %cmp1.not, label %lor.lhs.false, label %if.then10, !dbg !1103

lor.lhs.false:                                    ; preds = %if.else
  %arrayidx2 = getelementptr inbounds i32, i32* %2, i32 1, !dbg !1103
  %4 = load i32, i32* %arrayidx2, align 4, !dbg !1103, !tbaa !1105
  %cmp3.not = icmp eq i32 %4, -1515870811, !dbg !1103
  br i1 %cmp3.not, label %lor.lhs.false4, label %if.then10, !dbg !1103

lor.lhs.false4:                                   ; preds = %lor.lhs.false
  %arrayidx5 = getelementptr inbounds i32, i32* %2, i32 2, !dbg !1103
  %5 = load i32, i32* %arrayidx5, align 4, !dbg !1103, !tbaa !1105
  %cmp6.not = icmp eq i32 %5, -1515870811, !dbg !1103
  br i1 %cmp6.not, label %lor.lhs.false7, label %if.then10, !dbg !1103

lor.lhs.false7:                                   ; preds = %lor.lhs.false4
  %arrayidx8 = getelementptr inbounds i32, i32* %2, i32 3, !dbg !1103
  %6 = load i32, i32* %arrayidx8, align 4, !dbg !1103, !tbaa !1105
  %cmp9.not = icmp eq i32 %6, -1515870811, !dbg !1103
  br i1 %cmp9.not, label %if.end, label %if.then10, !dbg !1095

if.then10:                                        ; preds = %lor.lhs.false7, %lor.lhs.false4, %lor.lhs.false, %if.else
  %7 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !1106, !tbaa !1096
  %8 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !1106, !tbaa !1096
  %arraydecay = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %8, i32 0, i32 5, i32 0, !dbg !1106
  call void @vApplicationStackOverflowHook(%struct.tskTaskControlBlock* %7, i8* nonnull %arraydecay) #18, !dbg !1106
  br label %if.end, !dbg !1106

if.end:                                           ; preds = %if.then10, %lor.lhs.false7
  %9 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !1108, !tbaa !1085
  call void @llvm.dbg.value(metadata i32 %9, metadata !1109, metadata !DIExpression()) #18, !dbg !1115
  %10 = call i8 asm sideeffect "clz $0, $1", "=r,r,~{memory}"(i32 %9) #18, !dbg !1117, !srcloc !1118
  call void @llvm.dbg.value(metadata i8 %10, metadata !1114, metadata !DIExpression()) #18, !dbg !1115
  %conv = zext i8 %10 to i32, !dbg !1108
  %sub = sub nsw i32 31, %conv, !dbg !1108
  call void @llvm.dbg.value(metadata i32 %sub, metadata !1079, metadata !DIExpression()), !dbg !1119
  %uxNumberOfItems = getelementptr inbounds [5 x %struct.xLIST], [5 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %sub, i32 0, !dbg !1120
  %11 = load volatile i32, i32* %uxNumberOfItems, align 4, !dbg !1120, !tbaa !1122
  %cmp12.not = icmp eq i32 %11, 0, !dbg !1120
  br i1 %cmp12.not, label %if.then16, label %if.end17, !dbg !1108

if.then16:                                        ; preds = %if.end
  %12 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #18, !dbg !1125, !srcloc !1131
  call void @llvm.dbg.value(metadata i32 %12, metadata !1128, metadata !DIExpression()) #18, !dbg !1132
  br label %for.cond, !dbg !1133

for.cond:                                         ; preds = %for.cond, %if.then16
  br label %for.cond, !dbg !1134, !llvm.loop !1137

if.end17:                                         ; preds = %if.end
  call void @llvm.dbg.value(metadata %struct.xLIST* undef, metadata !1081, metadata !DIExpression()), !dbg !1140
  %pxIndex = getelementptr inbounds [5 x %struct.xLIST], [5 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %sub, i32 1, !dbg !1141
  %13 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %pxIndex, align 4, !dbg !1141, !tbaa !1142
  %pxNext = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %13, i32 0, i32 1, !dbg !1141
  %14 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %pxNext, align 4, !dbg !1141, !tbaa !1143
  store %struct.xLIST_ITEM* %14, %struct.xLIST_ITEM** %pxIndex, align 4, !dbg !1141, !tbaa !1142
  %xListEnd = getelementptr inbounds [5 x %struct.xLIST], [5 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %sub, i32 2, !dbg !1144
  %15 = bitcast %struct.xMINI_LIST_ITEM* %xListEnd to %struct.xLIST_ITEM*, !dbg !1144
  %cmp21 = icmp eq %struct.xLIST_ITEM* %14, %15, !dbg !1144
  br i1 %cmp21, label %if.then23, label %if.end27, !dbg !1141

if.then23:                                        ; preds = %if.end17
  %pxNext25 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %14, i32 0, i32 1, !dbg !1146
  %16 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %pxNext25, align 4, !dbg !1146, !tbaa !1143
  store %struct.xLIST_ITEM* %16, %struct.xLIST_ITEM** %pxIndex, align 4, !dbg !1146, !tbaa !1142
  br label %if.end27, !dbg !1146

if.end27:                                         ; preds = %if.then23, %if.end17
  %17 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %pxIndex, align 4, !dbg !1141, !tbaa !1142
  %pvOwner = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %17, i32 0, i32 3, !dbg !1141
  %18 = bitcast i8** %pvOwner to %struct.tskTaskControlBlock**, !dbg !1141
  %19 = load %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** %18, align 4, !dbg !1141, !tbaa !1148
  store volatile %struct.tskTaskControlBlock* %19, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !1141, !tbaa !1096
  br label %if.end29

if.end29:                                         ; preds = %if.end27, %if.then
  ret void, !dbg !1149
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata %0, metadata %1, metadata %2) #1 section ".csection13"

; Function Attrs: nounwind
define dso_local i32 @xTaskCreate(void (i8*)* %pxTaskCode, i8* readonly %pcName, i16 zeroext %usStackDepth, i8* %pvParameters, i32 %uxPriority, %struct.tskTaskControlBlock** %pxCreatedTask) local_unnamed_addr #0 section ".csection0" !dbg !1150 {
entry:
  call void @llvm.dbg.value(metadata void (i8*)* %pxTaskCode, metadata !1163, metadata !DIExpression()), !dbg !1173
  call void @llvm.dbg.value(metadata i8* %pcName, metadata !1164, metadata !DIExpression()), !dbg !1173
  call void @llvm.dbg.value(metadata i16 %usStackDepth, metadata !1165, metadata !DIExpression()), !dbg !1173
  call void @llvm.dbg.value(metadata i8* %pvParameters, metadata !1166, metadata !DIExpression()), !dbg !1173
  call void @llvm.dbg.value(metadata i32 %uxPriority, metadata !1167, metadata !DIExpression()), !dbg !1173
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock** %pxCreatedTask, metadata !1168, metadata !DIExpression()), !dbg !1173
  %conv = zext i16 %usStackDepth to i32, !dbg !1174
  %mul = shl nuw nsw i32 %conv, 2, !dbg !1175
  %call = call i8* @pvPortMalloc(i32 %mul) #18, !dbg !1176
  call void @llvm.dbg.value(metadata i8* %call, metadata !1171, metadata !DIExpression()), !dbg !1177
  %cmp.not = icmp eq i8* %call, null, !dbg !1178
  br i1 %cmp.not, label %if.end8, label %if.then, !dbg !1180

if.then:                                          ; preds = %entry
  %call2 = call i8* @pvPortMalloc(i32 88) #18, !dbg !1181
  call void @llvm.dbg.value(metadata i8* %call2, metadata !1169, metadata !DIExpression()), !dbg !1173
  %cmp3.not = icmp eq i8* %call2, null, !dbg !1183
  br i1 %cmp3.not, label %if.else, label %if.then5, !dbg !1185

if.then5:                                         ; preds = %if.then
  %0 = bitcast i8* %call2 to %struct.tskTaskControlBlock*, !dbg !1186
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %0, metadata !1169, metadata !DIExpression()), !dbg !1173
  %pxStack6 = getelementptr inbounds i8, i8* %call2, i32 48, !dbg !1187
  %1 = bitcast i8* %pxStack6 to i8**, !dbg !1189
  store i8* %call, i8** %1, align 4, !dbg !1189, !tbaa !1098
  br label %if.end8, !dbg !1190

if.else:                                          ; preds = %if.then
  call void @xcall_arg1p(i32 14, i8* bitcast (void (i8*)* @vPortFree to i8*), i8* %call, i32 ptrtoint (i8* getelementptr (i8, i8* null, i32 1) to i32)), !dbg !1191
  br label %if.end8

if.end8:                                          ; preds = %if.else, %if.then5, %entry
  %pxNewTCB.0 = phi %struct.tskTaskControlBlock* [ %0, %if.then5 ], [ null, %if.else ], [ null, %entry ], !dbg !1193
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %pxNewTCB.0, metadata !1169, metadata !DIExpression()), !dbg !1173
  %cmp9.not = icmp eq %struct.tskTaskControlBlock* %pxNewTCB.0, null, !dbg !1194
  br i1 %cmp9.not, label %if.end14, label %if.then11, !dbg !1196

if.then11:                                        ; preds = %if.end8
  call fastcc void @prvInitialiseNewTask(void (i8*)* %pxTaskCode, i8* %pcName, i32 %conv, i8* %pvParameters, i32 %uxPriority, %struct.tskTaskControlBlock** %pxCreatedTask, %struct.tskTaskControlBlock* nonnull %pxNewTCB.0), !dbg !1197
  call fastcc void @prvAddNewTaskToReadyList(%struct.tskTaskControlBlock* nonnull %pxNewTCB.0), !dbg !1199
  call void @llvm.dbg.value(metadata i32 1, metadata !1170, metadata !DIExpression()), !dbg !1173
  br label %if.end14, !dbg !1200

if.end14:                                         ; preds = %if.then11, %if.end8
  %xReturn.0 = phi i32 [ 1, %if.then11 ], [ -1, %if.end8 ], !dbg !1201
  call void @llvm.dbg.value(metadata i32 %xReturn.0, metadata !1170, metadata !DIExpression()), !dbg !1173
  ret i32 %xReturn.0, !dbg !1202
}

; Function Attrs: nounwind
define internal fastcc void @prvInitialiseNewTask(void (i8*)* %pxTaskCode, i8* readonly %pcName, i32 %ulStackDepth, i8* %pvParameters, i32 %uxPriority, %struct.tskTaskControlBlock** %pxCreatedTask, %struct.tskTaskControlBlock* %pxNewTCB) unnamed_addr #0 section ".csection0" !dbg !1203 {
entry:
  call void @llvm.dbg.value(metadata void (i8*)* %pxTaskCode, metadata !1216, metadata !DIExpression()), !dbg !1226
  call void @llvm.dbg.value(metadata i8* %pcName, metadata !1217, metadata !DIExpression()), !dbg !1226
  call void @llvm.dbg.value(metadata i32 %ulStackDepth, metadata !1218, metadata !DIExpression()), !dbg !1226
  call void @llvm.dbg.value(metadata i8* %pvParameters, metadata !1219, metadata !DIExpression()), !dbg !1226
  call void @llvm.dbg.value(metadata i32 %uxPriority, metadata !1220, metadata !DIExpression()), !dbg !1226
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock** %pxCreatedTask, metadata !1221, metadata !DIExpression()), !dbg !1226
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %pxNewTCB, metadata !1222, metadata !DIExpression()), !dbg !1226
  call void @llvm.dbg.value(metadata %struct.xMEMORY_REGION* undef, metadata !1223, metadata !DIExpression()), !dbg !1226
  %pxStack = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %pxNewTCB, i32 0, i32 4, !dbg !1227
  %0 = bitcast i32** %pxStack to i8**, !dbg !1227
  %1 = load i8*, i8** %0, align 4, !dbg !1227, !tbaa !1098
  %mul = shl i32 %ulStackDepth, 2, !dbg !1229
  call void @llvm.memset.p0i8.i32(i8* align 4 %1, i8 -91, i32 %mul, i1 false), !dbg !1230
  %2 = load i32*, i32** %pxStack, align 4, !dbg !1231, !tbaa !1098
  %sub = add i32 %ulStackDepth, -1, !dbg !1233
  %arrayidx = getelementptr inbounds i32, i32* %2, i32 %sub, !dbg !1234
  call void @llvm.dbg.value(metadata i32* %arrayidx, metadata !1224, metadata !DIExpression()), !dbg !1226
  %3 = ptrtoint i32* %arrayidx to i32, !dbg !1235
  %and = and i32 %3, -8, !dbg !1236
  %4 = inttoptr i32 %and to i32*, !dbg !1237
  call void @llvm.dbg.value(metadata i32* %4, metadata !1224, metadata !DIExpression()), !dbg !1226
  %cmp5.not = icmp eq i8* %pcName, null, !dbg !1238
  br i1 %cmp5.not, label %if.else21, label %for.body, !dbg !1240

for.body:                                         ; preds = %for.body, %entry
  %x.01 = phi i32 [ %inc, %for.body ], [ 0, %entry ]
  call void @llvm.dbg.value(metadata i32 %x.01, metadata !1225, metadata !DIExpression()), !dbg !1226
  %arrayidx11 = getelementptr inbounds i8, i8* %pcName, i32 %x.01, !dbg !1241
  %5 = load i8, i8* %arrayidx11, align 1, !dbg !1241, !tbaa !1246
  %arrayidx12 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %pxNewTCB, i32 0, i32 5, i32 %x.01, !dbg !1247
  store i8 %5, i8* %arrayidx12, align 1, !dbg !1248, !tbaa !1246
  %6 = load i8, i8* %arrayidx11, align 1, !dbg !1249, !tbaa !1246
  %cmp15 = icmp ne i8 %6, 0, !dbg !1251
  %inc = add nuw nsw i32 %x.01, 1, !dbg !1252
  call void @llvm.dbg.value(metadata i32 %inc, metadata !1225, metadata !DIExpression()), !dbg !1226
  %cmp9 = icmp ult i32 %x.01, 9
  %or.cond = and i1 %cmp15, %cmp9, !dbg !1253
  call void @llvm.dbg.value(metadata i32 %inc, metadata !1225, metadata !DIExpression()), !dbg !1226
  br i1 %or.cond, label %for.body, label %for.end, !dbg !1253, !llvm.loop !1254

for.end:                                          ; preds = %for.body
  %arrayidx20 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %pxNewTCB, i32 0, i32 5, i32 9, !dbg !1258
  store i8 0, i8* %arrayidx20, align 1, !dbg !1259, !tbaa !1246
  br label %if.end24, !dbg !1260

if.else21:                                        ; preds = %entry
  %arrayidx23 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %pxNewTCB, i32 0, i32 5, i32 0, !dbg !1261
  store i8 0, i8* %arrayidx23, align 4, !dbg !1263, !tbaa !1246
  br label %if.end24

if.end24:                                         ; preds = %if.else21, %for.end
  %cmp25 = icmp ugt i32 %uxPriority, 4, !dbg !1264
  br i1 %cmp25, label %if.then29, label %if.end36, !dbg !1266

if.then29:                                        ; preds = %if.end24
  %7 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #18, !dbg !1267, !srcloc !1131
  call void @llvm.dbg.value(metadata i32 %7, metadata !1128, metadata !DIExpression()) #18, !dbg !1270
  br label %for.cond30, !dbg !1271

for.cond30:                                       ; preds = %for.cond30, %if.then29
  br label %for.cond30, !dbg !1272, !llvm.loop !1275

if.end36:                                         ; preds = %if.end24
  call void @llvm.dbg.value(metadata i32 %uxPriority, metadata !1220, metadata !DIExpression()), !dbg !1226
  %uxPriority37 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %pxNewTCB, i32 0, i32 3, !dbg !1277
  store i32 %uxPriority, i32* %uxPriority37, align 4, !dbg !1278, !tbaa !1279
  %uxBasePriority = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %pxNewTCB, i32 0, i32 8, !dbg !1280
  store i32 %uxPriority, i32* %uxBasePriority, align 4, !dbg !1282, !tbaa !1283
  %uxMutexesHeld = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %pxNewTCB, i32 0, i32 9, !dbg !1284
  store i32 0, i32* %uxMutexesHeld, align 4, !dbg !1285, !tbaa !1286
  %xStateListItem = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %pxNewTCB, i32 0, i32 1, !dbg !1287
  call void @xcall_arg1p(i32 4, i8* bitcast (void (%struct.xLIST_ITEM*)* @vListInitialiseItem to i8*), i8* %10, i32 ptrtoint (%struct.xLIST_ITEM* getelementptr (%struct.xLIST_ITEM, %struct.xLIST_ITEM* null, i32 1) to i32)), !dbg !1288
  %xEventListItem = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %pxNewTCB, i32 0, i32 2, !dbg !1289
  call void @xcall_arg1p(i32 4, i8* bitcast (void (%struct.xLIST_ITEM*)* @vListInitialiseItem to i8*), i8* %11, i32 ptrtoint (%struct.xLIST_ITEM* getelementptr (%struct.xLIST_ITEM, %struct.xLIST_ITEM* null, i32 1) to i32)), !dbg !1290
  %pvOwner = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %pxNewTCB, i32 0, i32 1, i32 3, !dbg !1291
  %8 = bitcast i8** %pvOwner to %struct.tskTaskControlBlock**, !dbg !1291
  store %struct.tskTaskControlBlock* %pxNewTCB, %struct.tskTaskControlBlock** %8, align 4, !dbg !1291, !tbaa !1292
  %sub39 = sub i32 5, %uxPriority, !dbg !1293
  %xItemValue = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %xEventListItem, i32 0, i32 0, !dbg !1293
  store i32 %sub39, i32* %xItemValue, align 4, !dbg !1293, !tbaa !1294
  %pvOwner42 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %pxNewTCB, i32 0, i32 2, i32 3, !dbg !1295
  %9 = bitcast i8** %pvOwner42 to %struct.tskTaskControlBlock**, !dbg !1295
  store %struct.tskTaskControlBlock* %pxNewTCB, %struct.tskTaskControlBlock** %9, align 4, !dbg !1295, !tbaa !1296
  %arrayidx43 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %pxNewTCB, i32 0, i32 10, i32 0, !dbg !1297
  store i32 0, i32* %arrayidx43, align 4, !dbg !1299
  %arrayidx44 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %pxNewTCB, i32 0, i32 11, i32 0, !dbg !1300
  store i8 0, i8* %arrayidx44, align 4, !dbg !1301
  %call = call i32* @pxPortInitialiseStack(i32* %4, void (i8*)* %pxTaskCode, i8* %pvParameters) #18, !dbg !1302
  %pxTopOfStack45 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %pxNewTCB, i32 0, i32 0, !dbg !1305
  store i32* %call, i32** %pxTopOfStack45, align 4, !dbg !1306, !tbaa !1307
  %cmp46.not = icmp eq %struct.tskTaskControlBlock** %pxCreatedTask, null, !dbg !1308
  br i1 %cmp46.not, label %if.end50, label %if.then48, !dbg !1310
  %10 = bitcast %struct.xLIST_ITEM* %xStateListItem to i8*
  %11 = bitcast %struct.xLIST_ITEM* %xEventListItem to i8*

if.then48:                                        ; preds = %if.end36
  store %struct.tskTaskControlBlock* %pxNewTCB, %struct.tskTaskControlBlock** %pxCreatedTask, align 4, !dbg !1311, !tbaa !1096
  br label %if.end50, !dbg !1313

if.end50:                                         ; preds = %if.then48, %if.end36
  ret void, !dbg !1314
}

; Function Attrs: nounwind
define internal fastcc void @prvAddNewTaskToReadyList(%struct.tskTaskControlBlock* %pxNewTCB) unnamed_addr #0 section ".csection0" !dbg !1315 {
entry:
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %pxNewTCB, metadata !1319, metadata !DIExpression()), !dbg !1320
  call void @vPortEnterCritical() #18, !dbg !1321
  %0 = load volatile i32, i32* @uxCurrentNumberOfTasks, align 4, !dbg !1322, !tbaa !1085
  %inc = add i32 %0, 1, !dbg !1322
  store volatile i32 %inc, i32* @uxCurrentNumberOfTasks, align 4, !dbg !1322, !tbaa !1085
  %1 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !1324, !tbaa !1096
  %cmp = icmp eq %struct.tskTaskControlBlock* %1, null, !dbg !1326
  br i1 %cmp, label %if.then, label %if.else3, !dbg !1327

if.then:                                          ; preds = %entry
  store volatile %struct.tskTaskControlBlock* %pxNewTCB, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !1328, !tbaa !1096
  %2 = load volatile i32, i32* @uxCurrentNumberOfTasks, align 4, !dbg !1330, !tbaa !1085
  %cmp1 = icmp eq i32 %2, 1, !dbg !1332
  br i1 %cmp1, label %if.then2, label %if.end13, !dbg !1333

if.then2:                                         ; preds = %if.then
  call fastcc void @prvInitialiseTaskLists(), !dbg !1334
  br label %if.end13, !dbg !1336

if.else3:                                         ; preds = %entry
  %3 = load volatile i32, i32* @xSchedulerRunning, align 4, !dbg !1337, !tbaa !1085
  %cmp4 = icmp eq i32 %3, 0, !dbg !1340
  br i1 %cmp4, label %if.then5, label %if.end13, !dbg !1341

if.then5:                                         ; preds = %if.else3
  %4 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !1342, !tbaa !1096
  %uxPriority = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %4, i32 0, i32 3, !dbg !1345
  %5 = load i32, i32* %uxPriority, align 4, !dbg !1345, !tbaa !1279
  %uxPriority6 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %pxNewTCB, i32 0, i32 3, !dbg !1346
  %6 = load i32, i32* %uxPriority6, align 4, !dbg !1346, !tbaa !1279
  %cmp7.not = icmp ugt i32 %5, %6, !dbg !1347
  br i1 %cmp7.not, label %if.end13, label %if.then8, !dbg !1348

if.then8:                                         ; preds = %if.then5
  store volatile %struct.tskTaskControlBlock* %pxNewTCB, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !1349, !tbaa !1096
  br label %if.end13, !dbg !1351

if.end13:                                         ; preds = %if.then8, %if.then5, %if.else3, %if.then2, %if.then
  %7 = load i32, i32* @uxTaskNumber, align 4, !dbg !1352, !tbaa !1085
  %inc14 = add i32 %7, 1, !dbg !1352
  store i32 %inc14, i32* @uxTaskNumber, align 4, !dbg !1352, !tbaa !1085
  %uxTCBNumber = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %pxNewTCB, i32 0, i32 6, !dbg !1353
  store i32 %inc14, i32* %uxTCBNumber, align 4, !dbg !1355, !tbaa !1356
  %uxPriority15 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %pxNewTCB, i32 0, i32 3, !dbg !1357
  %8 = load i32, i32* %uxPriority15, align 4, !dbg !1357, !tbaa !1279
  %shl = shl i32 1, %8, !dbg !1357
  %9 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !1357, !tbaa !1085
  %or = or i32 %9, %shl, !dbg !1357
  store volatile i32 %or, i32* @uxTopReadyPriority, align 4, !dbg !1357, !tbaa !1085
  %arrayidx = getelementptr inbounds [5 x %struct.xLIST], [5 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %8, !dbg !1357
  %xStateListItem = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %pxNewTCB, i32 0, i32 1, !dbg !1357
  call void @vListInsertEnd(%struct.xLIST* nonnull %arrayidx, %struct.xLIST_ITEM* nonnull %xStateListItem) #18, !dbg !1357
  call void @vPortExitCritical() #18, !dbg !1358
  %10 = load volatile i32, i32* @xSchedulerRunning, align 4, !dbg !1359, !tbaa !1085
  %cmp17.not = icmp eq i32 %10, 0, !dbg !1361
  br i1 %cmp17.not, label %if.end26, label %if.then18, !dbg !1362

if.then18:                                        ; preds = %if.end13
  %11 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !1363, !tbaa !1096
  %uxPriority19 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %11, i32 0, i32 3, !dbg !1366
  %12 = load i32, i32* %uxPriority19, align 4, !dbg !1366, !tbaa !1279
  %13 = load i32, i32* %uxPriority15, align 4, !dbg !1367, !tbaa !1279
  %cmp21 = icmp ult i32 %12, %13, !dbg !1368
  br i1 %cmp21, label %if.then22, label %if.end26, !dbg !1369

if.then22:                                        ; preds = %if.then18
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !1370, !tbaa !1105
  call void asm sideeffect "dsb", "~{memory}"() #18, !dbg !1370, !srcloc !1373
  call void asm sideeffect "isb", ""() #18, !dbg !1370, !srcloc !1374
  br label %if.end26, !dbg !1375

if.end26:                                         ; preds = %if.then22, %if.then18, %if.end13
  ret void, !dbg !1376
}

; Function Attrs: nounwind
define internal fastcc void @prvInitialiseTaskLists() unnamed_addr #0 section ".csection0" !dbg !1377 {
entry:
  call void @llvm.dbg.value(metadata i32 0, metadata !1379, metadata !DIExpression()), !dbg !1380
  br label %for.body, !dbg !1381

for.body:                                         ; preds = %for.body, %entry
  %uxPriority.04 = phi i32 [ 0, %entry ], [ %inc, %for.body ]
  call void @llvm.dbg.value(metadata i32 %uxPriority.04, metadata !1379, metadata !DIExpression()), !dbg !1380
  %arrayidx = getelementptr inbounds [5 x %struct.xLIST], [5 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %uxPriority.04, !dbg !1383
  call void @xcall_arg1p(i32 4, i8* bitcast (void (%struct.xLIST*)* @vListInitialise to i8*), i8* %0, i32 ptrtoint (%struct.xLIST* getelementptr (%struct.xLIST, %struct.xLIST* null, i32 1) to i32)), !dbg !1386
  %inc = add nuw nsw i32 %uxPriority.04, 1, !dbg !1387
  call void @llvm.dbg.value(metadata i32 %inc, metadata !1379, metadata !DIExpression()), !dbg !1380
  %exitcond.not = icmp eq i32 %inc, 5, !dbg !1388
  br i1 %exitcond.not, label %for.end, label %for.body, !dbg !1381, !llvm.loop !1389
  %0 = bitcast %struct.xLIST* %arrayidx to i8*

for.end:                                          ; preds = %for.body
  call void @xcall_arg1p(i32 4, i8* bitcast (void (%struct.xLIST*)* @vListInitialise to i8*), i8* bitcast (%struct.xLIST* @xDelayedTaskList1 to i8*), i32 ptrtoint (%struct.xLIST* getelementptr (%struct.xLIST, %struct.xLIST* null, i32 1) to i32)), !dbg !1391
  call void @vListInitialise(%struct.xLIST* nonnull @xDelayedTaskList2) #18, !dbg !1392
  call void @xcall_arg1p(i32 4, i8* bitcast (void (%struct.xLIST*)* @vListInitialise to i8*), i8* bitcast (%struct.xLIST* @xPendingReadyList to i8*), i32 ptrtoint (%struct.xLIST* getelementptr (%struct.xLIST, %struct.xLIST* null, i32 1) to i32)), !dbg !1393
  call void @vListInitialise(%struct.xLIST* nonnull @xTasksWaitingTermination) #18, !dbg !1394
  call void @xcall_arg1p(i32 4, i8* bitcast (void (%struct.xLIST*)* @vListInitialise to i8*), i8* bitcast (%struct.xLIST* @xSuspendedTaskList to i8*), i32 ptrtoint (%struct.xLIST* getelementptr (%struct.xLIST, %struct.xLIST* null, i32 1) to i32)), !dbg !1396
  store volatile %struct.xLIST* @xDelayedTaskList1, %struct.xLIST** @pxDelayedTaskList, align 4, !dbg !1398, !tbaa !1096
  store volatile %struct.xLIST* @xDelayedTaskList2, %struct.xLIST** @pxOverflowDelayedTaskList, align 4, !dbg !1399, !tbaa !1096
  ret void, !dbg !1400
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly %0, i8 %1, i32 %2, i1 immarg %3) #2 section ".csection13"

; Function Attrs: nounwind
define dso_local void @vTaskDelete(%struct.tskTaskControlBlock* %xTaskToDelete) local_unnamed_addr #0 section ".csection0" !dbg !1401 {
entry:
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %xTaskToDelete, metadata !1405, metadata !DIExpression()), !dbg !1407
  call void @vPortEnterCritical() #18, !dbg !1408
  %cmp = icmp eq %struct.tskTaskControlBlock* %xTaskToDelete, null, !dbg !1409
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !1409

cond.true:                                        ; preds = %entry
  %0 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !1409, !tbaa !1096
  br label %cond.end, !dbg !1409

cond.end:                                         ; preds = %cond.true, %entry
  %cond = phi %struct.tskTaskControlBlock* [ %0, %cond.true ], [ %xTaskToDelete, %entry ], !dbg !1409
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %cond, metadata !1406, metadata !DIExpression()), !dbg !1407
  %xStateListItem = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %cond, i32 0, i32 1, !dbg !1411
  %call = call i32 @icall_arg1p(i32 4, i8* bitcast (i32 (%struct.xLIST_ITEM*)* @uxListRemove to i8*), i8* %1, i32 ptrtoint (%struct.xLIST_ITEM* getelementptr (%struct.xLIST_ITEM, %struct.xLIST_ITEM* null, i32 1) to i32)), !dbg !1413
  %cmp1 = icmp eq i32 %call, 0, !dbg !1414
  br i1 %cmp1, label %if.then, label %if.end5, !dbg !1415
  %1 = bitcast %struct.xLIST_ITEM* %xStateListItem to i8*

if.then:                                          ; preds = %cond.end
  %uxPriority = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %cond, i32 0, i32 3, !dbg !1416
  %2 = load i32, i32* %uxPriority, align 4, !dbg !1416, !tbaa !1279
  %uxNumberOfItems = getelementptr inbounds [5 x %struct.xLIST], [5 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %2, i32 0, !dbg !1416
  %3 = load volatile i32, i32* %uxNumberOfItems, align 4, !dbg !1416, !tbaa !1122
  %cmp2 = icmp eq i32 %3, 0, !dbg !1416
  br i1 %cmp2, label %if.then3, label %if.end5, !dbg !1420

if.then3:                                         ; preds = %if.then
  %shl = shl i32 1, %2, !dbg !1421
  %neg = xor i32 %shl, -1, !dbg !1421
  %4 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !1421, !tbaa !1085
  %and = and i32 %4, %neg, !dbg !1421
  store volatile i32 %and, i32* @uxTopReadyPriority, align 4, !dbg !1421, !tbaa !1085
  br label %if.end5, !dbg !1421

if.end5:                                          ; preds = %if.then3, %if.then, %cond.end
  %pvContainer = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %cond, i32 0, i32 2, i32 4, !dbg !1423
  %5 = load %struct.xLIST*, %struct.xLIST** %pvContainer, align 4, !dbg !1423, !tbaa !1425
  %cmp6.not = icmp eq %struct.xLIST* %5, null, !dbg !1426
  br i1 %cmp6.not, label %if.end11, label %if.then7, !dbg !1427

if.then7:                                         ; preds = %if.end5
  %xEventListItem = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %cond, i32 0, i32 2, !dbg !1423
  %call9 = call i32 @icall_arg1p(i32 4, i8* bitcast (i32 (%struct.xLIST_ITEM*)* @uxListRemove to i8*), i8* %6, i32 ptrtoint (%struct.xLIST_ITEM* getelementptr (%struct.xLIST_ITEM, %struct.xLIST_ITEM* null, i32 1) to i32)), !dbg !1428
  br label %if.end11, !dbg !1430
  %6 = bitcast %struct.xLIST_ITEM* %xEventListItem to i8*

if.end11:                                         ; preds = %if.then7, %if.end5
  %7 = load i32, i32* @uxTaskNumber, align 4, !dbg !1431, !tbaa !1085
  %inc = add i32 %7, 1, !dbg !1431
  store i32 %inc, i32* @uxTaskNumber, align 4, !dbg !1431, !tbaa !1085
  %8 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !1432, !tbaa !1096
  %cmp12 = icmp eq %struct.tskTaskControlBlock* %cond, %8, !dbg !1434
  br i1 %cmp12, label %if.then13, label %if.else16, !dbg !1435

if.then13:                                        ; preds = %if.end11
  call void @vListInsertEnd(%struct.xLIST* nonnull @xTasksWaitingTermination, %struct.xLIST_ITEM* nonnull %xStateListItem) #18, !dbg !1436
  %9 = load volatile i32, i32* @uxDeletedTasksWaitingCleanUp, align 4, !dbg !1438, !tbaa !1085
  %inc15 = add i32 %9, 1, !dbg !1438
  store volatile i32 %inc15, i32* @uxDeletedTasksWaitingCleanUp, align 4, !dbg !1438, !tbaa !1085
  br label %if.end17, !dbg !1439

if.else16:                                        ; preds = %if.end11
  %10 = load volatile i32, i32* @uxCurrentNumberOfTasks, align 4, !dbg !1440, !tbaa !1085
  %dec = add i32 %10, -1, !dbg !1440
  store volatile i32 %dec, i32* @uxCurrentNumberOfTasks, align 4, !dbg !1440, !tbaa !1085
  call fastcc void @prvDeleteTCB(%struct.tskTaskControlBlock* %cond), !dbg !1442
  call fastcc void @prvResetNextTaskUnblockTime(), !dbg !1443
  br label %if.end17

if.end17:                                         ; preds = %if.else16, %if.then13
  call void @vPortExitCritical() #18, !dbg !1444
  %11 = load volatile i32, i32* @xSchedulerRunning, align 4, !dbg !1445, !tbaa !1085
  %cmp18.not = icmp eq i32 %11, 0, !dbg !1447
  br i1 %cmp18.not, label %if.end29, label %if.then19, !dbg !1448

if.then19:                                        ; preds = %if.end17
  %12 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !1449, !tbaa !1096
  %cmp20 = icmp eq %struct.tskTaskControlBlock* %cond, %12, !dbg !1452
  br i1 %cmp20, label %if.then21, label %if.end29, !dbg !1453

if.then21:                                        ; preds = %if.then19
  %13 = load volatile i32, i32* @uxSchedulerSuspended, align 4, !dbg !1454, !tbaa !1085
  %cmp22.not = icmp eq i32 %13, 0, !dbg !1454
  br i1 %cmp22.not, label %if.end26, label %if.then25, !dbg !1457

if.then25:                                        ; preds = %if.then21
  %14 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #18, !dbg !1458, !srcloc !1131
  call void @llvm.dbg.value(metadata i32 %14, metadata !1128, metadata !DIExpression()) #18, !dbg !1461
  br label %for.cond, !dbg !1462

for.cond:                                         ; preds = %for.cond, %if.then25
  br label %for.cond, !dbg !1463, !llvm.loop !1466

if.end26:                                         ; preds = %if.then21
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !1468, !tbaa !1105
  call void asm sideeffect "dsb", "~{memory}"() #18, !dbg !1468, !srcloc !1470
  call void asm sideeffect "isb", ""() #18, !dbg !1468, !srcloc !1471
  br label %if.end29, !dbg !1472

if.end29:                                         ; preds = %if.end26, %if.then19, %if.end17
  ret void, !dbg !1473
}

; Function Attrs: nounwind
define internal fastcc void @prvDeleteTCB(%struct.tskTaskControlBlock* %pxTCB) unnamed_addr #0 section ".csection0" !dbg !1474 {
entry:
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %pxTCB, metadata !1476, metadata !DIExpression()), !dbg !1477
  %pxStack = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %pxTCB, i32 0, i32 4, !dbg !1478
  %0 = bitcast i32** %pxStack to i8**, !dbg !1478
  %1 = load i8*, i8** %0, align 4, !dbg !1478, !tbaa !1098
  call void @xcall_arg1p(i32 14, i8* bitcast (void (i8*)* @vPortFree to i8*), i8* %1, i32 ptrtoint (i8* getelementptr (i8, i8* null, i32 1) to i32)), !dbg !1480
  %2 = bitcast %struct.tskTaskControlBlock* %pxTCB to i8*, !dbg !1481
  call void @xcall_arg1p(i32 14, i8* bitcast (void (i8*)* @vPortFree to i8*), i8* %2, i32 ptrtoint (i8* getelementptr (i8, i8* null, i32 1) to i32)), !dbg !1482
  ret void, !dbg !1483
}

; Function Attrs: nofree norecurse nounwind willreturn
define internal fastcc void @prvResetNextTaskUnblockTime() unnamed_addr #3 section ".csection0" !dbg !1484 {
entry:
  %0 = load volatile %struct.xLIST*, %struct.xLIST** @pxDelayedTaskList, align 4, !dbg !1485, !tbaa !1096
  %uxNumberOfItems = getelementptr inbounds %struct.xLIST, %struct.xLIST* %0, i32 0, i32 0, !dbg !1485
  %1 = load volatile i32, i32* %uxNumberOfItems, align 4, !dbg !1485, !tbaa !1122
  %cmp = icmp eq i32 %1, 0, !dbg !1485
  br i1 %cmp, label %if.then, label %if.else, !dbg !1487

if.then:                                          ; preds = %entry
  store volatile i32 -1, i32* @xNextTaskUnblockTime, align 4, !dbg !1488, !tbaa !1105
  br label %if.end, !dbg !1490

if.else:                                          ; preds = %entry
  %2 = load volatile %struct.xLIST*, %struct.xLIST** @pxDelayedTaskList, align 4, !dbg !1491, !tbaa !1096
  %pxNext = getelementptr inbounds %struct.xLIST, %struct.xLIST* %2, i32 0, i32 2, i32 1, !dbg !1491
  %3 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %pxNext, align 4, !dbg !1491, !tbaa !1493
  %xItemValue = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %3, i32 0, i32 0, !dbg !1491
  %4 = load i32, i32* %xItemValue, align 4, !dbg !1491, !tbaa !1494
  store volatile i32 %4, i32* @xNextTaskUnblockTime, align 4, !dbg !1495, !tbaa !1105
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !1496
}

; Function Attrs: nounwind
define dso_local i32 @xTaskDelayUntil(i32* %pxPreviousWakeTime, i32 %xTimeIncrement) local_unnamed_addr #0 section ".csection0" !dbg !1497 {
entry:
  call void @llvm.dbg.value(metadata i32* %pxPreviousWakeTime, metadata !1504, metadata !DIExpression()), !dbg !1511
  call void @llvm.dbg.value(metadata i32 %xTimeIncrement, metadata !1505, metadata !DIExpression()), !dbg !1511
  call void @llvm.dbg.value(metadata i32 0, metadata !1508, metadata !DIExpression()), !dbg !1511
  %cmp = icmp eq i32* %pxPreviousWakeTime, null, !dbg !1512
  br i1 %cmp, label %if.then, label %if.end, !dbg !1514

if.then:                                          ; preds = %entry
  %0 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #18, !dbg !1515, !srcloc !1131
  call void @llvm.dbg.value(metadata i32 %0, metadata !1128, metadata !DIExpression()) #18, !dbg !1518
  br label %for.cond, !dbg !1519

for.cond:                                         ; preds = %for.cond, %if.then
  br label %for.cond, !dbg !1520, !llvm.loop !1523

if.end:                                           ; preds = %entry
  %cmp1.not = icmp eq i32 %xTimeIncrement, 0, !dbg !1525
  br i1 %cmp1.not, label %if.then4, label %if.end6, !dbg !1527

if.then4:                                         ; preds = %if.end
  %1 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #18, !dbg !1528, !srcloc !1131
  call void @llvm.dbg.value(metadata i32 %1, metadata !1128, metadata !DIExpression()) #18, !dbg !1531
  br label %for.cond5, !dbg !1532

for.cond5:                                        ; preds = %for.cond5, %if.then4
  br label %for.cond5, !dbg !1533, !llvm.loop !1536

if.end6:                                          ; preds = %if.end
  %2 = load volatile i32, i32* @uxSchedulerSuspended, align 4, !dbg !1538, !tbaa !1085
  %cmp7.not = icmp eq i32 %2, 0, !dbg !1538
  br i1 %cmp7.not, label %if.end13, label %if.then11, !dbg !1540

if.then11:                                        ; preds = %if.end6
  %3 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #18, !dbg !1541, !srcloc !1131
  call void @llvm.dbg.value(metadata i32 %3, metadata !1128, metadata !DIExpression()) #18, !dbg !1544
  br label %for.cond12, !dbg !1545

for.cond12:                                       ; preds = %for.cond12, %if.then11
  br label %for.cond12, !dbg !1546, !llvm.loop !1549

if.end13:                                         ; preds = %if.end6
  call void @vTaskSuspendAll(), !dbg !1551
  %4 = load volatile i32, i32* @xTickCount, align 4, !dbg !1552, !tbaa !1105
  call void @llvm.dbg.value(metadata i32 %4, metadata !1509, metadata !DIExpression()), !dbg !1553
  %5 = load i32, i32* %pxPreviousWakeTime, align 4, !dbg !1554, !tbaa !1105
  %add = add i32 %5, %xTimeIncrement, !dbg !1555
  call void @llvm.dbg.value(metadata i32 %add, metadata !1506, metadata !DIExpression()), !dbg !1511
  %cmp14 = icmp ult i32 %4, %5, !dbg !1556
  br i1 %cmp14, label %if.then16, label %if.else23, !dbg !1558

if.then16:                                        ; preds = %if.end13
  %cmp17 = icmp ult i32 %add, %5, !dbg !1559
  %cmp19 = icmp ugt i32 %add, %4
  %or.cond = and i1 %cmp17, %cmp19, !dbg !1562
  %not.or.cond.demorgan = and i1 %cmp17, %cmp19, !dbg !1562
  br label %if.end31, !dbg !1562

if.else23:                                        ; preds = %if.end13
  %cmp24 = icmp ult i32 %add, %5, !dbg !1563
  %cmp26 = icmp ugt i32 %add, %4
  %or.cond63 = or i1 %cmp24, %cmp26, !dbg !1566
  %not.or.cond63.demorgan = or i1 %cmp24, %cmp26, !dbg !1566
  br label %if.end31, !dbg !1566

if.end31:                                         ; preds = %if.else23, %if.then16
  %cmp32.not.in = phi i1 [ %not.or.cond.demorgan, %if.then16 ], [ %not.or.cond63.demorgan, %if.else23 ]
  %xShouldDelay.0.in = phi i1 [ %or.cond, %if.then16 ], [ %or.cond63, %if.else23 ]
  call void @llvm.dbg.value(metadata i1 %xShouldDelay.0.in, metadata !1508, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !1511
  store i32 %add, i32* %pxPreviousWakeTime, align 4, !dbg !1567, !tbaa !1105
  br i1 %cmp32.not.in, label %if.then34, label %if.end36, !dbg !1568

if.then34:                                        ; preds = %if.end31
  %sub = sub i32 %add, %4, !dbg !1569
  call fastcc void @prvAddCurrentTaskToDelayedList(i32 %sub, i32 0), !dbg !1572
  br label %if.end36, !dbg !1573

if.end36:                                         ; preds = %if.then34, %if.end31
  %call = call i32 @xTaskResumeAll(), !dbg !1574
  call void @llvm.dbg.value(metadata i32 %call, metadata !1507, metadata !DIExpression()), !dbg !1511
  %cmp37 = icmp eq i32 %call, 0, !dbg !1575
  br i1 %cmp37, label %if.then39, label %if.end41, !dbg !1577

if.then39:                                        ; preds = %if.end36
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !1578, !tbaa !1105
  call void asm sideeffect "dsb", "~{memory}"() #18, !dbg !1578, !srcloc !1581
  call void asm sideeffect "isb", ""() #18, !dbg !1578, !srcloc !1582
  br label %if.end41, !dbg !1583

if.end41:                                         ; preds = %if.then39, %if.end36
  %xShouldDelay.0 = zext i1 %xShouldDelay.0.in to i32, !dbg !1511
  call void @llvm.dbg.value(metadata i32 %xShouldDelay.0, metadata !1508, metadata !DIExpression()), !dbg !1511
  ret i32 %xShouldDelay.0, !dbg !1584
}

; Function Attrs: nounwind
define dso_local void @vTaskSuspendAll() local_unnamed_addr #0 section ".csection0" !dbg !1585 {
entry:
  %0 = load volatile i32, i32* @uxSchedulerSuspended, align 4, !dbg !1586, !tbaa !1085
  %inc = add i32 %0, 1, !dbg !1586
  store volatile i32 %inc, i32* @uxSchedulerSuspended, align 4, !dbg !1586, !tbaa !1085
  call void asm sideeffect "", "~{memory}"() #18, !dbg !1587, !srcloc !1588
  ret void, !dbg !1589
}

; Function Attrs: nounwind
define internal fastcc void @prvAddCurrentTaskToDelayedList(i32 %xTicksToWait, i32 %xCanBlockIndefinitely) unnamed_addr #0 section ".csection0" !dbg !1590 {
entry:
  call void @llvm.dbg.value(metadata i32 %xTicksToWait, metadata !1595, metadata !DIExpression()), !dbg !1599
  call void @llvm.dbg.value(metadata i32 %xCanBlockIndefinitely, metadata !1596, metadata !DIExpression()), !dbg !1599
  %0 = load volatile i32, i32* @xTickCount, align 4, !dbg !1600, !tbaa !1105
  call void @llvm.dbg.value(metadata i32 %0, metadata !1598, metadata !DIExpression()), !dbg !1599
  %1 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !1601, !tbaa !1096
  %xStateListItem = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %1, i32 0, i32 1, !dbg !1603
  %call = call i32 @icall_arg1p(i32 4, i8* bitcast (i32 (%struct.xLIST_ITEM*)* @uxListRemove to i8*), i8* %2, i32 ptrtoint (%struct.xLIST_ITEM* getelementptr (%struct.xLIST_ITEM, %struct.xLIST_ITEM* null, i32 1) to i32)), !dbg !1604
  %cmp = icmp eq i32 %call, 0, !dbg !1605
  br i1 %cmp, label %if.then, label %if.end, !dbg !1606
  %2 = bitcast %struct.xLIST_ITEM* %xStateListItem to i8*

if.then:                                          ; preds = %entry
  %3 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !1607, !tbaa !1096
  %uxPriority = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %3, i32 0, i32 3, !dbg !1607
  %4 = load i32, i32* %uxPriority, align 4, !dbg !1607, !tbaa !1279
  %shl = shl i32 1, %4, !dbg !1607
  %neg = xor i32 %shl, -1, !dbg !1607
  %5 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !1607, !tbaa !1085
  %and = and i32 %5, %neg, !dbg !1607
  store volatile i32 %and, i32* @uxTopReadyPriority, align 4, !dbg !1607, !tbaa !1085
  br label %if.end, !dbg !1609

if.end:                                           ; preds = %if.then, %entry
  %cmp1 = icmp eq i32 %xTicksToWait, -1, !dbg !1610
  %cmp2 = icmp ne i32 %xCanBlockIndefinitely, 0
  %or.cond = and i1 %cmp1, %cmp2, !dbg !1613
  br i1 %or.cond, label %if.then3, label %if.else5, !dbg !1613

if.then3:                                         ; preds = %if.end
  %6 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !1614, !tbaa !1096
  %xStateListItem4 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %6, i32 0, i32 1, !dbg !1616
  call void @vListInsertEnd(%struct.xLIST* nonnull @xSuspendedTaskList, %struct.xLIST_ITEM* nonnull %xStateListItem4) #18, !dbg !1617
  br label %if.end17, !dbg !1618

if.else5:                                         ; preds = %if.end
  %add = add i32 %0, %xTicksToWait, !dbg !1619
  call void @llvm.dbg.value(metadata i32 %add, metadata !1597, metadata !DIExpression()), !dbg !1599
  %7 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !1621, !tbaa !1096
  %xItemValue = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %7, i32 0, i32 1, i32 0, !dbg !1621
  store i32 %add, i32* %xItemValue, align 4, !dbg !1621, !tbaa !1622
  %cmp7 = icmp ult i32 %add, %0, !dbg !1623
  br i1 %cmp7, label %if.then8, label %if.else10, !dbg !1625

if.then8:                                         ; preds = %if.else5
  %8 = load volatile %struct.xLIST*, %struct.xLIST** @pxOverflowDelayedTaskList, align 4, !dbg !1626, !tbaa !1096
  %9 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !1628, !tbaa !1096
  %xStateListItem9 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %9, i32 0, i32 1, !dbg !1629
  call void @vListInsert(%struct.xLIST* %8, %struct.xLIST_ITEM* nonnull %xStateListItem9) #18, !dbg !1630
  br label %if.end17, !dbg !1631

if.else10:                                        ; preds = %if.else5
  %10 = load volatile %struct.xLIST*, %struct.xLIST** @pxDelayedTaskList, align 4, !dbg !1632, !tbaa !1096
  %11 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !1634, !tbaa !1096
  %xStateListItem11 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %11, i32 0, i32 1, !dbg !1635
  call void @vListInsert(%struct.xLIST* %10, %struct.xLIST_ITEM* nonnull %xStateListItem11) #18, !dbg !1636
  %12 = load volatile i32, i32* @xNextTaskUnblockTime, align 4, !dbg !1637, !tbaa !1105
  %cmp12 = icmp ult i32 %add, %12, !dbg !1639
  br i1 %cmp12, label %if.then13, label %if.end17, !dbg !1640

if.then13:                                        ; preds = %if.else10
  store volatile i32 %add, i32* @xNextTaskUnblockTime, align 4, !dbg !1641, !tbaa !1105
  br label %if.end17, !dbg !1643

if.end17:                                         ; preds = %if.then13, %if.else10, %if.then8, %if.then3
  ret void, !dbg !1644
}

; Function Attrs: nounwind
define dso_local i32 @xTaskResumeAll() local_unnamed_addr #0 section ".csection0" !dbg !1645 {
entry:
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* null, metadata !1648, metadata !DIExpression()), !dbg !1657
  call void @llvm.dbg.value(metadata i32 0, metadata !1649, metadata !DIExpression()), !dbg !1657
  %0 = load volatile i32, i32* @uxSchedulerSuspended, align 4, !dbg !1658, !tbaa !1085
  %cmp = icmp eq i32 %0, 0, !dbg !1658
  br i1 %cmp, label %if.then, label %if.end, !dbg !1660

if.then:                                          ; preds = %entry
  %1 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #18, !dbg !1661, !srcloc !1131
  call void @llvm.dbg.value(metadata i32 %1, metadata !1128, metadata !DIExpression()) #18, !dbg !1664
  br label %for.cond, !dbg !1665

for.cond:                                         ; preds = %for.cond, %if.then
  br label %for.cond, !dbg !1666, !llvm.loop !1669

if.end:                                           ; preds = %entry
  call void @vPortEnterCritical() #18, !dbg !1671
  %2 = load volatile i32, i32* @uxSchedulerSuspended, align 4, !dbg !1672, !tbaa !1085
  %dec = add i32 %2, -1, !dbg !1672
  store volatile i32 %dec, i32* @uxSchedulerSuspended, align 4, !dbg !1672, !tbaa !1085
  %3 = load volatile i32, i32* @uxSchedulerSuspended, align 4, !dbg !1673, !tbaa !1085
  %cmp1 = icmp eq i32 %3, 0, !dbg !1674
  br i1 %cmp1, label %if.then2, label %if.end35, !dbg !1675

if.then2:                                         ; preds = %if.end
  %4 = load volatile i32, i32* @uxCurrentNumberOfTasks, align 4, !dbg !1676, !tbaa !1085
  %cmp3.not = icmp eq i32 %4, 0, !dbg !1677
  br i1 %cmp3.not, label %if.end35, label %while.cond.preheader, !dbg !1678

while.cond.preheader:                             ; preds = %if.then2
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* null, metadata !1648, metadata !DIExpression()), !dbg !1657
  %5 = getelementptr %struct.xLIST, %struct.xLIST* @xPendingReadyList, i32 0, i32 0
  %6 = load volatile i32, i32* %5, align 4, !dbg !1679, !tbaa !1122
  %cmp5.not47 = icmp eq i32 %6, 0, !dbg !1679
  br i1 %cmp5.not47, label %if.end17, label %while.body, !dbg !1680

while.body:                                       ; preds = %if.end14, %while.cond.preheader
  %7 = getelementptr %struct.xLIST, %struct.xLIST* @xPendingReadyList, i32 0, i32 2, i32 1
  %8 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %7, align 4, !dbg !1681, !tbaa !1493
  %pvOwner = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %8, i32 0, i32 3, !dbg !1681
  %9 = bitcast i8** %pvOwner to %struct.tskTaskControlBlock**, !dbg !1681
  %10 = load %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** %9, align 4, !dbg !1681, !tbaa !1148
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %10, metadata !1648, metadata !DIExpression()), !dbg !1657
  %xEventListItem = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %10, i32 0, i32 2, !dbg !1683
  %call = call i32 @icall_arg1p(i32 4, i8* bitcast (i32 (%struct.xLIST_ITEM*)* @uxListRemove to i8*), i8* %16, i32 ptrtoint (%struct.xLIST_ITEM* getelementptr (%struct.xLIST_ITEM, %struct.xLIST_ITEM* null, i32 1) to i32)), !dbg !1684
  %xStateListItem = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %10, i32 0, i32 1, !dbg !1685
  %call7 = call i32 @icall_arg1p(i32 4, i8* bitcast (i32 (%struct.xLIST_ITEM*)* @uxListRemove to i8*), i8* %17, i32 ptrtoint (%struct.xLIST_ITEM* getelementptr (%struct.xLIST_ITEM, %struct.xLIST_ITEM* null, i32 1) to i32)), !dbg !1686
  %uxPriority = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %10, i32 0, i32 3, !dbg !1687
  %11 = load i32, i32* %uxPriority, align 4, !dbg !1687, !tbaa !1279
  %shl = shl i32 1, %11, !dbg !1687
  %12 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !1687, !tbaa !1085
  %or = or i32 %12, %shl, !dbg !1687
  store volatile i32 %or, i32* @uxTopReadyPriority, align 4, !dbg !1687, !tbaa !1085
  %arrayidx = getelementptr inbounds [5 x %struct.xLIST], [5 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %11, !dbg !1687
  call void @vListInsertEnd(%struct.xLIST* nonnull %arrayidx, %struct.xLIST_ITEM* nonnull %xStateListItem) #18, !dbg !1687
  %13 = load i32, i32* %uxPriority, align 4, !dbg !1688, !tbaa !1279
  %14 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !1690, !tbaa !1096
  %uxPriority11 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %14, i32 0, i32 3, !dbg !1691
  %15 = load i32, i32* %uxPriority11, align 4, !dbg !1691, !tbaa !1279
  %cmp12.not = icmp ult i32 %13, %15, !dbg !1692
  br i1 %cmp12.not, label %if.end14, label %if.then13, !dbg !1693
  %16 = bitcast %struct.xLIST_ITEM* %xEventListItem to i8*
  %17 = bitcast %struct.xLIST_ITEM* %xStateListItem to i8*

if.then13:                                        ; preds = %while.body
  store volatile i32 1, i32* @xYieldPending, align 4, !dbg !1694, !tbaa !1085
  br label %if.end14, !dbg !1696

if.end14:                                         ; preds = %if.then13, %while.body
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %10, metadata !1648, metadata !DIExpression()), !dbg !1657
  %18 = getelementptr %struct.xLIST, %struct.xLIST* @xPendingReadyList, i32 0, i32 0
  %19 = load volatile i32, i32* %18, align 4, !dbg !1679, !tbaa !1122
  %cmp5.not = icmp eq i32 %19, 0, !dbg !1679
  br i1 %cmp5.not, label %while.end.loopexit, label %while.body, !dbg !1680, !llvm.loop !1697

while.end.loopexit:                               ; preds = %if.end14
  %phi.cmp = icmp eq %struct.tskTaskControlBlock* %10, null, !dbg !1699
  br i1 %phi.cmp, label %if.end17, label %if.then16, !dbg !1701

if.then16:                                        ; preds = %while.end.loopexit
  call fastcc void @prvResetNextTaskUnblockTime(), !dbg !1702
  br label %if.end17, !dbg !1704

if.end17:                                         ; preds = %if.then16, %while.end.loopexit, %while.cond.preheader
  %20 = load volatile i32, i32* @xPendedTicks, align 4, !dbg !1705, !tbaa !1105
  call void @llvm.dbg.value(metadata i32 %20, metadata !1650, metadata !DIExpression()), !dbg !1706
  %cmp18.not = icmp eq i32 %20, 0, !dbg !1707
  br i1 %cmp18.not, label %if.end28, label %do.body, !dbg !1709

do.body:                                          ; preds = %if.end24, %if.end17
  %xPendedCounts.0 = phi i32 [ %dec25, %if.end24 ], [ %20, %if.end17 ], !dbg !1706
  call void @llvm.dbg.value(metadata i32 %xPendedCounts.0, metadata !1650, metadata !DIExpression()), !dbg !1706
  %call20 = call i32 @xTaskIncrementTick(), !dbg !1710
  %cmp21.not = icmp eq i32 %call20, 0, !dbg !1714
  br i1 %cmp21.not, label %if.end24, label %if.then22, !dbg !1715

if.then22:                                        ; preds = %do.body
  store volatile i32 1, i32* @xYieldPending, align 4, !dbg !1716, !tbaa !1085
  br label %if.end24, !dbg !1718

if.end24:                                         ; preds = %if.then22, %do.body
  %dec25 = add i32 %xPendedCounts.0, -1, !dbg !1719
  call void @llvm.dbg.value(metadata i32 %dec25, metadata !1650, metadata !DIExpression()), !dbg !1706
  %cmp26.not = icmp eq i32 %dec25, 0, !dbg !1720
  br i1 %cmp26.not, label %do.end, label %do.body, !dbg !1721, !llvm.loop !1722

do.end:                                           ; preds = %if.end24
  store volatile i32 0, i32* @xPendedTicks, align 4, !dbg !1725, !tbaa !1105
  br label %if.end28, !dbg !1726

if.end28:                                         ; preds = %do.end, %if.end17
  %21 = load volatile i32, i32* @xYieldPending, align 4, !dbg !1727, !tbaa !1085
  %cmp29.not = icmp eq i32 %21, 0, !dbg !1729
  br i1 %cmp29.not, label %if.end35, label %if.then30, !dbg !1730

if.then30:                                        ; preds = %if.end28
  call void @llvm.dbg.value(metadata i32 1, metadata !1649, metadata !DIExpression()), !dbg !1657
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !1731, !tbaa !1105
  call void asm sideeffect "dsb", "~{memory}"() #18, !dbg !1731, !srcloc !1734
  call void asm sideeffect "isb", ""() #18, !dbg !1731, !srcloc !1735
  br label %if.end35, !dbg !1736

if.end35:                                         ; preds = %if.then30, %if.end28, %if.then2, %if.end
  %xAlreadyYielded.0 = phi i32 [ 1, %if.then30 ], [ 0, %if.end28 ], [ 0, %if.then2 ], [ 0, %if.end ], !dbg !1657
  call void @llvm.dbg.value(metadata i32 %xAlreadyYielded.0, metadata !1649, metadata !DIExpression()), !dbg !1657
  call void @vPortExitCritical() #18, !dbg !1737
  ret i32 %xAlreadyYielded.0, !dbg !1738
}

; Function Attrs: nounwind
define dso_local i32 @xTaskIncrementTick() local_unnamed_addr #0 section ".csection0" !dbg !1739 {
entry:
  call void @llvm.dbg.value(metadata i32 0, metadata !1743, metadata !DIExpression()), !dbg !1751
  %0 = load volatile i32, i32* @uxSchedulerSuspended, align 4, !dbg !1752, !tbaa !1085
  %cmp = icmp eq i32 %0, 0, !dbg !1753
  br i1 %cmp, label %if.then, label %if.else53, !dbg !1754

if.then:                                          ; preds = %entry
  %1 = load volatile i32, i32* @xTickCount, align 4, !dbg !1755, !tbaa !1105
  %add = add i32 %1, 1, !dbg !1756
  call void @llvm.dbg.value(metadata i32 %add, metadata !1744, metadata !DIExpression()), !dbg !1757
  store volatile i32 %add, i32* @xTickCount, align 4, !dbg !1758, !tbaa !1105
  %cmp1 = icmp eq i32 %add, 0, !dbg !1759
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !1760

if.then2:                                         ; preds = %if.then
  %2 = load volatile %struct.xLIST*, %struct.xLIST** @pxDelayedTaskList, align 4, !dbg !1761, !tbaa !1096
  %uxNumberOfItems = getelementptr inbounds %struct.xLIST, %struct.xLIST* %2, i32 0, i32 0, !dbg !1761
  %3 = load volatile i32, i32* %uxNumberOfItems, align 4, !dbg !1761, !tbaa !1122
  %cmp3.not = icmp eq i32 %3, 0, !dbg !1761
  br i1 %cmp3.not, label %if.end, label %if.then5, !dbg !1763

if.then5:                                         ; preds = %if.then2
  %4 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #18, !dbg !1764, !srcloc !1131
  call void @llvm.dbg.value(metadata i32 %4, metadata !1128, metadata !DIExpression()) #18, !dbg !1767
  br label %for.cond, !dbg !1768

for.cond:                                         ; preds = %for.cond, %if.then5
  br label %for.cond, !dbg !1769, !llvm.loop !1772

if.end:                                           ; preds = %if.then2
  %5 = load volatile %struct.xLIST*, %struct.xLIST** @pxDelayedTaskList, align 4, !dbg !1763, !tbaa !1096
  call void @llvm.dbg.value(metadata %struct.xLIST* %5, metadata !1747, metadata !DIExpression()), !dbg !1774
  %6 = load volatile %struct.xLIST*, %struct.xLIST** @pxOverflowDelayedTaskList, align 4, !dbg !1763, !tbaa !1096
  store volatile %struct.xLIST* %6, %struct.xLIST** @pxDelayedTaskList, align 4, !dbg !1763, !tbaa !1096
  store volatile %struct.xLIST* %5, %struct.xLIST** @pxOverflowDelayedTaskList, align 4, !dbg !1763, !tbaa !1096
  %7 = load volatile i32, i32* @xNumOfOverflows, align 4, !dbg !1763, !tbaa !1085
  %inc = add nsw i32 %7, 1, !dbg !1763
  store volatile i32 %inc, i32* @xNumOfOverflows, align 4, !dbg !1763, !tbaa !1085
  call fastcc void @prvResetNextTaskUnblockTime(), !dbg !1763
  br label %if.end6, !dbg !1775

if.end6:                                          ; preds = %if.end, %if.then
  %8 = load volatile i32, i32* @xNextTaskUnblockTime, align 4, !dbg !1776, !tbaa !1105
  %cmp7.not = icmp ult i32 %add, %8, !dbg !1778
  br i1 %cmp7.not, label %if.end37, label %for.cond9.preheader, !dbg !1779

for.cond9.preheader:                              ; preds = %if.end6
  call void @llvm.dbg.value(metadata i32 0, metadata !1743, metadata !DIExpression()), !dbg !1751
  %9 = load volatile %struct.xLIST*, %struct.xLIST** @pxDelayedTaskList, align 4, !dbg !1780, !tbaa !1096
  %uxNumberOfItems1075 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %9, i32 0, i32 0, !dbg !1780
  %10 = load volatile i32, i32* %uxNumberOfItems1075, align 4, !dbg !1780, !tbaa !1122
  %cmp1176 = icmp eq i32 %10, 0, !dbg !1780
  br i1 %cmp1176, label %if.then14, label %if.else15, !dbg !1786

if.then14:                                        ; preds = %if.end27, %for.cond9.preheader
  %xSwitchRequired.0.lcssa = phi i32 [ 0, %for.cond9.preheader ], [ %spec.select, %if.end27 ], !dbg !1751
  store volatile i32 -1, i32* @xNextTaskUnblockTime, align 4, !dbg !1787, !tbaa !1105
  br label %if.end37, !dbg !1789

if.else15:                                        ; preds = %if.end27, %for.cond9.preheader
  %xSwitchRequired.077 = phi i32 [ %spec.select, %if.end27 ], [ 0, %for.cond9.preheader ]
  call void @llvm.dbg.value(metadata i32 %xSwitchRequired.077, metadata !1743, metadata !DIExpression()), !dbg !1751
  %11 = load volatile %struct.xLIST*, %struct.xLIST** @pxDelayedTaskList, align 4, !dbg !1790, !tbaa !1096
  %pxNext = getelementptr inbounds %struct.xLIST, %struct.xLIST* %11, i32 0, i32 2, i32 1, !dbg !1790
  %12 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %pxNext, align 4, !dbg !1790, !tbaa !1493
  %pvOwner = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %12, i32 0, i32 3, !dbg !1790
  %13 = bitcast i8** %pvOwner to %struct.tskTaskControlBlock**, !dbg !1790
  %14 = load %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** %13, align 4, !dbg !1790, !tbaa !1148
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %14, metadata !1741, metadata !DIExpression()), !dbg !1751
  %xStateListItem = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %14, i32 0, i32 1, !dbg !1792
  %xItemValue16 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %xStateListItem, i32 0, i32 0, !dbg !1792
  %15 = load i32, i32* %xItemValue16, align 4, !dbg !1792, !tbaa !1622
  call void @llvm.dbg.value(metadata i32 %15, metadata !1742, metadata !DIExpression()), !dbg !1751
  %cmp17 = icmp ult i32 %add, %15, !dbg !1793
  br i1 %cmp17, label %if.then18, label %if.end20, !dbg !1795

if.then18:                                        ; preds = %if.else15
  store volatile i32 %15, i32* @xNextTaskUnblockTime, align 4, !dbg !1796, !tbaa !1105
  br label %if.end37, !dbg !1798

if.end20:                                         ; preds = %if.else15
  %call = call i32 @icall_arg1p(i32 4, i8* bitcast (i32 (%struct.xLIST_ITEM*)* @uxListRemove to i8*), i8* %17, i32 ptrtoint (%struct.xLIST_ITEM* getelementptr (%struct.xLIST_ITEM, %struct.xLIST_ITEM* null, i32 1) to i32)), !dbg !1799
  %pvContainer = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %14, i32 0, i32 2, i32 4, !dbg !1800
  %16 = load %struct.xLIST*, %struct.xLIST** %pvContainer, align 4, !dbg !1800, !tbaa !1425
  %cmp22.not = icmp eq %struct.xLIST* %16, null, !dbg !1802
  br i1 %cmp22.not, label %if.end27, label %if.then23, !dbg !1803
  %17 = bitcast %struct.xLIST_ITEM* %xStateListItem to i8*

if.then23:                                        ; preds = %if.end20
  %xEventListItem = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %14, i32 0, i32 2, !dbg !1800
  %call25 = call i32 @icall_arg1p(i32 4, i8* bitcast (i32 (%struct.xLIST_ITEM*)* @uxListRemove to i8*), i8* %18, i32 ptrtoint (%struct.xLIST_ITEM* getelementptr (%struct.xLIST_ITEM, %struct.xLIST_ITEM* null, i32 1) to i32)), !dbg !1804
  br label %if.end27, !dbg !1806
  %18 = bitcast %struct.xLIST_ITEM* %xEventListItem to i8*

if.end27:                                         ; preds = %if.then23, %if.end20
  %uxPriority = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %14, i32 0, i32 3, !dbg !1807
  %19 = load i32, i32* %uxPriority, align 4, !dbg !1807, !tbaa !1279
  %shl = shl i32 1, %19, !dbg !1807
  %20 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !1807, !tbaa !1085
  %or = or i32 %20, %shl, !dbg !1807
  store volatile i32 %or, i32* @uxTopReadyPriority, align 4, !dbg !1807, !tbaa !1085
  %arrayidx = getelementptr inbounds [5 x %struct.xLIST], [5 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %19, !dbg !1807
  call void @vListInsertEnd(%struct.xLIST* nonnull %arrayidx, %struct.xLIST_ITEM* nonnull %xStateListItem) #18, !dbg !1807
  %21 = load i32, i32* %uxPriority, align 4, !dbg !1808, !tbaa !1279
  %22 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !1811, !tbaa !1096
  %uxPriority31 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %22, i32 0, i32 3, !dbg !1812
  %23 = load i32, i32* %uxPriority31, align 4, !dbg !1812, !tbaa !1279
  %cmp32.not = icmp ult i32 %21, %23, !dbg !1813
  %spec.select = select i1 %cmp32.not, i32 %xSwitchRequired.077, i32 1, !dbg !1814
  call void @llvm.dbg.value(metadata i32 %spec.select, metadata !1743, metadata !DIExpression()), !dbg !1751
  %24 = load volatile %struct.xLIST*, %struct.xLIST** @pxDelayedTaskList, align 4, !dbg !1780, !tbaa !1096
  %uxNumberOfItems10 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %24, i32 0, i32 0, !dbg !1780
  %25 = load volatile i32, i32* %uxNumberOfItems10, align 4, !dbg !1780, !tbaa !1122
  %cmp11 = icmp eq i32 %25, 0, !dbg !1780
  br i1 %cmp11, label %if.then14, label %if.else15, !dbg !1786, !llvm.loop !1815

if.end37:                                         ; preds = %if.then18, %if.then14, %if.end6
  %xSwitchRequired.2 = phi i32 [ %xSwitchRequired.0.lcssa, %if.then14 ], [ %xSwitchRequired.077, %if.then18 ], [ 0, %if.end6 ], !dbg !1818
  call void @llvm.dbg.value(metadata i32 %xSwitchRequired.2, metadata !1743, metadata !DIExpression()), !dbg !1751
  %26 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !1819, !tbaa !1096
  %uxPriority38 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %26, i32 0, i32 3, !dbg !1819
  %27 = load i32, i32* %uxPriority38, align 4, !dbg !1819, !tbaa !1279
  %uxNumberOfItems40 = getelementptr inbounds [5 x %struct.xLIST], [5 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %27, i32 0, !dbg !1819
  %28 = load volatile i32, i32* %uxNumberOfItems40, align 4, !dbg !1819, !tbaa !1122
  %cmp41 = icmp ugt i32 %28, 1, !dbg !1822
  %spec.select72 = select i1 %cmp41, i32 1, i32 %xSwitchRequired.2, !dbg !1823
  call void @llvm.dbg.value(metadata i32 %spec.select72, metadata !1743, metadata !DIExpression()), !dbg !1751
  %29 = load volatile i32, i32* @xPendedTicks, align 4, !dbg !1824, !tbaa !1105
  %cmp45 = icmp eq i32 %29, 0, !dbg !1827
  br i1 %cmp45, label %if.then46, label %if.end48, !dbg !1828

if.then46:                                        ; preds = %if.end37
  call void @xcall_arg0(i32 9, void ()* @vApplicationTickHook), !dbg !1829
  br label %if.end48, !dbg !1831

if.end48:                                         ; preds = %if.then46, %if.end37
  %30 = load volatile i32, i32* @xYieldPending, align 4, !dbg !1832, !tbaa !1085
  %cmp49.not = icmp eq i32 %30, 0, !dbg !1835
  %spec.select73 = select i1 %cmp49.not, i32 %spec.select72, i32 1, !dbg !1836
  call void @llvm.dbg.value(metadata i32 %spec.select73, metadata !1743, metadata !DIExpression()), !dbg !1751
  br label %if.end55, !dbg !1837

if.else53:                                        ; preds = %entry
  %31 = load volatile i32, i32* @xPendedTicks, align 4, !dbg !1838, !tbaa !1105
  %inc54 = add i32 %31, 1, !dbg !1838
  store volatile i32 %inc54, i32* @xPendedTicks, align 4, !dbg !1838, !tbaa !1105
  call void @xcall_arg0(i32 9, void ()* @vApplicationTickHook), !dbg !1840
  br label %if.end55

if.end55:                                         ; preds = %if.else53, %if.end48
  %xSwitchRequired.5 = phi i32 [ %spec.select73, %if.end48 ], [ 0, %if.else53 ], !dbg !1751
  call void @llvm.dbg.value(metadata i32 %xSwitchRequired.5, metadata !1743, metadata !DIExpression()), !dbg !1751
  ret i32 %xSwitchRequired.5, !dbg !1842
}

; Function Attrs: nounwind
define dso_local void @vTaskDelay(i32 %xTicksToDelay) local_unnamed_addr #0 section ".csection0" !dbg !1843 {
entry:
  call void @llvm.dbg.value(metadata i32 %xTicksToDelay, metadata !1847, metadata !DIExpression()), !dbg !1849
  call void @llvm.dbg.value(metadata i32 0, metadata !1848, metadata !DIExpression()), !dbg !1849
  %cmp.not = icmp eq i32 %xTicksToDelay, 0, !dbg !1850
  br i1 %cmp.not, label %if.then8, label %if.then, !dbg !1852

if.then:                                          ; preds = %entry
  %0 = load volatile i32, i32* @uxSchedulerSuspended, align 4, !dbg !1853, !tbaa !1085
  %cmp1.not = icmp eq i32 %0, 0, !dbg !1853
  br i1 %cmp1.not, label %if.end, label %if.then4, !dbg !1856

if.then4:                                         ; preds = %if.then
  %1 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #18, !dbg !1857, !srcloc !1131
  call void @llvm.dbg.value(metadata i32 %1, metadata !1128, metadata !DIExpression()) #18, !dbg !1860
  br label %for.cond, !dbg !1861

for.cond:                                         ; preds = %for.cond, %if.then4
  br label %for.cond, !dbg !1862, !llvm.loop !1865

if.end:                                           ; preds = %if.then
  call void @vTaskSuspendAll(), !dbg !1867
  call fastcc void @prvAddCurrentTaskToDelayedList(i32 %xTicksToDelay, i32 0), !dbg !1868
  %call = call i32 @xTaskResumeAll(), !dbg !1870
  call void @llvm.dbg.value(metadata i32 %call, metadata !1848, metadata !DIExpression()), !dbg !1849
  %phi.cmp = icmp eq i32 %call, 0, !dbg !1871
  call void @llvm.dbg.value(metadata i32 undef, metadata !1848, metadata !DIExpression()), !dbg !1849
  br i1 %phi.cmp, label %if.then8, label %if.end10, !dbg !1872

if.then8:                                         ; preds = %if.end, %entry
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !1873, !tbaa !1105
  call void asm sideeffect "dsb", "~{memory}"() #18, !dbg !1873, !srcloc !1877
  call void asm sideeffect "isb", ""() #18, !dbg !1873, !srcloc !1878
  br label %if.end10, !dbg !1879

if.end10:                                         ; preds = %if.then8, %if.end
  ret void, !dbg !1880
}

; Function Attrs: nounwind
define dso_local i32 @eTaskGetState(%struct.tskTaskControlBlock* %xTask) local_unnamed_addr #0 section ".csection0" !dbg !1881 {
entry:
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %xTask, metadata !1886, metadata !DIExpression()), !dbg !1906
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %xTask, metadata !1893, metadata !DIExpression()), !dbg !1906
  %cmp = icmp eq %struct.tskTaskControlBlock* %xTask, null, !dbg !1907
  br i1 %cmp, label %if.then, label %if.end, !dbg !1909

if.then:                                          ; preds = %entry
  %0 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #18, !dbg !1910, !srcloc !1131
  call void @llvm.dbg.value(metadata i32 %0, metadata !1128, metadata !DIExpression()) #18, !dbg !1913
  br label %for.cond, !dbg !1914

for.cond:                                         ; preds = %for.cond, %if.then
  br label %for.cond, !dbg !1915, !llvm.loop !1918

if.end:                                           ; preds = %entry
  %1 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !1920, !tbaa !1096
  %cmp1 = icmp eq %struct.tskTaskControlBlock* %1, %xTask, !dbg !1921
  br i1 %cmp1, label %if.end31, label %if.else, !dbg !1922

if.else:                                          ; preds = %if.end
  call void @vPortEnterCritical() #18, !dbg !1923
  %pvContainer = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %xTask, i32 0, i32 1, i32 4, !dbg !1924
  %2 = load %struct.xLIST*, %struct.xLIST** %pvContainer, align 4, !dbg !1924, !tbaa !1926
  call void @llvm.dbg.value(metadata %struct.xLIST* %2, metadata !1888, metadata !DIExpression()), !dbg !1906
  %3 = load volatile %struct.xLIST*, %struct.xLIST** @pxDelayedTaskList, align 4, !dbg !1927, !tbaa !1096
  call void @llvm.dbg.value(metadata %struct.xLIST* %3, metadata !1891, metadata !DIExpression()), !dbg !1906
  %4 = load volatile %struct.xLIST*, %struct.xLIST** @pxOverflowDelayedTaskList, align 4, !dbg !1928, !tbaa !1096
  call void @llvm.dbg.value(metadata %struct.xLIST* %4, metadata !1892, metadata !DIExpression()), !dbg !1906
  call void @vPortExitCritical() #18, !dbg !1929
  %cmp3 = icmp eq %struct.xLIST* %2, %3, !dbg !1930
  %cmp4 = icmp eq %struct.xLIST* %2, %4
  %or.cond48 = or i1 %cmp3, %cmp4, !dbg !1931
  br i1 %or.cond48, label %if.end31, label %if.else6, !dbg !1931

if.else6:                                         ; preds = %if.else
  %cmp7 = icmp eq %struct.xLIST* %2, @xSuspendedTaskList, !dbg !1932
  br i1 %cmp7, label %if.then8, label %if.else20, !dbg !1933

if.then8:                                         ; preds = %if.else6
  %pvContainer9 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %xTask, i32 0, i32 2, i32 4, !dbg !1934
  %5 = load %struct.xLIST*, %struct.xLIST** %pvContainer9, align 4, !dbg !1934, !tbaa !1425
  %cmp10 = icmp eq %struct.xLIST* %5, null, !dbg !1935
  br i1 %cmp10, label %for.body, label %if.end31, !dbg !1936

for.body:                                         ; preds = %if.then8
  call void @llvm.dbg.value(metadata i32 undef, metadata !1897, metadata !DIExpression()), !dbg !1937
  %arrayidx = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %xTask, i32 0, i32 11, i32 0, !dbg !1938
  %6 = load volatile i8, i8* %arrayidx, align 1, !dbg !1938, !tbaa !1246
  %cmp14 = icmp eq i8 %6, 1, !dbg !1943
  %eReturn.0 = select i1 %cmp14, i32 2, i32 3, !dbg !1944
  br label %if.end31, !dbg !1944

if.else20:                                        ; preds = %if.else6
  %cmp21 = icmp eq %struct.xLIST* %2, @xTasksWaitingTermination, !dbg !1945
  %cmp24 = icmp eq %struct.xLIST* %2, null
  %or.cond = or i1 %cmp21, %cmp24, !dbg !1947
  %spec.select = select i1 %or.cond, i32 4, i32 1, !dbg !1947
  br label %UnifiedReturnBlock

if.end31:                                         ; preds = %for.body, %if.then8, %if.else, %if.end
  %eReturn.1 = phi i32 [ 0, %if.end ], [ 2, %if.else ], [ %eReturn.0, %for.body ], [ 2, %if.then8 ], !dbg !1948
  call void @llvm.dbg.value(metadata i32 %eReturn.1, metadata !1887, metadata !DIExpression()), !dbg !1906
  br label %UnifiedReturnBlock

UnifiedReturnBlock:                               ; preds = %if.end31, %if.else20
  %UnifiedRetVal = phi i32 [ %spec.select, %if.else20 ], [ %eReturn.1, %if.end31 ]
  ret i32 %UnifiedRetVal
}

; Function Attrs: nounwind
define dso_local i32 @uxTaskPriorityGet(%struct.tskTaskControlBlock* readonly %xTask) local_unnamed_addr #0 section ".csection0" !dbg !1949 {
entry:
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %xTask, metadata !1954, metadata !DIExpression()), !dbg !1957
  call void @vPortEnterCritical() #18, !dbg !1958
  %cmp = icmp eq %struct.tskTaskControlBlock* %xTask, null, !dbg !1959
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !1959

cond.true:                                        ; preds = %entry
  %0 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !1959, !tbaa !1096
  br label %cond.end, !dbg !1959

cond.end:                                         ; preds = %cond.true, %entry
  %cond = phi %struct.tskTaskControlBlock* [ %0, %cond.true ], [ %xTask, %entry ], !dbg !1959
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %cond, metadata !1955, metadata !DIExpression()), !dbg !1957
  %uxPriority = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %cond, i32 0, i32 3, !dbg !1961
  %1 = load i32, i32* %uxPriority, align 4, !dbg !1961, !tbaa !1279
  call void @llvm.dbg.value(metadata i32 %1, metadata !1956, metadata !DIExpression()), !dbg !1957
  call void @vPortExitCritical() #18, !dbg !1962
  ret i32 %1, !dbg !1963
}

; Function Attrs: nounwind
define dso_local i32 @uxTaskPriorityGetFromISR(%struct.tskTaskControlBlock* readonly %xTask) local_unnamed_addr #0 section ".csection0" !dbg !1964 {
entry:
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %xTask, metadata !1966, metadata !DIExpression()), !dbg !1970
  call void @vPortValidateInterruptPriority() #18, !dbg !1971
  %0 = call { i32, i32 } asm sideeffect "\09mrs $0, basepri\09\09\09\09\09\09\09\09\09\09\09\0A\09mov $1, $2\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $1\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,=r,i,~{memory}"(i32 80) #18, !dbg !1972, !srcloc !1980
  call void @llvm.dbg.value(metadata i32 undef, metadata !1977, metadata !DIExpression()) #18, !dbg !1981
  call void @llvm.dbg.value(metadata i32 undef, metadata !1978, metadata !DIExpression()) #18, !dbg !1981
  call void @llvm.dbg.value(metadata i32 undef, metadata !1969, metadata !DIExpression()), !dbg !1970
  %cmp = icmp eq %struct.tskTaskControlBlock* %xTask, null, !dbg !1982
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !1982

cond.true:                                        ; preds = %entry
  %1 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !1982, !tbaa !1096
  br label %cond.end, !dbg !1982

cond.end:                                         ; preds = %cond.true, %entry
  %cond = phi %struct.tskTaskControlBlock* [ %1, %cond.true ], [ %xTask, %entry ], !dbg !1982
  %asmresult.i = extractvalue { i32, i32 } %0, 0, !dbg !1972
  call void @llvm.dbg.value(metadata i32 %asmresult.i, metadata !1969, metadata !DIExpression()), !dbg !1970
  call void @llvm.dbg.value(metadata i32 %asmresult.i, metadata !1977, metadata !DIExpression()) #18, !dbg !1981
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %cond, metadata !1967, metadata !DIExpression()), !dbg !1970
  %uxPriority = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %cond, i32 0, i32 3, !dbg !1984
  %2 = load i32, i32* %uxPriority, align 4, !dbg !1984, !tbaa !1279
  call void @llvm.dbg.value(metadata i32 %2, metadata !1968, metadata !DIExpression()), !dbg !1970
  call void @llvm.dbg.value(metadata i32 undef, metadata !1985, metadata !DIExpression()) #18, !dbg !1990
  call void asm sideeffect "\09msr basepri, $0\09", "r,~{memory}"(i32 %asmresult.i) #18, !dbg !1992, !srcloc !1993
  ret i32 %2, !dbg !1994
}

; Function Attrs: nounwind
define dso_local void @vTaskPrioritySet(%struct.tskTaskControlBlock* %xTask, i32 %uxNewPriority) local_unnamed_addr #0 section ".csection0" !dbg !1995 {
entry:
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %xTask, metadata !1999, metadata !DIExpression()), !dbg !2005
  call void @llvm.dbg.value(metadata i32 %uxNewPriority, metadata !2000, metadata !DIExpression()), !dbg !2005
  call void @llvm.dbg.value(metadata i32 0, metadata !2004, metadata !DIExpression()), !dbg !2005
  %cmp = icmp ugt i32 %uxNewPriority, 4, !dbg !2006
  br i1 %cmp, label %if.then, label %if.end6, !dbg !2008

if.then:                                          ; preds = %entry
  %0 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #18, !dbg !2009, !srcloc !1131
  call void @llvm.dbg.value(metadata i32 %0, metadata !1128, metadata !DIExpression()) #18, !dbg !2012
  br label %for.cond, !dbg !2013

for.cond:                                         ; preds = %for.cond, %if.then
  br label %for.cond, !dbg !2014, !llvm.loop !2017

if.end6:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata i32 %uxNewPriority, metadata !2000, metadata !DIExpression()), !dbg !2005
  call void @vPortEnterCritical() #18, !dbg !2019
  %cmp7 = icmp eq %struct.tskTaskControlBlock* %xTask, null, !dbg !2020
  br i1 %cmp7, label %cond.true, label %cond.end, !dbg !2020

cond.true:                                        ; preds = %if.end6
  %1 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !2020, !tbaa !1096
  br label %cond.end, !dbg !2020

cond.end:                                         ; preds = %cond.true, %if.end6
  %cond = phi %struct.tskTaskControlBlock* [ %1, %cond.true ], [ %xTask, %if.end6 ], !dbg !2020
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %cond, metadata !2001, metadata !DIExpression()), !dbg !2005
  %uxBasePriority = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %cond, i32 0, i32 8, !dbg !2022
  %2 = load i32, i32* %uxBasePriority, align 4, !dbg !2022, !tbaa !1283
  call void @llvm.dbg.value(metadata i32 %2, metadata !2002, metadata !DIExpression()), !dbg !2005
  %cmp9.not = icmp eq i32 %2, %uxNewPriority, !dbg !2024
  br i1 %cmp9.not, label %if.end74, label %if.then11, !dbg !2026

if.then11:                                        ; preds = %cond.end
  %cmp12 = icmp ult i32 %2, %uxNewPriority, !dbg !2027
  br i1 %cmp12, label %if.then14, label %if.else25, !dbg !2030

if.then14:                                        ; preds = %if.then11
  %3 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !2031, !tbaa !1096
  %cmp15.not = icmp eq %struct.tskTaskControlBlock* %cond, %3, !dbg !2034
  br i1 %cmp15.not, label %if.end31, label %if.then17, !dbg !2035

if.then17:                                        ; preds = %if.then14
  %4 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !2036, !tbaa !1096
  %uxPriority = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %4, i32 0, i32 3, !dbg !2039
  %5 = load i32, i32* %uxPriority, align 4, !dbg !2039, !tbaa !1279
  %cmp18.not = icmp ugt i32 %5, %uxNewPriority, !dbg !2040
  br label %if.end31, !dbg !2041

if.else25:                                        ; preds = %if.then11
  %6 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !2042, !tbaa !1096
  %cmp26 = icmp ne %struct.tskTaskControlBlock* %cond, %6, !dbg !2044
  br label %if.end31, !dbg !2045

if.end31:                                         ; preds = %if.else25, %if.then17, %if.then14
  %cmp69.not = phi i1 [ true, %if.then14 ], [ %cmp18.not, %if.then17 ], [ %cmp26, %if.else25 ], !dbg !2005
  call void @llvm.dbg.value(metadata i32 undef, metadata !2004, metadata !DIExpression()), !dbg !2005
  %uxPriority32 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %cond, i32 0, i32 3, !dbg !2046
  %7 = load i32, i32* %uxPriority32, align 4, !dbg !2046, !tbaa !1279
  call void @llvm.dbg.value(metadata i32 %7, metadata !2003, metadata !DIExpression()), !dbg !2005
  %cmp35 = icmp eq i32 %2, %7, !dbg !2047
  br i1 %cmp35, label %if.then37, label %if.end40, !dbg !2050

if.then37:                                        ; preds = %if.end31
  store i32 %uxNewPriority, i32* %uxPriority32, align 4, !dbg !2051, !tbaa !1279
  br label %if.end40, !dbg !2053

if.end40:                                         ; preds = %if.then37, %if.end31
  store i32 %uxNewPriority, i32* %uxBasePriority, align 4, !dbg !2054, !tbaa !1283
  %xItemValue = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %cond, i32 0, i32 2, i32 0, !dbg !2055
  %8 = load i32, i32* %xItemValue, align 4, !dbg !2055, !tbaa !1294
  %cmp42 = icmp sgt i32 %8, -1, !dbg !2057
  br i1 %cmp42, label %if.then44, label %if.end48, !dbg !2058

if.then44:                                        ; preds = %if.end40
  %sub = sub i32 5, %uxNewPriority, !dbg !2059
  store i32 %sub, i32* %xItemValue, align 4, !dbg !2059, !tbaa !1294
  br label %if.end48, !dbg !2061

if.end48:                                         ; preds = %if.then44, %if.end40
  %xStateListItem = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %cond, i32 0, i32 1, !dbg !2062
  %pvContainer = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %cond, i32 0, i32 1, i32 4, !dbg !2062
  %9 = load %struct.xLIST*, %struct.xLIST** %pvContainer, align 4, !dbg !2062, !tbaa !1926
  %arrayidx = getelementptr inbounds [5 x %struct.xLIST], [5 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %7, !dbg !2062
  %cmp49 = icmp eq %struct.xLIST* %9, %arrayidx, !dbg !2062
  br i1 %cmp49, label %if.then54, label %if.end68, !dbg !2064

if.then54:                                        ; preds = %if.end48
  %call = call i32 @icall_arg1p(i32 4, i8* bitcast (i32 (%struct.xLIST_ITEM*)* @uxListRemove to i8*), i8* %10, i32 ptrtoint (%struct.xLIST_ITEM* getelementptr (%struct.xLIST_ITEM, %struct.xLIST_ITEM* null, i32 1) to i32)), !dbg !2065
  %cmp56 = icmp eq i32 %call, 0, !dbg !2068
  br i1 %cmp56, label %if.then58, label %if.end61, !dbg !2069
  %10 = bitcast %struct.xLIST_ITEM* %xStateListItem to i8*

if.then58:                                        ; preds = %if.then54
  %shl = shl i32 1, %7, !dbg !2070
  %neg = xor i32 %shl, -1, !dbg !2070
  %11 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !2070, !tbaa !1085
  %and59 = and i32 %11, %neg, !dbg !2070
  store volatile i32 %and59, i32* @uxTopReadyPriority, align 4, !dbg !2070, !tbaa !1085
  br label %if.end61, !dbg !2072

if.end61:                                         ; preds = %if.then58, %if.then54
  %12 = load i32, i32* %uxPriority32, align 4, !dbg !2073, !tbaa !1279
  %shl63 = shl i32 1, %12, !dbg !2073
  %13 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !2073, !tbaa !1085
  %or = or i32 %13, %shl63, !dbg !2073
  store volatile i32 %or, i32* @uxTopReadyPriority, align 4, !dbg !2073, !tbaa !1085
  %arrayidx65 = getelementptr inbounds [5 x %struct.xLIST], [5 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %12, !dbg !2073
  call void @vListInsertEnd(%struct.xLIST* nonnull %arrayidx65, %struct.xLIST_ITEM* nonnull %xStateListItem) #18, !dbg !2073
  br label %if.end68, !dbg !2074

if.end68:                                         ; preds = %if.end61, %if.end48
  br i1 %cmp69.not, label %if.end74, label %if.then71, !dbg !2075

if.then71:                                        ; preds = %if.end68
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !2076, !tbaa !1105
  call void asm sideeffect "dsb", "~{memory}"() #18, !dbg !2076, !srcloc !2080
  call void asm sideeffect "isb", ""() #18, !dbg !2076, !srcloc !2081
  br label %if.end74, !dbg !2082

if.end74:                                         ; preds = %if.then71, %if.end68, %cond.end
  call void @vPortExitCritical() #18, !dbg !2083
  ret void, !dbg !2084
}

; Function Attrs: nounwind
define dso_local void @vTaskSuspend(%struct.tskTaskControlBlock* %xTaskToSuspend) local_unnamed_addr #0 section ".csection0" !dbg !2085 {
entry:
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %xTaskToSuspend, metadata !2087, metadata !DIExpression()), !dbg !2092
  call void @vPortEnterCritical() #18, !dbg !2093
  %cmp = icmp eq %struct.tskTaskControlBlock* %xTaskToSuspend, null, !dbg !2094
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !2094

cond.true:                                        ; preds = %entry
  %0 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !2094, !tbaa !1096
  br label %cond.end, !dbg !2094

cond.end:                                         ; preds = %cond.true, %entry
  %cond = phi %struct.tskTaskControlBlock* [ %0, %cond.true ], [ %xTaskToSuspend, %entry ], !dbg !2094
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %cond, metadata !2088, metadata !DIExpression()), !dbg !2092
  %xStateListItem = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %cond, i32 0, i32 1, !dbg !2095
  %call = call i32 @icall_arg1p(i32 4, i8* bitcast (i32 (%struct.xLIST_ITEM*)* @uxListRemove to i8*), i8* %1, i32 ptrtoint (%struct.xLIST_ITEM* getelementptr (%struct.xLIST_ITEM, %struct.xLIST_ITEM* null, i32 1) to i32)), !dbg !2097
  %cmp1 = icmp eq i32 %call, 0, !dbg !2098
  br i1 %cmp1, label %if.then, label %if.end5, !dbg !2099
  %1 = bitcast %struct.xLIST_ITEM* %xStateListItem to i8*

if.then:                                          ; preds = %cond.end
  %uxPriority = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %cond, i32 0, i32 3, !dbg !2100
  %2 = load i32, i32* %uxPriority, align 4, !dbg !2100, !tbaa !1279
  %uxNumberOfItems = getelementptr inbounds [5 x %struct.xLIST], [5 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %2, i32 0, !dbg !2100
  %3 = load volatile i32, i32* %uxNumberOfItems, align 4, !dbg !2100, !tbaa !1122
  %cmp2 = icmp eq i32 %3, 0, !dbg !2100
  br i1 %cmp2, label %if.then3, label %if.end5, !dbg !2104

if.then3:                                         ; preds = %if.then
  %shl = shl i32 1, %2, !dbg !2105
  %neg = xor i32 %shl, -1, !dbg !2105
  %4 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !2105, !tbaa !1085
  %and = and i32 %4, %neg, !dbg !2105
  store volatile i32 %and, i32* @uxTopReadyPriority, align 4, !dbg !2105, !tbaa !1085
  br label %if.end5, !dbg !2105

if.end5:                                          ; preds = %if.then3, %if.then, %cond.end
  %pvContainer = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %cond, i32 0, i32 2, i32 4, !dbg !2107
  %5 = load %struct.xLIST*, %struct.xLIST** %pvContainer, align 4, !dbg !2107, !tbaa !1425
  %cmp6.not = icmp eq %struct.xLIST* %5, null, !dbg !2109
  br i1 %cmp6.not, label %if.end11, label %if.then7, !dbg !2110

if.then7:                                         ; preds = %if.end5
  %xEventListItem = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %cond, i32 0, i32 2, !dbg !2107
  %call9 = call i32 @icall_arg1p(i32 4, i8* bitcast (i32 (%struct.xLIST_ITEM*)* @uxListRemove to i8*), i8* %6, i32 ptrtoint (%struct.xLIST_ITEM* getelementptr (%struct.xLIST_ITEM, %struct.xLIST_ITEM* null, i32 1) to i32)), !dbg !2111
  br label %if.end11, !dbg !2113
  %6 = bitcast %struct.xLIST_ITEM* %xEventListItem to i8*

if.end11:                                         ; preds = %if.then7, %if.end5
  call void @vListInsertEnd(%struct.xLIST* nonnull @xSuspendedTaskList, %struct.xLIST_ITEM* nonnull %xStateListItem) #18, !dbg !2114
  call void @llvm.dbg.value(metadata i32 0, metadata !2089, metadata !DIExpression()), !dbg !2115
  call void @llvm.dbg.value(metadata i32 undef, metadata !2089, metadata !DIExpression()), !dbg !2115
  %arrayidx14 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %cond, i32 0, i32 11, i32 0, !dbg !2116
  %7 = load volatile i8, i8* %arrayidx14, align 1, !dbg !2116, !tbaa !1246
  %cmp15 = icmp eq i8 %7, 1, !dbg !2121
  br i1 %cmp15, label %if.then17, label %for.end, !dbg !2122

if.then17:                                        ; preds = %if.end11
  store volatile i8 0, i8* %arrayidx14, align 1, !dbg !2123, !tbaa !1246
  br label %for.end, !dbg !2125

for.end:                                          ; preds = %if.then17, %if.end11
  call void @llvm.dbg.value(metadata i32 1, metadata !2089, metadata !DIExpression()), !dbg !2115
  call void @llvm.dbg.value(metadata i32 undef, metadata !2089, metadata !DIExpression()), !dbg !2115
  call void @vPortExitCritical() #18, !dbg !2126
  %8 = load volatile i32, i32* @xSchedulerRunning, align 4, !dbg !2127, !tbaa !1085
  %cmp21.not = icmp eq i32 %8, 0, !dbg !2129
  br i1 %cmp21.not, label %if.end25, label %if.then23, !dbg !2130

if.then23:                                        ; preds = %for.end
  call void @vPortEnterCritical() #18, !dbg !2131
  call fastcc void @prvResetNextTaskUnblockTime(), !dbg !2133
  call void @vPortExitCritical() #18, !dbg !2135
  br label %if.end25, !dbg !2136

if.end25:                                         ; preds = %if.then23, %for.end
  %9 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !2137, !tbaa !1096
  %cmp26 = icmp eq %struct.tskTaskControlBlock* %cond, %9, !dbg !2139
  br i1 %cmp26, label %if.then28, label %if.end47, !dbg !2140

if.then28:                                        ; preds = %if.end25
  %10 = load volatile i32, i32* @xSchedulerRunning, align 4, !dbg !2141, !tbaa !1085
  %cmp29.not = icmp eq i32 %10, 0, !dbg !2144
  br i1 %cmp29.not, label %if.else39, label %if.then31, !dbg !2145

if.then31:                                        ; preds = %if.then28
  %11 = load volatile i32, i32* @uxSchedulerSuspended, align 4, !dbg !2146, !tbaa !1085
  %cmp32.not = icmp eq i32 %11, 0, !dbg !2146
  br i1 %cmp32.not, label %if.end38, label %if.then36, !dbg !2149

if.then36:                                        ; preds = %if.then31
  %12 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #18, !dbg !2150, !srcloc !1131
  call void @llvm.dbg.value(metadata i32 %12, metadata !1128, metadata !DIExpression()) #18, !dbg !2153
  br label %for.cond37, !dbg !2154

for.cond37:                                       ; preds = %for.cond37, %if.then36
  br label %for.cond37, !dbg !2155, !llvm.loop !2158

if.end38:                                         ; preds = %if.then31
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !2160, !tbaa !1105
  call void asm sideeffect "dsb", "~{memory}"() #18, !dbg !2160, !srcloc !2162
  call void asm sideeffect "isb", ""() #18, !dbg !2160, !srcloc !2163
  br label %if.end47, !dbg !2164

if.else39:                                        ; preds = %if.then28
  %13 = getelementptr %struct.xLIST, %struct.xLIST* @xSuspendedTaskList, i32 0, i32 0
  %14 = load volatile i32, i32* %13, align 4, !dbg !2165, !tbaa !1122
  %15 = load volatile i32, i32* @uxCurrentNumberOfTasks, align 4, !dbg !2168, !tbaa !1085
  %cmp40 = icmp eq i32 %14, %15, !dbg !2169
  br i1 %cmp40, label %if.then42, label %if.else43, !dbg !2170

if.then42:                                        ; preds = %if.else39
  store volatile %struct.tskTaskControlBlock* null, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !2171, !tbaa !1096
  br label %if.end47, !dbg !2173

if.else43:                                        ; preds = %if.else39
  call void @vTaskSwitchContext(), !dbg !2174
  br label %if.end47

if.end47:                                         ; preds = %if.else43, %if.then42, %if.end38, %if.end25
  ret void, !dbg !2176
}

; Function Attrs: nounwind
define dso_local void @vTaskResume(%struct.tskTaskControlBlock* %xTaskToResume) local_unnamed_addr #0 section ".csection0" !dbg !2177 {
entry:
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %xTaskToResume, metadata !2179, metadata !DIExpression()), !dbg !2182
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %xTaskToResume, metadata !2180, metadata !DIExpression()), !dbg !2182
  %cmp = icmp eq %struct.tskTaskControlBlock* %xTaskToResume, null, !dbg !2183
  br i1 %cmp, label %if.then, label %if.end, !dbg !2185

if.then:                                          ; preds = %entry
  %0 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #18, !dbg !2186, !srcloc !1131
  call void @llvm.dbg.value(metadata i32 %0, metadata !1128, metadata !DIExpression()) #18, !dbg !2189
  br label %for.cond, !dbg !2190

for.cond:                                         ; preds = %for.cond, %if.then
  br label %for.cond, !dbg !2191, !llvm.loop !2194

if.end:                                           ; preds = %entry
  %1 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !2196, !tbaa !1096
  %cmp1.not = icmp eq %struct.tskTaskControlBlock* %1, %xTaskToResume, !dbg !2198
  br i1 %cmp1.not, label %if.end17, label %if.then3, !dbg !2199

if.then3:                                         ; preds = %if.end
  call void @vPortEnterCritical() #18, !dbg !2200
  %call = call fastcc i32 @prvTaskIsTaskSuspended(%struct.tskTaskControlBlock* nonnull %xTaskToResume), !dbg !2202
  %cmp4.not = icmp eq i32 %call, 0, !dbg !2205
  br i1 %cmp4.not, label %if.end15, label %if.then5, !dbg !2206

if.then5:                                         ; preds = %if.then3
  %xStateListItem = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %xTaskToResume, i32 0, i32 1, !dbg !2207
  %call6 = call i32 @icall_arg1p(i32 4, i8* bitcast (i32 (%struct.xLIST_ITEM*)* @uxListRemove to i8*), i8* %7, i32 ptrtoint (%struct.xLIST_ITEM* getelementptr (%struct.xLIST_ITEM, %struct.xLIST_ITEM* null, i32 1) to i32)), !dbg !2209
  %uxPriority = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %xTaskToResume, i32 0, i32 3, !dbg !2210
  %2 = load i32, i32* %uxPriority, align 4, !dbg !2210, !tbaa !1279
  %shl = shl i32 1, %2, !dbg !2210
  %3 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !2210, !tbaa !1085
  %or = or i32 %3, %shl, !dbg !2210
  store volatile i32 %or, i32* @uxTopReadyPriority, align 4, !dbg !2210, !tbaa !1085
  %arrayidx = getelementptr inbounds [5 x %struct.xLIST], [5 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %2, !dbg !2210
  call void @vListInsertEnd(%struct.xLIST* nonnull %arrayidx, %struct.xLIST_ITEM* nonnull %xStateListItem) #18, !dbg !2210
  %4 = load i32, i32* %uxPriority, align 4, !dbg !2211, !tbaa !1279
  %5 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !2213, !tbaa !1096
  %uxPriority10 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %5, i32 0, i32 3, !dbg !2214
  %6 = load i32, i32* %uxPriority10, align 4, !dbg !2214, !tbaa !1279
  %cmp11.not = icmp ult i32 %4, %6, !dbg !2215
  br i1 %cmp11.not, label %if.end15, label %if.then12, !dbg !2216
  %7 = bitcast %struct.xLIST_ITEM* %xStateListItem to i8*

if.then12:                                        ; preds = %if.then5
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !2217, !tbaa !1105
  call void asm sideeffect "dsb", "~{memory}"() #18, !dbg !2217, !srcloc !2220
  call void asm sideeffect "isb", ""() #18, !dbg !2217, !srcloc !2221
  br label %if.end15, !dbg !2222

if.end15:                                         ; preds = %if.then12, %if.then5, %if.then3
  call void @vPortExitCritical() #18, !dbg !2223
  br label %if.end17, !dbg !2224

if.end17:                                         ; preds = %if.end15, %if.end
  ret void, !dbg !2225
}

; Function Attrs: nounwind
define internal fastcc i32 @prvTaskIsTaskSuspended(%struct.tskTaskControlBlock* readonly %xTask) unnamed_addr #0 section ".csection0" !dbg !2226 {
entry:
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %xTask, metadata !2230, metadata !DIExpression()), !dbg !2233
  call void @llvm.dbg.value(metadata i32 0, metadata !2231, metadata !DIExpression()), !dbg !2233
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %xTask, metadata !2232, metadata !DIExpression()), !dbg !2233
  %cmp = icmp eq %struct.tskTaskControlBlock* %xTask, null, !dbg !2234
  br i1 %cmp, label %if.then, label %if.end, !dbg !2236

if.then:                                          ; preds = %entry
  %0 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #18, !dbg !2237, !srcloc !1131
  call void @llvm.dbg.value(metadata i32 %0, metadata !1128, metadata !DIExpression()) #18, !dbg !2240
  br label %for.cond, !dbg !2241

for.cond:                                         ; preds = %for.cond, %if.then
  br label %for.cond, !dbg !2242, !llvm.loop !2245

if.end:                                           ; preds = %entry
  %pvContainer = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %xTask, i32 0, i32 1, i32 4, !dbg !2247
  %1 = load %struct.xLIST*, %struct.xLIST** %pvContainer, align 4, !dbg !2247, !tbaa !1926
  %cmp1 = icmp eq %struct.xLIST* %1, @xSuspendedTaskList, !dbg !2247
  br i1 %cmp1, label %if.then3, label %if.end19, !dbg !2249

if.then3:                                         ; preds = %if.end
  %pvContainer4 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %xTask, i32 0, i32 2, i32 4, !dbg !2250
  %2 = load %struct.xLIST*, %struct.xLIST** %pvContainer4, align 4, !dbg !2250, !tbaa !1425
  %cmp11 = icmp eq %struct.xLIST* %2, null
  %spec.select = zext i1 %cmp11 to i32, !dbg !2253
  br label %UnifiedReturnBlock

if.end19:                                         ; preds = %if.end
  call void @llvm.dbg.value(metadata i32 0, metadata !2231, metadata !DIExpression()), !dbg !2233
  br label %UnifiedReturnBlock

UnifiedReturnBlock:                               ; preds = %if.end19, %if.then3
  %UnifiedRetVal = phi i32 [ %spec.select, %if.then3 ], [ 0, %if.end19 ]
  ret i32 %UnifiedRetVal
}

; Function Attrs: nounwind
define dso_local i32 @xTaskResumeFromISR(%struct.tskTaskControlBlock* %xTaskToResume) local_unnamed_addr #0 section ".csection0" !dbg !2254 {
entry:
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %xTaskToResume, metadata !2258, metadata !DIExpression()), !dbg !2262
  call void @llvm.dbg.value(metadata i32 0, metadata !2259, metadata !DIExpression()), !dbg !2262
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %xTaskToResume, metadata !2260, metadata !DIExpression()), !dbg !2262
  %cmp = icmp eq %struct.tskTaskControlBlock* %xTaskToResume, null, !dbg !2263
  br i1 %cmp, label %if.then, label %if.end, !dbg !2265

if.then:                                          ; preds = %entry
  %0 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #18, !dbg !2266, !srcloc !1131
  call void @llvm.dbg.value(metadata i32 %0, metadata !1128, metadata !DIExpression()) #18, !dbg !2269
  br label %for.cond, !dbg !2270

for.cond:                                         ; preds = %for.cond, %if.then
  br label %for.cond, !dbg !2271, !llvm.loop !2274

if.end:                                           ; preds = %entry
  call void @vPortValidateInterruptPriority() #18, !dbg !2276
  %1 = call { i32, i32 } asm sideeffect "\09mrs $0, basepri\09\09\09\09\09\09\09\09\09\09\09\0A\09mov $1, $2\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $1\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,=r,i,~{memory}"(i32 80) #18, !dbg !2277, !srcloc !1980
  call void @llvm.dbg.value(metadata i32 undef, metadata !1977, metadata !DIExpression()) #18, !dbg !2279
  call void @llvm.dbg.value(metadata i32 undef, metadata !1978, metadata !DIExpression()) #18, !dbg !2279
  call void @llvm.dbg.value(metadata i32 undef, metadata !2261, metadata !DIExpression()), !dbg !2262
  %call1 = call fastcc i32 @prvTaskIsTaskSuspended(%struct.tskTaskControlBlock* nonnull %xTaskToResume), !dbg !2280
  %cmp2.not = icmp eq i32 %call1, 0, !dbg !2283
  br i1 %cmp2.not, label %if.end17, label %if.then3, !dbg !2284

if.then3:                                         ; preds = %if.end
  %2 = load volatile i32, i32* @uxSchedulerSuspended, align 4, !dbg !2285, !tbaa !1085
  %cmp4 = icmp eq i32 %2, 0, !dbg !2288
  br i1 %cmp4, label %if.then5, label %if.else14, !dbg !2289

if.then5:                                         ; preds = %if.then3
  %uxPriority = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %xTaskToResume, i32 0, i32 3, !dbg !2290
  %3 = load i32, i32* %uxPriority, align 4, !dbg !2290, !tbaa !1279
  %4 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !2293, !tbaa !1096
  %uxPriority6 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %4, i32 0, i32 3, !dbg !2294
  %5 = load i32, i32* %uxPriority6, align 4, !dbg !2294, !tbaa !1279
  %cmp7.not = icmp ult i32 %3, %5, !dbg !2295
  br i1 %cmp7.not, label %if.end9, label %if.then8, !dbg !2296

if.then8:                                         ; preds = %if.then5
  call void @llvm.dbg.value(metadata i32 1, metadata !2259, metadata !DIExpression()), !dbg !2262
  store volatile i32 1, i32* @xYieldPending, align 4, !dbg !2297, !tbaa !1085
  br label %if.end9, !dbg !2299

if.end9:                                          ; preds = %if.then8, %if.then5
  %xYieldRequired.0 = phi i32 [ 1, %if.then8 ], [ 0, %if.then5 ], !dbg !2262
  call void @llvm.dbg.value(metadata i32 %xYieldRequired.0, metadata !2259, metadata !DIExpression()), !dbg !2262
  %xStateListItem = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %xTaskToResume, i32 0, i32 1, !dbg !2300
  %call10 = call i32 @icall_arg1p(i32 4, i8* bitcast (i32 (%struct.xLIST_ITEM*)* @uxListRemove to i8*), i8* %8, i32 ptrtoint (%struct.xLIST_ITEM* getelementptr (%struct.xLIST_ITEM, %struct.xLIST_ITEM* null, i32 1) to i32)), !dbg !2301
  %6 = load i32, i32* %uxPriority, align 4, !dbg !2302, !tbaa !1279
  %shl = shl i32 1, %6, !dbg !2302
  %7 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !2302, !tbaa !1085
  %or = or i32 %7, %shl, !dbg !2302
  store volatile i32 %or, i32* @uxTopReadyPriority, align 4, !dbg !2302, !tbaa !1085
  %arrayidx = getelementptr inbounds [5 x %struct.xLIST], [5 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %6, !dbg !2302
  call void @vListInsertEnd(%struct.xLIST* nonnull %arrayidx, %struct.xLIST_ITEM* nonnull %xStateListItem) #18, !dbg !2302
  br label %if.end17, !dbg !2303
  %8 = bitcast %struct.xLIST_ITEM* %xStateListItem to i8*

if.else14:                                        ; preds = %if.then3
  %xEventListItem = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %xTaskToResume, i32 0, i32 2, !dbg !2304
  call void @vListInsertEnd(%struct.xLIST* nonnull @xPendingReadyList, %struct.xLIST_ITEM* nonnull %xEventListItem) #18, !dbg !2306
  br label %if.end17

if.end17:                                         ; preds = %if.else14, %if.end9, %if.end
  %xYieldRequired.1 = phi i32 [ %xYieldRequired.0, %if.end9 ], [ 0, %if.else14 ], [ 0, %if.end ], !dbg !2262
  %asmresult.i = extractvalue { i32, i32 } %1, 0, !dbg !2277
  call void @llvm.dbg.value(metadata i32 %asmresult.i, metadata !2261, metadata !DIExpression()), !dbg !2262
  call void @llvm.dbg.value(metadata i32 %asmresult.i, metadata !1977, metadata !DIExpression()) #18, !dbg !2279
  call void @llvm.dbg.value(metadata i32 %xYieldRequired.1, metadata !2259, metadata !DIExpression()), !dbg !2262
  call void @llvm.dbg.value(metadata i32 undef, metadata !1985, metadata !DIExpression()) #18, !dbg !2307
  call void asm sideeffect "\09msr basepri, $0\09", "r,~{memory}"(i32 %asmresult.i) #18, !dbg !2309, !srcloc !1993
  ret i32 %xYieldRequired.1, !dbg !2310
}

; Function Attrs: nounwind
define dso_local void @vTaskStartScheduler() local_unnamed_addr #0 section ".csection0" !dbg !2311 {
entry:
  %0 = getelementptr [5 x i8], [5 x i8]* @.str, i32 0, i32 0
  %call = call i32 @xTaskCreate(void (i8*)* nonnull @prvIdleTask, i8* %0, i16 zeroext 130, i8* null, i32 0, %struct.tskTaskControlBlock** nonnull @xIdleTaskHandle), !dbg !2314
  call void @llvm.dbg.value(metadata i32 %call, metadata !2313, metadata !DIExpression()), !dbg !2316
  %cmp = icmp eq i32 %call, 1, !dbg !2317
  br i1 %cmp, label %if.then, label %if.end, !dbg !2320

if.then:                                          ; preds = %entry
  %call1 = call i32 @icall_arg0(i32 6, i32 ()* @xTimerCreateTimerTask), !dbg !2321
  call void @llvm.dbg.value(metadata i32 %call1, metadata !2313, metadata !DIExpression()), !dbg !2316
  br label %if.end, !dbg !2323

if.end:                                           ; preds = %if.then, %entry
  %xReturn.0 = phi i32 [ %call1, %if.then ], [ %call, %entry ], !dbg !2316
  call void @llvm.dbg.value(metadata i32 %xReturn.0, metadata !2313, metadata !DIExpression()), !dbg !2316
  switch i32 %xReturn.0, label %if.end15 [
    i32 1, label %if.then3
    i32 -1, label %if.then13
  ], !dbg !2324

if.then3:                                         ; preds = %if.end
  %1 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #18, !dbg !2325, !srcloc !1131
  call void @llvm.dbg.value(metadata i32 %1, metadata !1128, metadata !DIExpression()) #18, !dbg !2329
  store volatile i32 -1, i32* @xNextTaskUnblockTime, align 4, !dbg !2330, !tbaa !1105
  store volatile i32 1, i32* @xSchedulerRunning, align 4, !dbg !2331, !tbaa !1085
  store volatile i32 0, i32* @xTickCount, align 4, !dbg !2332, !tbaa !1105
  %call4 = call i32 @xPortStartScheduler() #18, !dbg !2333
  br label %if.end15, !dbg !2335

if.then13:                                        ; preds = %if.end
  %2 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #18, !dbg !2336, !srcloc !1131
  call void @llvm.dbg.value(metadata i32 %2, metadata !1128, metadata !DIExpression()) #18, !dbg !2341
  br label %for.cond, !dbg !2342

for.cond:                                         ; preds = %for.cond, %if.then13
  br label %for.cond, !dbg !2343, !llvm.loop !2346

if.end15:                                         ; preds = %if.then3, %if.end
  %3 = load volatile i32, i32* @uxTopUsedPriority, align 4, !dbg !2348, !tbaa !1085
  ret void, !dbg !2349
}

; Function Attrs: noreturn nounwind
define internal void @prvIdleTask(i8* nocapture readnone %pvParameters) #4 section ".csection0" !dbg !2350 {
entry:
  call void @llvm.dbg.value(metadata i8* %pvParameters, metadata !2352, metadata !DIExpression()), !dbg !2353
  br label %for.cond, !dbg !2354

for.cond:                                         ; preds = %if.end, %entry
  call fastcc void @prvCheckTasksWaitingTermination(), !dbg !2355
  %0 = getelementptr [5 x %struct.xLIST], [5 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 0, i32 0
  %1 = load volatile i32, i32* %0, align 4, !dbg !2359, !tbaa !1122
  %cmp = icmp ugt i32 %1, 1, !dbg !2362
  br i1 %cmp, label %if.then, label %if.end, !dbg !2363

if.then:                                          ; preds = %for.cond
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !2364, !tbaa !1105
  call void asm sideeffect "dsb", "~{memory}"() #18, !dbg !2364, !srcloc !2367
  call void asm sideeffect "isb", ""() #18, !dbg !2364, !srcloc !2368
  br label %if.end, !dbg !2369

if.end:                                           ; preds = %if.then, %for.cond
  call void @xcall_arg0(i32 9, void ()* @vApplicationIdleHook), !dbg !2370
  br label %for.cond, !dbg !2372, !llvm.loop !2373
}

; Function Attrs: nounwind
define internal fastcc void @prvCheckTasksWaitingTermination() unnamed_addr #0 section ".csection0" !dbg !2376 {
entry:
  %0 = load volatile i32, i32* @uxDeletedTasksWaitingCleanUp, align 4, !dbg !2380, !tbaa !1085
  %cmp.not4 = icmp eq i32 %0, 0, !dbg !2381
  br i1 %cmp.not4, label %while.end, label %while.body, !dbg !2382

while.body:                                       ; preds = %while.body, %entry
  call void @vPortEnterCritical() #18, !dbg !2383
  %1 = getelementptr %struct.xLIST, %struct.xLIST* @xTasksWaitingTermination, i32 0, i32 2, i32 1
  %2 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %1, align 4, !dbg !2385, !tbaa !1493
  %pvOwner = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %2, i32 0, i32 3, !dbg !2385
  %3 = bitcast i8** %pvOwner to %struct.tskTaskControlBlock**, !dbg !2385
  %4 = load %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** %3, align 4, !dbg !2385, !tbaa !1148
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %4, metadata !2378, metadata !DIExpression()), !dbg !2387
  %xStateListItem = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %4, i32 0, i32 1, !dbg !2388
  %call = call i32 @icall_arg1p(i32 4, i8* bitcast (i32 (%struct.xLIST_ITEM*)* @uxListRemove to i8*), i8* %8, i32 ptrtoint (%struct.xLIST_ITEM* getelementptr (%struct.xLIST_ITEM, %struct.xLIST_ITEM* null, i32 1) to i32)), !dbg !2389
  %5 = load volatile i32, i32* @uxCurrentNumberOfTasks, align 4, !dbg !2390, !tbaa !1085
  %dec = add i32 %5, -1, !dbg !2390
  store volatile i32 %dec, i32* @uxCurrentNumberOfTasks, align 4, !dbg !2390, !tbaa !1085
  %6 = load volatile i32, i32* @uxDeletedTasksWaitingCleanUp, align 4, !dbg !2391, !tbaa !1085
  %dec1 = add i32 %6, -1, !dbg !2391
  store volatile i32 %dec1, i32* @uxDeletedTasksWaitingCleanUp, align 4, !dbg !2391, !tbaa !1085
  call void @vPortExitCritical() #18, !dbg !2392
  call fastcc void @prvDeleteTCB(%struct.tskTaskControlBlock* %4), !dbg !2393
  %7 = load volatile i32, i32* @uxDeletedTasksWaitingCleanUp, align 4, !dbg !2380, !tbaa !1085
  %cmp.not = icmp eq i32 %7, 0, !dbg !2381
  br i1 %cmp.not, label %while.end, label %while.body, !dbg !2382, !llvm.loop !2394
  %8 = bitcast %struct.xLIST_ITEM* %xStateListItem to i8*

while.end:                                        ; preds = %while.body, %entry
  ret void, !dbg !2396
}

; Function Attrs: nounwind
define dso_local void @vTaskEndScheduler() local_unnamed_addr #0 section ".csection0" !dbg !2397 {
entry:
  %0 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #18, !dbg !2398, !srcloc !1131
  call void @llvm.dbg.value(metadata i32 %0, metadata !1128, metadata !DIExpression()) #18, !dbg !2400
  store volatile i32 0, i32* @xSchedulerRunning, align 4, !dbg !2401, !tbaa !1085
  call void @vPortEndScheduler() #18, !dbg !2402
  ret void, !dbg !2403
}

; Function Attrs: nofree norecurse nounwind willreturn
define dso_local i32 @xTaskGetTickCount() local_unnamed_addr #3 section ".csection0" !dbg !2404 {
entry:
  %0 = load volatile i32, i32* @xTickCount, align 4, !dbg !2409, !tbaa !1105
  call void @llvm.dbg.value(metadata i32 %0, metadata !2408, metadata !DIExpression()), !dbg !2411
  ret i32 %0, !dbg !2412
}

; Function Attrs: nounwind
define dso_local i32 @xTaskGetTickCountFromISR() local_unnamed_addr #0 section ".csection0" !dbg !2413 {
entry:
  call void @vPortValidateInterruptPriority() #18, !dbg !2417
  call void @llvm.dbg.value(metadata i32 0, metadata !2416, metadata !DIExpression()), !dbg !2418
  %0 = load volatile i32, i32* @xTickCount, align 4, !dbg !2419, !tbaa !1105
  call void @llvm.dbg.value(metadata i32 %0, metadata !2415, metadata !DIExpression()), !dbg !2418
  ret i32 %0, !dbg !2421
}

; Function Attrs: nofree norecurse nounwind willreturn
define dso_local i32 @uxTaskGetNumberOfTasks() local_unnamed_addr #3 section ".csection0" !dbg !2422 {
entry:
  %0 = load volatile i32, i32* @uxCurrentNumberOfTasks, align 4, !dbg !2425, !tbaa !1085
  ret i32 %0, !dbg !2426
}

; Function Attrs: nounwind
define dso_local i8* @pcTaskGetName(%struct.tskTaskControlBlock* readnone %xTaskToQuery) local_unnamed_addr #0 section ".csection0" !dbg !2427 {
entry:
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %xTaskToQuery, metadata !2432, metadata !DIExpression()), !dbg !2434
  %cmp = icmp eq %struct.tskTaskControlBlock* %xTaskToQuery, null, !dbg !2435
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !2435

cond.true:                                        ; preds = %entry
  %0 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !2435, !tbaa !1096
  br label %cond.end, !dbg !2435

cond.end:                                         ; preds = %cond.true, %entry
  %cond = phi %struct.tskTaskControlBlock* [ %0, %cond.true ], [ %xTaskToQuery, %entry ], !dbg !2435
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %cond, metadata !2433, metadata !DIExpression()), !dbg !2434
  %cmp1 = icmp eq %struct.tskTaskControlBlock* %cond, null, !dbg !2436
  br i1 %cmp1, label %if.then, label %if.end, !dbg !2438

if.then:                                          ; preds = %cond.end
  %1 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #18, !dbg !2439, !srcloc !1131
  call void @llvm.dbg.value(metadata i32 %1, metadata !1128, metadata !DIExpression()) #18, !dbg !2442
  br label %for.cond, !dbg !2443

for.cond:                                         ; preds = %for.cond, %if.then
  br label %for.cond, !dbg !2444, !llvm.loop !2447

if.end:                                           ; preds = %cond.end
  %arrayidx = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %cond, i32 0, i32 5, i32 0, !dbg !2449
  ret i8* %arrayidx, !dbg !2450
}

; Function Attrs: nounwind
define dso_local i32 @uxTaskGetSystemState(%struct.xTASK_STATUS* nocapture %pxTaskStatusArray, i32 %uxArraySize, i32* %pulTotalRunTime) local_unnamed_addr #0 section ".csection0" !dbg !2451 {
entry:
  call void @llvm.dbg.value(metadata %struct.xTASK_STATUS* %pxTaskStatusArray, metadata !2471, metadata !DIExpression()), !dbg !2476
  call void @llvm.dbg.value(metadata i32 %uxArraySize, metadata !2472, metadata !DIExpression()), !dbg !2476
  call void @llvm.dbg.value(metadata i32* %pulTotalRunTime, metadata !2473, metadata !DIExpression()), !dbg !2476
  call void @llvm.dbg.value(metadata i32 0, metadata !2474, metadata !DIExpression()), !dbg !2476
  call void @llvm.dbg.value(metadata i32 5, metadata !2475, metadata !DIExpression()), !dbg !2476
  call void @vTaskSuspendAll(), !dbg !2477
  %0 = load volatile i32, i32* @uxCurrentNumberOfTasks, align 4, !dbg !2478, !tbaa !1085
  %cmp.not = icmp ugt i32 %0, %uxArraySize, !dbg !2481
  br i1 %cmp.not, label %if.end17, label %do.body, !dbg !2482

do.body:                                          ; preds = %do.body, %entry
  %uxTask.0 = phi i32 [ %add, %do.body ], [ 0, %entry ], !dbg !2476
  %uxQueue.0 = phi i32 [ %dec, %do.body ], [ 5, %entry ], !dbg !2476
  call void @llvm.dbg.value(metadata i32 %uxQueue.0, metadata !2475, metadata !DIExpression()), !dbg !2476
  call void @llvm.dbg.value(metadata i32 %uxTask.0, metadata !2474, metadata !DIExpression()), !dbg !2476
  %dec = add nsw i32 %uxQueue.0, -1, !dbg !2483
  call void @llvm.dbg.value(metadata i32 %dec, metadata !2475, metadata !DIExpression()), !dbg !2476
  %arrayidx = getelementptr inbounds %struct.xTASK_STATUS, %struct.xTASK_STATUS* %pxTaskStatusArray, i32 %uxTask.0, !dbg !2486
  %arrayidx1 = getelementptr inbounds [5 x %struct.xLIST], [5 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %dec, !dbg !2487
  %call = call fastcc i32 @prvListTasksWithinSingleList(%struct.xTASK_STATUS* %arrayidx, %struct.xLIST* nonnull %arrayidx1, i32 1), !dbg !2488
  %add = add i32 %call, %uxTask.0, !dbg !2489
  call void @llvm.dbg.value(metadata i32 %add, metadata !2474, metadata !DIExpression()), !dbg !2476
  %cmp2.not = icmp eq i32 %dec, 0, !dbg !2490
  br i1 %cmp2.not, label %do.end, label %do.body, !dbg !2491, !llvm.loop !2492

do.end:                                           ; preds = %do.body
  %arrayidx3 = getelementptr inbounds %struct.xTASK_STATUS, %struct.xTASK_STATUS* %pxTaskStatusArray, i32 %add, !dbg !2495
  %1 = load volatile %struct.xLIST*, %struct.xLIST** @pxDelayedTaskList, align 4, !dbg !2496, !tbaa !1096
  %call4 = call fastcc i32 @prvListTasksWithinSingleList(%struct.xTASK_STATUS* %arrayidx3, %struct.xLIST* %1, i32 2), !dbg !2497
  %add5 = add i32 %call4, %add, !dbg !2498
  call void @llvm.dbg.value(metadata i32 %add5, metadata !2474, metadata !DIExpression()), !dbg !2476
  %arrayidx6 = getelementptr inbounds %struct.xTASK_STATUS, %struct.xTASK_STATUS* %pxTaskStatusArray, i32 %add5, !dbg !2499
  %2 = load volatile %struct.xLIST*, %struct.xLIST** @pxOverflowDelayedTaskList, align 4, !dbg !2500, !tbaa !1096
  %call7 = call fastcc i32 @prvListTasksWithinSingleList(%struct.xTASK_STATUS* %arrayidx6, %struct.xLIST* %2, i32 2), !dbg !2501
  %add8 = add i32 %call7, %add5, !dbg !2502
  call void @llvm.dbg.value(metadata i32 %add8, metadata !2474, metadata !DIExpression()), !dbg !2476
  %arrayidx9 = getelementptr inbounds %struct.xTASK_STATUS, %struct.xTASK_STATUS* %pxTaskStatusArray, i32 %add8, !dbg !2503
  %call10 = call fastcc i32 @prvListTasksWithinSingleList(%struct.xTASK_STATUS* %arrayidx9, %struct.xLIST* nonnull @xTasksWaitingTermination, i32 4), !dbg !2505
  %add11 = add i32 %add8, %call10, !dbg !2506
  call void @llvm.dbg.value(metadata i32 %add11, metadata !2474, metadata !DIExpression()), !dbg !2476
  %arrayidx12 = getelementptr inbounds %struct.xTASK_STATUS, %struct.xTASK_STATUS* %pxTaskStatusArray, i32 %add11, !dbg !2507
  %call13 = call fastcc i32 @prvListTasksWithinSingleList(%struct.xTASK_STATUS* %arrayidx12, %struct.xLIST* nonnull @xSuspendedTaskList, i32 3), !dbg !2509
  %add14 = add i32 %add11, %call13, !dbg !2510
  call void @llvm.dbg.value(metadata i32 %add14, metadata !2474, metadata !DIExpression()), !dbg !2476
  %cmp15.not = icmp eq i32* %pulTotalRunTime, null, !dbg !2511
  br i1 %cmp15.not, label %if.end17, label %if.then16, !dbg !2514

if.then16:                                        ; preds = %do.end
  store i32 0, i32* %pulTotalRunTime, align 4, !dbg !2515, !tbaa !1105
  br label %if.end17, !dbg !2517

if.end17:                                         ; preds = %if.then16, %do.end, %entry
  %uxTask.1 = phi i32 [ %add14, %if.then16 ], [ %add14, %do.end ], [ 0, %entry ], !dbg !2476
  call void @llvm.dbg.value(metadata i32 %uxTask.1, metadata !2474, metadata !DIExpression()), !dbg !2476
  %call18 = call i32 @xTaskResumeAll(), !dbg !2518
  ret i32 %uxTask.1, !dbg !2519
}

; Function Attrs: nounwind
define internal fastcc i32 @prvListTasksWithinSingleList(%struct.xTASK_STATUS* nocapture %pxTaskStatusArray, %struct.xLIST* %pxList, i32 %eState) unnamed_addr #0 section ".csection0" !dbg !2520 {
entry:
  call void @llvm.dbg.value(metadata %struct.xTASK_STATUS* %pxTaskStatusArray, metadata !2524, metadata !DIExpression()), !dbg !2537
  call void @llvm.dbg.value(metadata %struct.xLIST* %pxList, metadata !2525, metadata !DIExpression()), !dbg !2537
  call void @llvm.dbg.value(metadata i32 %eState, metadata !2526, metadata !DIExpression()), !dbg !2537
  call void @llvm.dbg.value(metadata i32 0, metadata !2529, metadata !DIExpression()), !dbg !2537
  %uxNumberOfItems = getelementptr inbounds %struct.xLIST, %struct.xLIST* %pxList, i32 0, i32 0, !dbg !2538
  %0 = load volatile i32, i32* %uxNumberOfItems, align 4, !dbg !2538, !tbaa !1122
  %cmp.not = icmp eq i32 %0, 0, !dbg !2539
  br i1 %cmp.not, label %if.end24, label %if.then, !dbg !2540

if.then:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata %struct.xLIST* %pxList, metadata !2530, metadata !DIExpression()), !dbg !2541
  %pxIndex = getelementptr inbounds %struct.xLIST, %struct.xLIST* %pxList, i32 0, i32 1, !dbg !2542
  %1 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %pxIndex, align 4, !dbg !2542, !tbaa !1142
  %pxNext = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %1, i32 0, i32 1, !dbg !2542
  %2 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %pxNext, align 4, !dbg !2542, !tbaa !1143
  store %struct.xLIST_ITEM* %2, %struct.xLIST_ITEM** %pxIndex, align 4, !dbg !2542, !tbaa !1142
  %xListEnd = getelementptr inbounds %struct.xLIST, %struct.xLIST* %pxList, i32 0, i32 2, !dbg !2543
  %3 = bitcast %struct.xMINI_LIST_ITEM* %xListEnd to %struct.xLIST_ITEM*, !dbg !2543
  %cmp3 = icmp eq %struct.xLIST_ITEM* %2, %3, !dbg !2543
  br i1 %cmp3, label %if.then4, label %if.end, !dbg !2542

if.then4:                                         ; preds = %if.then
  %pxNext6 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %2, i32 0, i32 1, !dbg !2545
  %4 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %pxNext6, align 4, !dbg !2545, !tbaa !1143
  store %struct.xLIST_ITEM* %4, %struct.xLIST_ITEM** %pxIndex, align 4, !dbg !2545, !tbaa !1142
  br label %if.end, !dbg !2545

if.end:                                           ; preds = %if.then4, %if.then
  %5 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %pxIndex, align 4, !dbg !2542, !tbaa !1142
  %pvOwner = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %5, i32 0, i32 3, !dbg !2542
  %6 = bitcast i8** %pvOwner to %struct.tskTaskControlBlock**, !dbg !2542
  %7 = load %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** %6, align 4, !dbg !2542, !tbaa !1148
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %7, metadata !2528, metadata !DIExpression()), !dbg !2537
  br label %do.body, !dbg !2547

do.body:                                          ; preds = %if.end20, %if.end
  %uxTask.0 = phi i32 [ 0, %if.end ], [ %inc, %if.end20 ], !dbg !2537
  call void @llvm.dbg.value(metadata i32 %uxTask.0, metadata !2529, metadata !DIExpression()), !dbg !2537
  call void @llvm.dbg.value(metadata %struct.xLIST* %pxList, metadata !2534, metadata !DIExpression()), !dbg !2548
  %8 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %pxIndex, align 4, !dbg !2549, !tbaa !1142
  %pxNext11 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %8, i32 0, i32 1, !dbg !2549
  %9 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %pxNext11, align 4, !dbg !2549, !tbaa !1143
  store %struct.xLIST_ITEM* %9, %struct.xLIST_ITEM** %pxIndex, align 4, !dbg !2549, !tbaa !1142
  %cmp15 = icmp eq %struct.xLIST_ITEM* %9, %3, !dbg !2550
  br i1 %cmp15, label %if.then16, label %if.end20, !dbg !2549

if.then16:                                        ; preds = %do.body
  %pxNext18 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %9, i32 0, i32 1, !dbg !2552
  %10 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %pxNext18, align 4, !dbg !2552, !tbaa !1143
  store %struct.xLIST_ITEM* %10, %struct.xLIST_ITEM** %pxIndex, align 4, !dbg !2552, !tbaa !1142
  br label %if.end20, !dbg !2552

if.end20:                                         ; preds = %if.then16, %do.body
  %11 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %pxIndex, align 4, !dbg !2549, !tbaa !1142
  %pvOwner22 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %11, i32 0, i32 3, !dbg !2549
  %12 = bitcast i8** %pvOwner22 to %struct.tskTaskControlBlock**, !dbg !2549
  %13 = load %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** %12, align 4, !dbg !2549, !tbaa !1148
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %13, metadata !2527, metadata !DIExpression()), !dbg !2537
  %arrayidx = getelementptr inbounds %struct.xTASK_STATUS, %struct.xTASK_STATUS* %pxTaskStatusArray, i32 %uxTask.0, !dbg !2554
  call void @vTaskGetInfo(%struct.tskTaskControlBlock* %13, %struct.xTASK_STATUS* %arrayidx, i32 1, i32 %eState), !dbg !2555
  %inc = add i32 %uxTask.0, 1, !dbg !2556
  call void @llvm.dbg.value(metadata i32 %inc, metadata !2529, metadata !DIExpression()), !dbg !2537
  %cmp23.not = icmp eq %struct.tskTaskControlBlock* %13, %7, !dbg !2557
  br i1 %cmp23.not, label %if.end24, label %do.body, !dbg !2558, !llvm.loop !2559

if.end24:                                         ; preds = %if.end20, %entry
  %uxTask.1 = phi i32 [ 0, %entry ], [ %inc, %if.end20 ], !dbg !2537
  call void @llvm.dbg.value(metadata i32 %uxTask.1, metadata !2529, metadata !DIExpression()), !dbg !2537
  ret i32 %uxTask.1, !dbg !2561
}

; Function Attrs: nounwind
define dso_local void @vTaskGetInfo(%struct.tskTaskControlBlock* %xTask, %struct.xTASK_STATUS* nocapture %pxTaskStatus, i32 %xGetFreeStackSpace, i32 %eState) local_unnamed_addr #0 section ".csection0" !dbg !2562 {
entry:
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %xTask, metadata !2566, metadata !DIExpression()), !dbg !2571
  call void @llvm.dbg.value(metadata %struct.xTASK_STATUS* %pxTaskStatus, metadata !2567, metadata !DIExpression()), !dbg !2571
  call void @llvm.dbg.value(metadata i32 %xGetFreeStackSpace, metadata !2568, metadata !DIExpression()), !dbg !2571
  call void @llvm.dbg.value(metadata i32 %eState, metadata !2569, metadata !DIExpression()), !dbg !2571
  %cmp = icmp eq %struct.tskTaskControlBlock* %xTask, null, !dbg !2572
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !2572

cond.true:                                        ; preds = %entry
  %0 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !2572, !tbaa !1096
  br label %cond.end, !dbg !2572

cond.end:                                         ; preds = %cond.true, %entry
  %cond = phi %struct.tskTaskControlBlock* [ %0, %cond.true ], [ %xTask, %entry ], !dbg !2572
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %cond, metadata !2570, metadata !DIExpression()), !dbg !2571
  %xHandle = getelementptr inbounds %struct.xTASK_STATUS, %struct.xTASK_STATUS* %pxTaskStatus, i32 0, i32 0, !dbg !2573
  store %struct.tskTaskControlBlock* %cond, %struct.tskTaskControlBlock** %xHandle, align 4, !dbg !2574, !tbaa !2575
  %arrayidx = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %cond, i32 0, i32 5, i32 0, !dbg !2578
  %pcTaskName1 = getelementptr inbounds %struct.xTASK_STATUS, %struct.xTASK_STATUS* %pxTaskStatus, i32 0, i32 1, !dbg !2579
  store i8* %arrayidx, i8** %pcTaskName1, align 4, !dbg !2580, !tbaa !2581
  %uxPriority = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %cond, i32 0, i32 3, !dbg !2582
  %1 = load i32, i32* %uxPriority, align 4, !dbg !2582, !tbaa !1279
  %uxCurrentPriority = getelementptr inbounds %struct.xTASK_STATUS, %struct.xTASK_STATUS* %pxTaskStatus, i32 0, i32 4, !dbg !2583
  store i32 %1, i32* %uxCurrentPriority, align 4, !dbg !2584, !tbaa !2585
  %pxStack = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %cond, i32 0, i32 4, !dbg !2586
  %2 = load i32*, i32** %pxStack, align 4, !dbg !2586, !tbaa !1098
  %pxStackBase = getelementptr inbounds %struct.xTASK_STATUS, %struct.xTASK_STATUS* %pxTaskStatus, i32 0, i32 7, !dbg !2587
  store i32* %2, i32** %pxStackBase, align 4, !dbg !2588, !tbaa !2589
  %uxTCBNumber = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %cond, i32 0, i32 6, !dbg !2590
  %3 = load i32, i32* %uxTCBNumber, align 4, !dbg !2590, !tbaa !1356
  %xTaskNumber = getelementptr inbounds %struct.xTASK_STATUS, %struct.xTASK_STATUS* %pxTaskStatus, i32 0, i32 2, !dbg !2591
  store i32 %3, i32* %xTaskNumber, align 4, !dbg !2592, !tbaa !2593
  %uxBasePriority = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %cond, i32 0, i32 8, !dbg !2594
  %4 = load i32, i32* %uxBasePriority, align 4, !dbg !2594, !tbaa !1283
  %uxBasePriority2 = getelementptr inbounds %struct.xTASK_STATUS, %struct.xTASK_STATUS* %pxTaskStatus, i32 0, i32 5, !dbg !2596
  store i32 %4, i32* %uxBasePriority2, align 4, !dbg !2597, !tbaa !2598
  %ulRunTimeCounter = getelementptr inbounds %struct.xTASK_STATUS, %struct.xTASK_STATUS* %pxTaskStatus, i32 0, i32 6, !dbg !2599
  store i32 0, i32* %ulRunTimeCounter, align 4, !dbg !2601, !tbaa !2602
  %cmp3.not = icmp eq i32 %eState, 5, !dbg !2603
  br i1 %cmp3.not, label %if.else14, label %if.then, !dbg !2605

if.then:                                          ; preds = %cond.end
  %5 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !2606, !tbaa !1096
  %cmp4 = icmp eq %struct.tskTaskControlBlock* %cond, %5, !dbg !2609
  br i1 %cmp4, label %if.then5, label %if.else, !dbg !2610

if.then5:                                         ; preds = %if.then
  %eCurrentState = getelementptr inbounds %struct.xTASK_STATUS, %struct.xTASK_STATUS* %pxTaskStatus, i32 0, i32 3, !dbg !2611
  store i32 0, i32* %eCurrentState, align 4, !dbg !2613, !tbaa !2614
  br label %if.end17, !dbg !2615

if.else:                                          ; preds = %if.then
  %eCurrentState6 = getelementptr inbounds %struct.xTASK_STATUS, %struct.xTASK_STATUS* %pxTaskStatus, i32 0, i32 3, !dbg !2616
  store i32 %eState, i32* %eCurrentState6, align 4, !dbg !2618, !tbaa !2614
  %cmp7 = icmp eq i32 %eState, 3, !dbg !2619
  br i1 %cmp7, label %if.then8, label %if.end17, !dbg !2622

if.then8:                                         ; preds = %if.else
  call void @vTaskSuspendAll(), !dbg !2623
  %pvContainer = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %cond, i32 0, i32 2, i32 4, !dbg !2625
  %6 = load %struct.xLIST*, %struct.xLIST** %pvContainer, align 4, !dbg !2625, !tbaa !1425
  %cmp9.not = icmp eq %struct.xLIST* %6, null, !dbg !2628
  br i1 %cmp9.not, label %if.end, label %if.then10, !dbg !2629

if.then10:                                        ; preds = %if.then8
  store i32 2, i32* %eCurrentState6, align 4, !dbg !2630, !tbaa !2614
  br label %if.end, !dbg !2632

if.end:                                           ; preds = %if.then10, %if.then8
  %call = call i32 @xTaskResumeAll(), !dbg !2633
  br label %if.end17, !dbg !2634

if.else14:                                        ; preds = %cond.end
  %call15 = call i32 @eTaskGetState(%struct.tskTaskControlBlock* %cond), !dbg !2635
  %eCurrentState16 = getelementptr inbounds %struct.xTASK_STATUS, %struct.xTASK_STATUS* %pxTaskStatus, i32 0, i32 3, !dbg !2637
  store i32 %call15, i32* %eCurrentState16, align 4, !dbg !2638, !tbaa !2614
  br label %if.end17

if.end17:                                         ; preds = %if.else14, %if.end, %if.else, %if.then5
  %cmp18.not = icmp eq i32 %xGetFreeStackSpace, 0, !dbg !2639
  br i1 %cmp18.not, label %if.else22, label %if.then19, !dbg !2641

if.then19:                                        ; preds = %if.end17
  %7 = bitcast i32** %pxStack to i8**, !dbg !2642
  %8 = load i8*, i8** %7, align 4, !dbg !2642, !tbaa !1098
  %call21 = call fastcc zeroext i16 @prvTaskCheckFreeStackSpace(i8* %8), !dbg !2645
  %usStackHighWaterMark = getelementptr inbounds %struct.xTASK_STATUS, %struct.xTASK_STATUS* %pxTaskStatus, i32 0, i32 8, !dbg !2646
  store i16 %call21, i16* %usStackHighWaterMark, align 4, !dbg !2647, !tbaa !2648
  br label %if.end24, !dbg !2649

if.else22:                                        ; preds = %if.end17
  %usStackHighWaterMark23 = getelementptr inbounds %struct.xTASK_STATUS, %struct.xTASK_STATUS* %pxTaskStatus, i32 0, i32 8, !dbg !2650
  store i16 0, i16* %usStackHighWaterMark23, align 4, !dbg !2652, !tbaa !2648
  br label %if.end24

if.end24:                                         ; preds = %if.else22, %if.then19
  ret void, !dbg !2653
}

; Function Attrs: norecurse nounwind readonly
define internal fastcc zeroext i16 @prvTaskCheckFreeStackSpace(i8* nocapture readonly %pucStackByte) unnamed_addr #5 section ".csection0" !dbg !2654 {
entry:
  call void @llvm.dbg.value(metadata i8* %pucStackByte, metadata !2660, metadata !DIExpression()), !dbg !2662
  call void @llvm.dbg.value(metadata i32 0, metadata !2661, metadata !DIExpression()), !dbg !2662
  %0 = load i8, i8* %pucStackByte, align 1, !dbg !2663, !tbaa !1246
  %cmp7 = icmp eq i8 %0, -91, !dbg !2664
  br i1 %cmp7, label %while.body, label %while.end, !dbg !2665

while.body:                                       ; preds = %while.body, %entry
  %ulCount.09 = phi i32 [ %inc, %while.body ], [ 0, %entry ]
  %pucStackByte.addr.08 = phi i8* [ %add.ptr, %while.body ], [ %pucStackByte, %entry ]
  call void @llvm.dbg.value(metadata i32 %ulCount.09, metadata !2661, metadata !DIExpression()), !dbg !2662
  call void @llvm.dbg.value(metadata i8* %pucStackByte.addr.08, metadata !2660, metadata !DIExpression()), !dbg !2662
  %add.ptr = getelementptr inbounds i8, i8* %pucStackByte.addr.08, i32 1, !dbg !2666
  call void @llvm.dbg.value(metadata i8* %add.ptr, metadata !2660, metadata !DIExpression()), !dbg !2662
  %inc = add i32 %ulCount.09, 1, !dbg !2668
  call void @llvm.dbg.value(metadata i32 %inc, metadata !2661, metadata !DIExpression()), !dbg !2662
  %1 = load i8, i8* %add.ptr, align 1, !dbg !2663, !tbaa !1246
  %cmp = icmp eq i8 %1, -91, !dbg !2664
  br i1 %cmp, label %while.body, label %while.end.loopexit, !dbg !2665, !llvm.loop !2669

while.end.loopexit:                               ; preds = %while.body
  %phi.bo = lshr i32 %inc, 2, !dbg !2671
  %phi.cast = trunc i32 %phi.bo to i16, !dbg !2671
  br label %while.end, !dbg !2671

while.end:                                        ; preds = %while.end.loopexit, %entry
  %ulCount.0.lcssa = phi i16 [ 0, %entry ], [ %phi.cast, %while.end.loopexit ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !2661, metadata !DIExpression()), !dbg !2662
  ret i16 %ulCount.0.lcssa, !dbg !2672
}

; Function Attrs: nounwind
define dso_local i32 @xTaskCatchUpTicks(i32 %xTicksToCatchUp) local_unnamed_addr #0 section ".csection0" !dbg !2673 {
entry:
  call void @llvm.dbg.value(metadata i32 %xTicksToCatchUp, metadata !2677, metadata !DIExpression()), !dbg !2679
  %0 = load volatile i32, i32* @uxSchedulerSuspended, align 4, !dbg !2680, !tbaa !1085
  %cmp.not = icmp eq i32 %0, 0, !dbg !2680
  br i1 %cmp.not, label %if.end, label %if.then, !dbg !2682

if.then:                                          ; preds = %entry
  %1 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #18, !dbg !2683, !srcloc !1131
  call void @llvm.dbg.value(metadata i32 %1, metadata !1128, metadata !DIExpression()) #18, !dbg !2686
  br label %for.cond, !dbg !2687

for.cond:                                         ; preds = %for.cond, %if.then
  br label %for.cond, !dbg !2688, !llvm.loop !2691

if.end:                                           ; preds = %entry
  call void @vTaskSuspendAll(), !dbg !2693
  %2 = load volatile i32, i32* @xPendedTicks, align 4, !dbg !2694, !tbaa !1105
  %add = add i32 %2, %xTicksToCatchUp, !dbg !2694
  store volatile i32 %add, i32* @xPendedTicks, align 4, !dbg !2694, !tbaa !1105
  %call = call i32 @xTaskResumeAll(), !dbg !2695
  call void @llvm.dbg.value(metadata i32 %call, metadata !2678, metadata !DIExpression()), !dbg !2679
  ret i32 %call, !dbg !2696
}

; Function Attrs: nounwind
define dso_local void @vTaskPlaceOnEventList(%struct.xLIST* %pxEventList, i32 %xTicksToWait) local_unnamed_addr #0 section ".csection0" !dbg !2697 {
entry:
  call void @llvm.dbg.value(metadata %struct.xLIST* %pxEventList, metadata !2701, metadata !DIExpression()), !dbg !2703
  call void @llvm.dbg.value(metadata i32 %xTicksToWait, metadata !2702, metadata !DIExpression()), !dbg !2703
  %cmp = icmp eq %struct.xLIST* %pxEventList, null, !dbg !2704
  br i1 %cmp, label %if.then, label %if.end, !dbg !2706

if.then:                                          ; preds = %entry
  %0 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #18, !dbg !2707, !srcloc !1131
  call void @llvm.dbg.value(metadata i32 %0, metadata !1128, metadata !DIExpression()) #18, !dbg !2710
  br label %for.cond, !dbg !2711

for.cond:                                         ; preds = %for.cond, %if.then
  br label %for.cond, !dbg !2712, !llvm.loop !2715

if.end:                                           ; preds = %entry
  %1 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !2717, !tbaa !1096
  %xEventListItem = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %1, i32 0, i32 2, !dbg !2718
  call void @vListInsert(%struct.xLIST* nonnull %pxEventList, %struct.xLIST_ITEM* nonnull %xEventListItem) #18, !dbg !2719
  call fastcc void @prvAddCurrentTaskToDelayedList(i32 %xTicksToWait, i32 1), !dbg !2720
  ret void, !dbg !2721
}

; Function Attrs: nounwind
define dso_local void @vTaskPlaceOnUnorderedEventList(%struct.xLIST* %pxEventList, i32 %xItemValue, i32 %xTicksToWait) local_unnamed_addr #0 section ".csection0" !dbg !2722 {
entry:
  call void @llvm.dbg.value(metadata %struct.xLIST* %pxEventList, metadata !2726, metadata !DIExpression()), !dbg !2729
  call void @llvm.dbg.value(metadata i32 %xItemValue, metadata !2727, metadata !DIExpression()), !dbg !2729
  call void @llvm.dbg.value(metadata i32 %xTicksToWait, metadata !2728, metadata !DIExpression()), !dbg !2729
  %cmp = icmp eq %struct.xLIST* %pxEventList, null, !dbg !2730
  br i1 %cmp, label %if.then, label %if.end, !dbg !2732

if.then:                                          ; preds = %entry
  %0 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #18, !dbg !2733, !srcloc !1131
  call void @llvm.dbg.value(metadata i32 %0, metadata !1128, metadata !DIExpression()) #18, !dbg !2736
  br label %for.cond, !dbg !2737

for.cond:                                         ; preds = %for.cond, %if.then
  br label %for.cond, !dbg !2738, !llvm.loop !2741

if.end:                                           ; preds = %entry
  %1 = load volatile i32, i32* @uxSchedulerSuspended, align 4, !dbg !2743, !tbaa !1085
  %cmp1.not = icmp eq i32 %1, 0, !dbg !2743
  br i1 %cmp1.not, label %if.then4, label %if.end6, !dbg !2745

if.then4:                                         ; preds = %if.end
  %2 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #18, !dbg !2746, !srcloc !1131
  call void @llvm.dbg.value(metadata i32 %2, metadata !1128, metadata !DIExpression()) #18, !dbg !2749
  br label %for.cond5, !dbg !2750

for.cond5:                                        ; preds = %for.cond5, %if.then4
  br label %for.cond5, !dbg !2751, !llvm.loop !2754

if.end6:                                          ; preds = %if.end
  %or = or i32 %xItemValue, -2147483648, !dbg !2756
  %3 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !2756, !tbaa !1096
  %xItemValue7 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %3, i32 0, i32 2, i32 0, !dbg !2756
  store i32 %or, i32* %xItemValue7, align 4, !dbg !2756, !tbaa !1294
  %4 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !2757, !tbaa !1096
  %xEventListItem8 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %4, i32 0, i32 2, !dbg !2758
  call void @vListInsertEnd(%struct.xLIST* nonnull %pxEventList, %struct.xLIST_ITEM* nonnull %xEventListItem8) #18, !dbg !2759
  call fastcc void @prvAddCurrentTaskToDelayedList(i32 %xTicksToWait, i32 1), !dbg !2760
  ret void, !dbg !2761
}

; Function Attrs: nounwind
define dso_local void @vTaskPlaceOnEventListRestricted(%struct.xLIST* %pxEventList, i32 %xTicksToWait, i32 %xWaitIndefinitely) local_unnamed_addr #0 section ".csection0" !dbg !2762 {
entry:
  call void @llvm.dbg.value(metadata %struct.xLIST* %pxEventList, metadata !2766, metadata !DIExpression()), !dbg !2769
  call void @llvm.dbg.value(metadata i32 %xTicksToWait, metadata !2767, metadata !DIExpression()), !dbg !2769
  call void @llvm.dbg.value(metadata i32 %xWaitIndefinitely, metadata !2768, metadata !DIExpression()), !dbg !2769
  %cmp = icmp eq %struct.xLIST* %pxEventList, null, !dbg !2770
  br i1 %cmp, label %if.then, label %if.end, !dbg !2772

if.then:                                          ; preds = %entry
  %0 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #18, !dbg !2773, !srcloc !1131
  call void @llvm.dbg.value(metadata i32 %0, metadata !1128, metadata !DIExpression()) #18, !dbg !2776
  br label %for.cond, !dbg !2777

for.cond:                                         ; preds = %for.cond, %if.then
  br label %for.cond, !dbg !2778, !llvm.loop !2781

if.end:                                           ; preds = %entry
  %1 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !2783, !tbaa !1096
  %xEventListItem = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %1, i32 0, i32 2, !dbg !2784
  call void @vListInsertEnd(%struct.xLIST* nonnull %pxEventList, %struct.xLIST_ITEM* nonnull %xEventListItem) #18, !dbg !2785
  %cmp1.not = icmp eq i32 %xWaitIndefinitely, 0, !dbg !2786
  %spec.select = select i1 %cmp1.not, i32 %xTicksToWait, i32 -1, !dbg !2788
  call void @llvm.dbg.value(metadata i32 %spec.select, metadata !2767, metadata !DIExpression()), !dbg !2769
  call fastcc void @prvAddCurrentTaskToDelayedList(i32 %spec.select, i32 %xWaitIndefinitely), !dbg !2789
  ret void, !dbg !2790
}

; Function Attrs: nounwind
define dso_local i32 @xTaskRemoveFromEventList(%struct.xLIST* nocapture readonly %pxEventList) local_unnamed_addr #0 section ".csection0" !dbg !2791 {
entry:
  call void @llvm.dbg.value(metadata %struct.xLIST* %pxEventList, metadata !2796, metadata !DIExpression()), !dbg !2799
  %pxNext = getelementptr inbounds %struct.xLIST, %struct.xLIST* %pxEventList, i32 0, i32 2, i32 1, !dbg !2800
  %0 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %pxNext, align 4, !dbg !2800, !tbaa !1493
  %pvOwner = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %0, i32 0, i32 3, !dbg !2800
  %1 = bitcast i8** %pvOwner to %struct.tskTaskControlBlock**, !dbg !2800
  %2 = load %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** %1, align 4, !dbg !2800, !tbaa !1148
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %2, metadata !2797, metadata !DIExpression()), !dbg !2799
  %cmp = icmp eq %struct.tskTaskControlBlock* %2, null, !dbg !2801
  br i1 %cmp, label %if.then, label %if.end, !dbg !2803

if.then:                                          ; preds = %entry
  %3 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #18, !dbg !2804, !srcloc !1131
  call void @llvm.dbg.value(metadata i32 %3, metadata !1128, metadata !DIExpression()) #18, !dbg !2807
  br label %for.cond, !dbg !2808

for.cond:                                         ; preds = %for.cond, %if.then
  br label %for.cond, !dbg !2809, !llvm.loop !2812

if.end:                                           ; preds = %entry
  %xEventListItem = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %2, i32 0, i32 2, !dbg !2814
  %call = call i32 @icall_arg1p(i32 4, i8* bitcast (i32 (%struct.xLIST_ITEM*)* @uxListRemove to i8*), i8* %5, i32 ptrtoint (%struct.xLIST_ITEM* getelementptr (%struct.xLIST_ITEM, %struct.xLIST_ITEM* null, i32 1) to i32)), !dbg !2815
  %4 = load volatile i32, i32* @uxSchedulerSuspended, align 4, !dbg !2816, !tbaa !1085
  %cmp1 = icmp eq i32 %4, 0, !dbg !2818
  br i1 %cmp1, label %if.then2, label %if.else, !dbg !2819
  %5 = bitcast %struct.xLIST_ITEM* %xEventListItem to i8*

if.then2:                                         ; preds = %if.end
  %xStateListItem = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %2, i32 0, i32 1, !dbg !2820
  %call3 = call i32 @icall_arg1p(i32 4, i8* bitcast (i32 (%struct.xLIST_ITEM*)* @uxListRemove to i8*), i8* %8, i32 ptrtoint (%struct.xLIST_ITEM* getelementptr (%struct.xLIST_ITEM, %struct.xLIST_ITEM* null, i32 1) to i32)), !dbg !2822
  %uxPriority = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %2, i32 0, i32 3, !dbg !2823
  %6 = load i32, i32* %uxPriority, align 4, !dbg !2823, !tbaa !1279
  %shl = shl i32 1, %6, !dbg !2823
  %7 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !2823, !tbaa !1085
  %or = or i32 %7, %shl, !dbg !2823
  store volatile i32 %or, i32* @uxTopReadyPriority, align 4, !dbg !2823, !tbaa !1085
  %arrayidx = getelementptr inbounds [5 x %struct.xLIST], [5 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %6, !dbg !2823
  call void @vListInsertEnd(%struct.xLIST* nonnull %arrayidx, %struct.xLIST_ITEM* nonnull %xStateListItem) #18, !dbg !2823
  br label %if.end7, !dbg !2824
  %8 = bitcast %struct.xLIST_ITEM* %xStateListItem to i8*

if.else:                                          ; preds = %if.end
  call void @vListInsertEnd(%struct.xLIST* nonnull @xPendingReadyList, %struct.xLIST_ITEM* nonnull %xEventListItem) #18, !dbg !2825
  br label %if.end7

if.end7:                                          ; preds = %if.else, %if.then2
  %uxPriority8 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %2, i32 0, i32 3, !dbg !2827
  %9 = load i32, i32* %uxPriority8, align 4, !dbg !2827, !tbaa !1279
  %10 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !2829, !tbaa !1096
  %uxPriority9 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %10, i32 0, i32 3, !dbg !2830
  %11 = load i32, i32* %uxPriority9, align 4, !dbg !2830, !tbaa !1279
  %cmp10 = icmp ugt i32 %9, %11, !dbg !2831
  br i1 %cmp10, label %if.then11, label %if.end13, !dbg !2832

if.then11:                                        ; preds = %if.end7
  call void @llvm.dbg.value(metadata i32 1, metadata !2798, metadata !DIExpression()), !dbg !2799
  store volatile i32 1, i32* @xYieldPending, align 4, !dbg !2833, !tbaa !1085
  br label %if.end13, !dbg !2835

if.end13:                                         ; preds = %if.then11, %if.end7
  %xReturn.0 = phi i32 [ 1, %if.then11 ], [ 0, %if.end7 ], !dbg !2836
  call void @llvm.dbg.value(metadata i32 %xReturn.0, metadata !2798, metadata !DIExpression()), !dbg !2799
  ret i32 %xReturn.0, !dbg !2837
}

; Function Attrs: nounwind
define dso_local void @vTaskRemoveFromUnorderedEventList(%struct.xLIST_ITEM* %pxEventListItem, i32 %xItemValue) local_unnamed_addr #0 section ".csection0" !dbg !2838 {
entry:
  call void @llvm.dbg.value(metadata %struct.xLIST_ITEM* %pxEventListItem, metadata !2842, metadata !DIExpression()), !dbg !2845
  call void @llvm.dbg.value(metadata i32 %xItemValue, metadata !2843, metadata !DIExpression()), !dbg !2845
  %0 = load volatile i32, i32* @uxSchedulerSuspended, align 4, !dbg !2846, !tbaa !1085
  %cmp.not = icmp eq i32 %0, 0, !dbg !2846
  br i1 %cmp.not, label %if.then, label %if.end, !dbg !2848

if.then:                                          ; preds = %entry
  %1 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #18, !dbg !2849, !srcloc !1131
  call void @llvm.dbg.value(metadata i32 %1, metadata !1128, metadata !DIExpression()) #18, !dbg !2852
  br label %for.cond, !dbg !2853

for.cond:                                         ; preds = %for.cond, %if.then
  br label %for.cond, !dbg !2854, !llvm.loop !2857

if.end:                                           ; preds = %entry
  %or = or i32 %xItemValue, -2147483648, !dbg !2859
  %xItemValue3 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %pxEventListItem, i32 0, i32 0, !dbg !2859
  store i32 %or, i32* %xItemValue3, align 4, !dbg !2859, !tbaa !1494
  %pvOwner = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %pxEventListItem, i32 0, i32 3, !dbg !2860
  %2 = bitcast i8** %pvOwner to %struct.tskTaskControlBlock**, !dbg !2860
  %3 = load %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** %2, align 4, !dbg !2860, !tbaa !1148
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %3, metadata !2844, metadata !DIExpression()), !dbg !2845
  %cmp4 = icmp eq %struct.tskTaskControlBlock* %3, null, !dbg !2861
  br i1 %cmp4, label %if.then6, label %if.end8, !dbg !2863

if.then6:                                         ; preds = %if.end
  %4 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #18, !dbg !2864, !srcloc !1131
  call void @llvm.dbg.value(metadata i32 %4, metadata !1128, metadata !DIExpression()) #18, !dbg !2867
  br label %for.cond7, !dbg !2868

for.cond7:                                        ; preds = %for.cond7, %if.then6
  br label %for.cond7, !dbg !2869, !llvm.loop !2872

if.end8:                                          ; preds = %if.end
  %call = call i32 @icall_arg1p(i32 4, i8* bitcast (i32 (%struct.xLIST_ITEM*)* @uxListRemove to i8*), i8* %10, i32 ptrtoint (%struct.xLIST_ITEM* getelementptr (%struct.xLIST_ITEM, %struct.xLIST_ITEM* null, i32 1) to i32)), !dbg !2874
  %xStateListItem = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %3, i32 0, i32 1, !dbg !2875
  %call9 = call i32 @icall_arg1p(i32 4, i8* bitcast (i32 (%struct.xLIST_ITEM*)* @uxListRemove to i8*), i8* %11, i32 ptrtoint (%struct.xLIST_ITEM* getelementptr (%struct.xLIST_ITEM, %struct.xLIST_ITEM* null, i32 1) to i32)), !dbg !2876
  %uxPriority = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %3, i32 0, i32 3, !dbg !2877
  %5 = load i32, i32* %uxPriority, align 4, !dbg !2877, !tbaa !1279
  %shl = shl i32 1, %5, !dbg !2877
  %6 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !2877, !tbaa !1085
  %or10 = or i32 %6, %shl, !dbg !2877
  store volatile i32 %or10, i32* @uxTopReadyPriority, align 4, !dbg !2877, !tbaa !1085
  %arrayidx = getelementptr inbounds [5 x %struct.xLIST], [5 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %5, !dbg !2877
  call void @vListInsertEnd(%struct.xLIST* nonnull %arrayidx, %struct.xLIST_ITEM* nonnull %xStateListItem) #18, !dbg !2877
  %7 = load i32, i32* %uxPriority, align 4, !dbg !2878, !tbaa !1279
  %8 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !2880, !tbaa !1096
  %uxPriority14 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %8, i32 0, i32 3, !dbg !2881
  %9 = load i32, i32* %uxPriority14, align 4, !dbg !2881, !tbaa !1279
  %cmp15 = icmp ugt i32 %7, %9, !dbg !2882
  br i1 %cmp15, label %if.then17, label %if.end18, !dbg !2883
  %10 = bitcast %struct.xLIST_ITEM* %pxEventListItem to i8*
  %11 = bitcast %struct.xLIST_ITEM* %xStateListItem to i8*

if.then17:                                        ; preds = %if.end8
  store volatile i32 1, i32* @xYieldPending, align 4, !dbg !2884, !tbaa !1085
  br label %if.end18, !dbg !2886

if.end18:                                         ; preds = %if.then17, %if.end8
  ret void, !dbg !2887
}

; Function Attrs: nounwind
define dso_local void @vTaskSetTimeOutState(%struct.xTIME_OUT* %pxTimeOut) local_unnamed_addr #0 section ".csection0" !dbg !2888 {
entry:
  call void @llvm.dbg.value(metadata %struct.xTIME_OUT* %pxTimeOut, metadata !2899, metadata !DIExpression()), !dbg !2900
  %cmp = icmp eq %struct.xTIME_OUT* %pxTimeOut, null, !dbg !2901
  br i1 %cmp, label %if.then, label %if.end, !dbg !2903

if.then:                                          ; preds = %entry
  %0 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #18, !dbg !2904, !srcloc !1131
  call void @llvm.dbg.value(metadata i32 %0, metadata !1128, metadata !DIExpression()) #18, !dbg !2907
  br label %for.cond, !dbg !2908

for.cond:                                         ; preds = %for.cond, %if.then
  br label %for.cond, !dbg !2909, !llvm.loop !2912

if.end:                                           ; preds = %entry
  call void @vPortEnterCritical() #18, !dbg !2914
  %1 = load volatile i32, i32* @xNumOfOverflows, align 4, !dbg !2915, !tbaa !1085
  %xOverflowCount = getelementptr inbounds %struct.xTIME_OUT, %struct.xTIME_OUT* %pxTimeOut, i32 0, i32 0, !dbg !2917
  store i32 %1, i32* %xOverflowCount, align 4, !dbg !2918, !tbaa !2919
  %2 = load volatile i32, i32* @xTickCount, align 4, !dbg !2921, !tbaa !1105
  %xTimeOnEntering = getelementptr inbounds %struct.xTIME_OUT, %struct.xTIME_OUT* %pxTimeOut, i32 0, i32 1, !dbg !2922
  store i32 %2, i32* %xTimeOnEntering, align 4, !dbg !2923, !tbaa !2924
  call void @vPortExitCritical() #18, !dbg !2925
  ret void, !dbg !2926
}

; Function Attrs: nofree norecurse nounwind willreturn
define dso_local void @vTaskInternalSetTimeOutState(%struct.xTIME_OUT* nocapture %pxTimeOut) local_unnamed_addr #3 section ".csection0" !dbg !2927 {
entry:
  call void @llvm.dbg.value(metadata %struct.xTIME_OUT* %pxTimeOut, metadata !2929, metadata !DIExpression()), !dbg !2930
  %0 = load volatile i32, i32* @xNumOfOverflows, align 4, !dbg !2931, !tbaa !1085
  %xOverflowCount = getelementptr inbounds %struct.xTIME_OUT, %struct.xTIME_OUT* %pxTimeOut, i32 0, i32 0, !dbg !2932
  store i32 %0, i32* %xOverflowCount, align 4, !dbg !2933, !tbaa !2919
  %1 = load volatile i32, i32* @xTickCount, align 4, !dbg !2934, !tbaa !1105
  %xTimeOnEntering = getelementptr inbounds %struct.xTIME_OUT, %struct.xTIME_OUT* %pxTimeOut, i32 0, i32 1, !dbg !2935
  store i32 %1, i32* %xTimeOnEntering, align 4, !dbg !2936, !tbaa !2924
  ret void, !dbg !2937
}

; Function Attrs: nounwind
define dso_local i32 @xTaskCheckForTimeOut(%struct.xTIME_OUT* %pxTimeOut, i32* %pxTicksToWait) local_unnamed_addr #0 section ".csection0" !dbg !2938 {
entry:
  call void @llvm.dbg.value(metadata %struct.xTIME_OUT* %pxTimeOut, metadata !2942, metadata !DIExpression()), !dbg !2948
  call void @llvm.dbg.value(metadata i32* %pxTicksToWait, metadata !2943, metadata !DIExpression()), !dbg !2948
  %cmp = icmp eq %struct.xTIME_OUT* %pxTimeOut, null, !dbg !2949
  br i1 %cmp, label %if.then, label %if.end, !dbg !2951

if.then:                                          ; preds = %entry
  %0 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #18, !dbg !2952, !srcloc !1131
  call void @llvm.dbg.value(metadata i32 %0, metadata !1128, metadata !DIExpression()) #18, !dbg !2955
  br label %for.cond, !dbg !2956

for.cond:                                         ; preds = %for.cond, %if.then
  br label %for.cond, !dbg !2957, !llvm.loop !2960

if.end:                                           ; preds = %entry
  %cmp1 = icmp eq i32* %pxTicksToWait, null, !dbg !2962
  br i1 %cmp1, label %if.then2, label %if.end4, !dbg !2964

if.then2:                                         ; preds = %if.end
  %1 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #18, !dbg !2965, !srcloc !1131
  call void @llvm.dbg.value(metadata i32 %1, metadata !1128, metadata !DIExpression()) #18, !dbg !2968
  br label %for.cond3, !dbg !2969

for.cond3:                                        ; preds = %for.cond3, %if.then2
  br label %for.cond3, !dbg !2970, !llvm.loop !2973

if.end4:                                          ; preds = %if.end
  call void @vPortEnterCritical() #18, !dbg !2975
  %2 = load volatile i32, i32* @xTickCount, align 4, !dbg !2976, !tbaa !1105
  call void @llvm.dbg.value(metadata i32 %2, metadata !2945, metadata !DIExpression()), !dbg !2977
  %xTimeOnEntering = getelementptr inbounds %struct.xTIME_OUT, %struct.xTIME_OUT* %pxTimeOut, i32 0, i32 1, !dbg !2978
  %3 = load i32, i32* %xTimeOnEntering, align 4, !dbg !2978, !tbaa !2924
  %sub = sub i32 %2, %3, !dbg !2979
  call void @llvm.dbg.value(metadata i32 %sub, metadata !2947, metadata !DIExpression()), !dbg !2977
  %4 = load i32, i32* %pxTicksToWait, align 4, !dbg !2980, !tbaa !1105
  %cmp5 = icmp eq i32 %4, -1, !dbg !2982
  br i1 %cmp5, label %if.end18, label %if.else, !dbg !2983

if.else:                                          ; preds = %if.end4
  %5 = load volatile i32, i32* @xNumOfOverflows, align 4, !dbg !2984, !tbaa !1085
  %xOverflowCount = getelementptr inbounds %struct.xTIME_OUT, %struct.xTIME_OUT* %pxTimeOut, i32 0, i32 0, !dbg !2986
  %6 = load i32, i32* %xOverflowCount, align 4, !dbg !2986, !tbaa !2919
  %cmp7.not = icmp eq i32 %5, %6, !dbg !2987
  %cmp9.not = icmp ult i32 %2, %3
  %or.cond = or i1 %cmp9.not, %cmp7.not, !dbg !2988
  br i1 %or.cond, label %if.else11, label %if.then10, !dbg !2988

if.then10:                                        ; preds = %if.else
  call void @llvm.dbg.value(metadata i32 1, metadata !2944, metadata !DIExpression()), !dbg !2948
  store i32 0, i32* %pxTicksToWait, align 4, !dbg !2989, !tbaa !1105
  br label %if.end18, !dbg !2991

if.else11:                                        ; preds = %if.else
  %cmp12 = icmp ugt i32 %4, %sub, !dbg !2992
  br i1 %cmp12, label %if.then13, label %if.else15, !dbg !2994

if.then13:                                        ; preds = %if.else11
  %sub14 = sub i32 %4, %sub, !dbg !2995
  store i32 %sub14, i32* %pxTicksToWait, align 4, !dbg !2995, !tbaa !1105
  call void @vTaskInternalSetTimeOutState(%struct.xTIME_OUT* nonnull %pxTimeOut), !dbg !2997
  call void @llvm.dbg.value(metadata i32 0, metadata !2944, metadata !DIExpression()), !dbg !2948
  br label %if.end18, !dbg !2998

if.else15:                                        ; preds = %if.else11
  store i32 0, i32* %pxTicksToWait, align 4, !dbg !2999, !tbaa !1105
  call void @llvm.dbg.value(metadata i32 1, metadata !2944, metadata !DIExpression()), !dbg !2948
  br label %if.end18

if.end18:                                         ; preds = %if.else15, %if.then13, %if.then10, %if.end4
  %xReturn.0 = phi i32 [ 1, %if.then10 ], [ 0, %if.then13 ], [ 1, %if.else15 ], [ 0, %if.end4 ], !dbg !3001
  call void @llvm.dbg.value(metadata i32 %xReturn.0, metadata !2944, metadata !DIExpression()), !dbg !2948
  call void @vPortExitCritical() #18, !dbg !3002
  ret i32 %xReturn.0, !dbg !3003
}

; Function Attrs: nofree norecurse nounwind willreturn
define dso_local void @vTaskMissedYield() local_unnamed_addr #3 section ".csection0" !dbg !3004 {
entry:
  store volatile i32 1, i32* @xYieldPending, align 4, !dbg !3005, !tbaa !1085
  ret void, !dbg !3006
}

; Function Attrs: norecurse nounwind readonly willreturn
define dso_local i32 @uxTaskGetTaskNumber(%struct.tskTaskControlBlock* readonly %xTask) local_unnamed_addr #6 section ".csection0" !dbg !3007 {
entry:
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %xTask, metadata !3011, metadata !DIExpression()), !dbg !3014
  %cmp.not = icmp eq %struct.tskTaskControlBlock* %xTask, null, !dbg !3015
  br i1 %cmp.not, label %if.end, label %if.then, !dbg !3017

if.then:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %xTask, metadata !3013, metadata !DIExpression()), !dbg !3014
  %uxTaskNumber = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %xTask, i32 0, i32 7, !dbg !3018
  %0 = load i32, i32* %uxTaskNumber, align 4, !dbg !3018, !tbaa !3020
  call void @llvm.dbg.value(metadata i32 %0, metadata !3012, metadata !DIExpression()), !dbg !3014
  br label %if.end, !dbg !3021

if.end:                                           ; preds = %if.then, %entry
  %uxReturn.0 = phi i32 [ %0, %if.then ], [ 0, %entry ], !dbg !3022
  call void @llvm.dbg.value(metadata i32 %uxReturn.0, metadata !3012, metadata !DIExpression()), !dbg !3014
  ret i32 %uxReturn.0, !dbg !3023
}

; Function Attrs: nofree norecurse nounwind willreturn writeonly
define dso_local void @vTaskSetTaskNumber(%struct.tskTaskControlBlock* %xTask, i32 %uxHandle) local_unnamed_addr #7 section ".csection0" !dbg !3024 {
entry:
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %xTask, metadata !3028, metadata !DIExpression()), !dbg !3031
  call void @llvm.dbg.value(metadata i32 %uxHandle, metadata !3029, metadata !DIExpression()), !dbg !3031
  %cmp.not = icmp eq %struct.tskTaskControlBlock* %xTask, null, !dbg !3032
  br i1 %cmp.not, label %if.end, label %if.then, !dbg !3034

if.then:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %xTask, metadata !3030, metadata !DIExpression()), !dbg !3031
  %uxTaskNumber = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %xTask, i32 0, i32 7, !dbg !3035
  store i32 %uxHandle, i32* %uxTaskNumber, align 4, !dbg !3037, !tbaa !3020
  br label %if.end, !dbg !3038

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !3039
}

; Function Attrs: nofree norecurse nounwind willreturn
define dso_local %struct.tskTaskControlBlock* @xTaskGetCurrentTaskHandle() local_unnamed_addr #3 section ".csection0" !dbg !3040 {
entry:
  %0 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !3045, !tbaa !1096
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %0, metadata !3044, metadata !DIExpression()), !dbg !3046
  ret %struct.tskTaskControlBlock* %0, !dbg !3047
}

; Function Attrs: nofree norecurse nounwind willreturn
define dso_local i32 @xTaskGetSchedulerState() local_unnamed_addr #3 section ".csection0" !dbg !3048 {
entry:
  %0 = load volatile i32, i32* @xSchedulerRunning, align 4, !dbg !3051, !tbaa !1085
  %cmp = icmp eq i32 %0, 0, !dbg !3053
  br i1 %cmp, label %if.end4, label %if.else, !dbg !3054

if.else:                                          ; preds = %entry
  %1 = load volatile i32, i32* @uxSchedulerSuspended, align 4, !dbg !3055, !tbaa !1085
  %cmp1 = icmp eq i32 %1, 0, !dbg !3058
  %spec.select = select i1 %cmp1, i32 2, i32 0, !dbg !3059
  br label %UnifiedReturnBlock

if.end4:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata i32 1, metadata !3050, metadata !DIExpression()), !dbg !3060
  br label %UnifiedReturnBlock

UnifiedReturnBlock:                               ; preds = %if.end4, %if.else
  %UnifiedRetVal = phi i32 [ %spec.select, %if.else ], [ 1, %if.end4 ]
  ret i32 %UnifiedRetVal
}

; Function Attrs: nounwind
define dso_local i32 @xTaskPriorityInherit(%struct.tskTaskControlBlock* %pxMutexHolder) local_unnamed_addr #0 section ".csection0" !dbg !3061 {
entry:
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %pxMutexHolder, metadata !3063, metadata !DIExpression()), !dbg !3066
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %pxMutexHolder, metadata !3064, metadata !DIExpression()), !dbg !3066
  call void @llvm.dbg.value(metadata i32 0, metadata !3065, metadata !DIExpression()), !dbg !3066
  %cmp.not = icmp eq %struct.tskTaskControlBlock* %pxMutexHolder, null, !dbg !3067
  br i1 %cmp.not, label %if.end39, label %if.then, !dbg !3069

if.then:                                          ; preds = %entry
  %uxPriority = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %pxMutexHolder, i32 0, i32 3, !dbg !3070
  %0 = load i32, i32* %uxPriority, align 4, !dbg !3070, !tbaa !1279
  %1 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !3073, !tbaa !1096
  %uxPriority1 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %1, i32 0, i32 3, !dbg !3074
  %2 = load i32, i32* %uxPriority1, align 4, !dbg !3074, !tbaa !1279
  %cmp2 = icmp ult i32 %0, %2, !dbg !3075
  br i1 %cmp2, label %if.then3, label %if.else31, !dbg !3076

if.then3:                                         ; preds = %if.then
  %xItemValue = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %pxMutexHolder, i32 0, i32 2, i32 0, !dbg !3077
  %3 = load i32, i32* %xItemValue, align 4, !dbg !3077, !tbaa !1294
  %cmp4 = icmp sgt i32 %3, -1, !dbg !3080
  br i1 %cmp4, label %if.then5, label %if.end, !dbg !3081

if.then5:                                         ; preds = %if.then3
  %4 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !3082, !tbaa !1096
  %uxPriority6 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %4, i32 0, i32 3, !dbg !3082
  %5 = load i32, i32* %uxPriority6, align 4, !dbg !3082, !tbaa !1279
  %sub = sub i32 5, %5, !dbg !3082
  store i32 %sub, i32* %xItemValue, align 4, !dbg !3082, !tbaa !1294
  br label %if.end, !dbg !3084

if.end:                                           ; preds = %if.then5, %if.then3
  %xStateListItem = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %pxMutexHolder, i32 0, i32 1, !dbg !3085
  %pvContainer = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %pxMutexHolder, i32 0, i32 1, i32 4, !dbg !3085
  %6 = load %struct.xLIST*, %struct.xLIST** %pvContainer, align 4, !dbg !3085, !tbaa !1926
  %arrayidx = getelementptr inbounds [5 x %struct.xLIST], [5 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %0, !dbg !3085
  %cmp10 = icmp eq %struct.xLIST* %6, %arrayidx, !dbg !3085
  br i1 %cmp10, label %if.then12, label %if.else27, !dbg !3087

if.then12:                                        ; preds = %if.end
  %call = call i32 @icall_arg1p(i32 4, i8* bitcast (i32 (%struct.xLIST_ITEM*)* @uxListRemove to i8*), i8* %7, i32 ptrtoint (%struct.xLIST_ITEM* getelementptr (%struct.xLIST_ITEM, %struct.xLIST_ITEM* null, i32 1) to i32)), !dbg !3088
  %cmp14 = icmp eq i32 %call, 0, !dbg !3091
  br i1 %cmp14, label %if.then15, label %if.end19, !dbg !3092
  %7 = bitcast %struct.xLIST_ITEM* %xStateListItem to i8*

if.then15:                                        ; preds = %if.then12
  %8 = load i32, i32* %uxPriority, align 4, !dbg !3093, !tbaa !1279
  %shl = shl i32 1, %8, !dbg !3093
  %neg = xor i32 %shl, -1, !dbg !3093
  %9 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !3093, !tbaa !1085
  %and17 = and i32 %9, %neg, !dbg !3093
  store volatile i32 %and17, i32* @uxTopReadyPriority, align 4, !dbg !3093, !tbaa !1085
  br label %if.end19, !dbg !3095

if.end19:                                         ; preds = %if.then15, %if.then12
  %10 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !3096, !tbaa !1096
  %uxPriority20 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %10, i32 0, i32 3, !dbg !3097
  %11 = load i32, i32* %uxPriority20, align 4, !dbg !3097, !tbaa !1279
  store i32 %11, i32* %uxPriority, align 4, !dbg !3098, !tbaa !1279
  %shl23 = shl i32 1, %11, !dbg !3099
  %12 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !3099, !tbaa !1085
  %or = or i32 %12, %shl23, !dbg !3099
  store volatile i32 %or, i32* @uxTopReadyPriority, align 4, !dbg !3099, !tbaa !1085
  %arrayidx25 = getelementptr inbounds [5 x %struct.xLIST], [5 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %11, !dbg !3099
  call void @vListInsertEnd(%struct.xLIST* nonnull %arrayidx25, %struct.xLIST_ITEM* nonnull %xStateListItem) #18, !dbg !3099
  br label %if.end39, !dbg !3100

if.else27:                                        ; preds = %if.end
  %13 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !3101, !tbaa !1096
  %uxPriority28 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %13, i32 0, i32 3, !dbg !3103
  %14 = load i32, i32* %uxPriority28, align 4, !dbg !3103, !tbaa !1279
  store i32 %14, i32* %uxPriority, align 4, !dbg !3104, !tbaa !1279
  br label %if.end39

if.else31:                                        ; preds = %if.then
  %uxBasePriority = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %pxMutexHolder, i32 0, i32 8, !dbg !3105
  %15 = load i32, i32* %uxBasePriority, align 4, !dbg !3105, !tbaa !1283
  %16 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !3108, !tbaa !1096
  %uxPriority32 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %16, i32 0, i32 3, !dbg !3109
  %17 = load i32, i32* %uxPriority32, align 4, !dbg !3109, !tbaa !1279
  %cmp33 = icmp ult i32 %15, %17, !dbg !3110
  %spec.select = zext i1 %cmp33 to i32, !dbg !3111
  br label %UnifiedReturnBlock

if.end39:                                         ; preds = %if.else27, %if.end19, %entry
  %xReturn.0 = phi i32 [ 0, %entry ], [ 1, %if.else27 ], [ 1, %if.end19 ], !dbg !3066
  call void @llvm.dbg.value(metadata i32 %xReturn.0, metadata !3065, metadata !DIExpression()), !dbg !3066
  br label %UnifiedReturnBlock

UnifiedReturnBlock:                               ; preds = %if.end39, %if.else31
  %UnifiedRetVal = phi i32 [ %spec.select, %if.else31 ], [ %xReturn.0, %if.end39 ]
  ret i32 %UnifiedRetVal
}

; Function Attrs: nounwind
define dso_local i32 @xTaskPriorityDisinherit(%struct.tskTaskControlBlock* %pxMutexHolder) local_unnamed_addr #0 section ".csection0" !dbg !3112 {
entry:
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %pxMutexHolder, metadata !3114, metadata !DIExpression()), !dbg !3117
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %pxMutexHolder, metadata !3115, metadata !DIExpression()), !dbg !3117
  call void @llvm.dbg.value(metadata i32 0, metadata !3116, metadata !DIExpression()), !dbg !3117
  %cmp.not = icmp eq %struct.tskTaskControlBlock* %pxMutexHolder, null, !dbg !3118
  br i1 %cmp.not, label %if.end35, label %if.then, !dbg !3120

if.then:                                          ; preds = %entry
  %0 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !3121, !tbaa !1096
  %cmp1.not = icmp eq %struct.tskTaskControlBlock* %0, %pxMutexHolder, !dbg !3121
  br i1 %cmp1.not, label %if.end, label %if.then4, !dbg !3124

if.then4:                                         ; preds = %if.then
  %1 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #18, !dbg !3125, !srcloc !1131
  call void @llvm.dbg.value(metadata i32 %1, metadata !1128, metadata !DIExpression()) #18, !dbg !3128
  br label %for.cond, !dbg !3129

for.cond:                                         ; preds = %for.cond, %if.then4
  br label %for.cond, !dbg !3130, !llvm.loop !3133

if.end:                                           ; preds = %if.then
  %uxMutexesHeld = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %pxMutexHolder, i32 0, i32 9, !dbg !3135
  %2 = load i32, i32* %uxMutexesHeld, align 4, !dbg !3135, !tbaa !1286
  %cmp5 = icmp eq i32 %2, 0, !dbg !3135
  br i1 %cmp5, label %if.then7, label %if.end9, !dbg !3137

if.then7:                                         ; preds = %if.end
  %3 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #18, !dbg !3138, !srcloc !1131
  call void @llvm.dbg.value(metadata i32 %3, metadata !1128, metadata !DIExpression()) #18, !dbg !3141
  br label %for.cond8, !dbg !3142

for.cond8:                                        ; preds = %for.cond8, %if.then7
  br label %for.cond8, !dbg !3143, !llvm.loop !3146

if.end9:                                          ; preds = %if.end
  %dec = add i32 %2, -1, !dbg !3148
  store i32 %dec, i32* %uxMutexesHeld, align 4, !dbg !3148, !tbaa !1286
  %uxPriority = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %pxMutexHolder, i32 0, i32 3, !dbg !3149
  %4 = load i32, i32* %uxPriority, align 4, !dbg !3149, !tbaa !1279
  %uxBasePriority = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %pxMutexHolder, i32 0, i32 8, !dbg !3151
  %5 = load i32, i32* %uxBasePriority, align 4, !dbg !3151, !tbaa !1283
  %cmp11.not = icmp ne i32 %4, %5, !dbg !3152
  %cmp15 = icmp eq i32 %dec, 0
  %or.cond = and i1 %cmp15, %cmp11.not, !dbg !3153
  br i1 %or.cond, label %if.then17, label %if.end35, !dbg !3153

if.then17:                                        ; preds = %if.end9
  %xStateListItem = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %pxMutexHolder, i32 0, i32 1, !dbg !3154
  %call = call i32 @icall_arg1p(i32 4, i8* bitcast (i32 (%struct.xLIST_ITEM*)* @uxListRemove to i8*), i8* %6, i32 ptrtoint (%struct.xLIST_ITEM* getelementptr (%struct.xLIST_ITEM, %struct.xLIST_ITEM* null, i32 1) to i32)), !dbg !3159
  %cmp18 = icmp eq i32 %call, 0, !dbg !3160
  br i1 %cmp18, label %if.then20, label %if.end22, !dbg !3161
  %6 = bitcast %struct.xLIST_ITEM* %xStateListItem to i8*

if.then20:                                        ; preds = %if.then17
  %7 = load i32, i32* %uxPriority, align 4, !dbg !3162, !tbaa !1279
  %shl = shl i32 1, %7, !dbg !3162
  %neg = xor i32 %shl, -1, !dbg !3162
  %8 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !3162, !tbaa !1085
  %and = and i32 %8, %neg, !dbg !3162
  store volatile i32 %and, i32* @uxTopReadyPriority, align 4, !dbg !3162, !tbaa !1085
  br label %if.end22, !dbg !3164

if.end22:                                         ; preds = %if.then20, %if.then17
  %9 = load i32, i32* %uxBasePriority, align 4, !dbg !3165, !tbaa !1283
  store i32 %9, i32* %uxPriority, align 4, !dbg !3166, !tbaa !1279
  %sub = sub i32 5, %9, !dbg !3167
  %xItemValue = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %pxMutexHolder, i32 0, i32 2, i32 0, !dbg !3167
  store i32 %sub, i32* %xItemValue, align 4, !dbg !3167, !tbaa !1294
  %shl27 = shl i32 1, %9, !dbg !3168
  %10 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !3168, !tbaa !1085
  %or = or i32 %10, %shl27, !dbg !3168
  store volatile i32 %or, i32* @uxTopReadyPriority, align 4, !dbg !3168, !tbaa !1085
  %arrayidx = getelementptr inbounds [5 x %struct.xLIST], [5 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %9, !dbg !3168
  call void @vListInsertEnd(%struct.xLIST* nonnull %arrayidx, %struct.xLIST_ITEM* nonnull %xStateListItem) #18, !dbg !3168
  call void @llvm.dbg.value(metadata i32 1, metadata !3116, metadata !DIExpression()), !dbg !3117
  br label %if.end35, !dbg !3169

if.end35:                                         ; preds = %if.end22, %if.end9, %entry
  %xReturn.0 = phi i32 [ 1, %if.end22 ], [ 0, %if.end9 ], [ 0, %entry ], !dbg !3117
  call void @llvm.dbg.value(metadata i32 %xReturn.0, metadata !3116, metadata !DIExpression()), !dbg !3117
  ret i32 %xReturn.0, !dbg !3170
}

; Function Attrs: nounwind
define dso_local void @vTaskPriorityDisinheritAfterTimeout(%struct.tskTaskControlBlock* %pxMutexHolder, i32 %uxHighestPriorityWaitingTask) local_unnamed_addr #0 section ".csection0" !dbg !3171 {
entry:
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %pxMutexHolder, metadata !3175, metadata !DIExpression()), !dbg !3181
  call void @llvm.dbg.value(metadata i32 %uxHighestPriorityWaitingTask, metadata !3176, metadata !DIExpression()), !dbg !3181
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %pxMutexHolder, metadata !3177, metadata !DIExpression()), !dbg !3181
  call void @llvm.dbg.value(metadata i32 1, metadata !3180, metadata !DIExpression()), !dbg !3181
  %cmp.not = icmp eq %struct.tskTaskControlBlock* %pxMutexHolder, null, !dbg !3182
  br i1 %cmp.not, label %if.end52, label %if.then, !dbg !3184

if.then:                                          ; preds = %entry
  %uxMutexesHeld = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %pxMutexHolder, i32 0, i32 9, !dbg !3185
  %0 = load i32, i32* %uxMutexesHeld, align 4, !dbg !3185, !tbaa !1286
  %cmp1 = icmp eq i32 %0, 0, !dbg !3185
  br i1 %cmp1, label %if.then2, label %if.end, !dbg !3188

if.then2:                                         ; preds = %if.then
  %1 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #18, !dbg !3189, !srcloc !1131
  call void @llvm.dbg.value(metadata i32 %1, metadata !1128, metadata !DIExpression()) #18, !dbg !3192
  br label %for.cond, !dbg !3193

for.cond:                                         ; preds = %for.cond, %if.then2
  br label %for.cond, !dbg !3194, !llvm.loop !3197

if.end:                                           ; preds = %if.then
  %uxBasePriority = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %pxMutexHolder, i32 0, i32 8, !dbg !3199
  %2 = load i32, i32* %uxBasePriority, align 4, !dbg !3199, !tbaa !1283
  %cmp3 = icmp ult i32 %2, %uxHighestPriorityWaitingTask, !dbg !3201
  %uxPriorityToUse.0 = select i1 %cmp3, i32 %uxHighestPriorityWaitingTask, i32 %2, !dbg !3202
  call void @llvm.dbg.value(metadata i32 %uxPriorityToUse.0, metadata !3179, metadata !DIExpression()), !dbg !3181
  %uxPriority = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %pxMutexHolder, i32 0, i32 3, !dbg !3203
  %3 = load i32, i32* %uxPriority, align 4, !dbg !3203, !tbaa !1279
  %cmp7.not = icmp ne i32 %3, %uxPriorityToUse.0, !dbg !3205
  %cmp10 = icmp eq i32 %0, 1
  %or.cond = and i1 %cmp10, %cmp7.not, !dbg !3206
  br i1 %or.cond, label %if.then11, label %if.end52, !dbg !3206

if.then11:                                        ; preds = %if.end
  %4 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !3207, !tbaa !1096
  %cmp12.not = icmp eq %struct.tskTaskControlBlock* %4, %pxMutexHolder, !dbg !3207
  br i1 %cmp12.not, label %if.then15, label %if.end17, !dbg !3212

if.then15:                                        ; preds = %if.then11
  %5 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #18, !dbg !3213, !srcloc !1131
  call void @llvm.dbg.value(metadata i32 %5, metadata !1128, metadata !DIExpression()) #18, !dbg !3216
  br label %for.cond16, !dbg !3217

for.cond16:                                       ; preds = %for.cond16, %if.then15
  br label %for.cond16, !dbg !3218, !llvm.loop !3221

if.end17:                                         ; preds = %if.then11
  call void @llvm.dbg.value(metadata i32 %3, metadata !3178, metadata !DIExpression()), !dbg !3181
  store i32 %uxPriorityToUse.0, i32* %uxPriority, align 4, !dbg !3223, !tbaa !1279
  %xItemValue = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %pxMutexHolder, i32 0, i32 2, i32 0, !dbg !3224
  %6 = load i32, i32* %xItemValue, align 4, !dbg !3224, !tbaa !1294
  %cmp20 = icmp sgt i32 %6, -1, !dbg !3226
  br i1 %cmp20, label %if.then22, label %if.end26, !dbg !3227

if.then22:                                        ; preds = %if.end17
  %sub = sub i32 5, %uxPriorityToUse.0, !dbg !3228
  store i32 %sub, i32* %xItemValue, align 4, !dbg !3228, !tbaa !1294
  br label %if.end26, !dbg !3230

if.end26:                                         ; preds = %if.then22, %if.end17
  %xStateListItem = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %pxMutexHolder, i32 0, i32 1, !dbg !3231
  %pvContainer = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %pxMutexHolder, i32 0, i32 1, i32 4, !dbg !3231
  %7 = load %struct.xLIST*, %struct.xLIST** %pvContainer, align 4, !dbg !3231, !tbaa !1926
  %arrayidx = getelementptr inbounds [5 x %struct.xLIST], [5 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %3, !dbg !3231
  %cmp27 = icmp eq %struct.xLIST* %7, %arrayidx, !dbg !3231
  br i1 %cmp27, label %if.then31, label %if.end52, !dbg !3233

if.then31:                                        ; preds = %if.end26
  %call = call i32 @icall_arg1p(i32 4, i8* bitcast (i32 (%struct.xLIST_ITEM*)* @uxListRemove to i8*), i8* %8, i32 ptrtoint (%struct.xLIST_ITEM* getelementptr (%struct.xLIST_ITEM, %struct.xLIST_ITEM* null, i32 1) to i32)), !dbg !3234
  %cmp33 = icmp eq i32 %call, 0, !dbg !3237
  br i1 %cmp33, label %if.then35, label %if.end39, !dbg !3238
  %8 = bitcast %struct.xLIST_ITEM* %xStateListItem to i8*

if.then35:                                        ; preds = %if.then31
  %9 = load i32, i32* %uxPriority, align 4, !dbg !3239, !tbaa !1279
  %shl = shl i32 1, %9, !dbg !3239
  %neg = xor i32 %shl, -1, !dbg !3239
  %10 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !3239, !tbaa !1085
  %and37 = and i32 %10, %neg, !dbg !3239
  store volatile i32 %and37, i32* @uxTopReadyPriority, align 4, !dbg !3239, !tbaa !1085
  br label %if.end39, !dbg !3241

if.end39:                                         ; preds = %if.then35, %if.then31
  %11 = load i32, i32* %uxPriority, align 4, !dbg !3242, !tbaa !1279
  %shl41 = shl i32 1, %11, !dbg !3242
  %12 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !3242, !tbaa !1085
  %or = or i32 %12, %shl41, !dbg !3242
  store volatile i32 %or, i32* @uxTopReadyPriority, align 4, !dbg !3242, !tbaa !1085
  %arrayidx43 = getelementptr inbounds [5 x %struct.xLIST], [5 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %11, !dbg !3242
  call void @vListInsertEnd(%struct.xLIST* nonnull %arrayidx43, %struct.xLIST_ITEM* nonnull %xStateListItem) #18, !dbg !3242
  br label %if.end52, !dbg !3243

if.end52:                                         ; preds = %if.end39, %if.end26, %if.end, %entry
  ret void, !dbg !3244
}

; Function Attrs: nofree norecurse nounwind willreturn
define dso_local i32 @uxTaskResetEventItemValue() local_unnamed_addr #3 section ".csection0" !dbg !3245 {
entry:
  %0 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !3248, !tbaa !1096
  %xItemValue = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %0, i32 0, i32 2, i32 0, !dbg !3248
  %1 = load i32, i32* %xItemValue, align 4, !dbg !3248, !tbaa !1294
  call void @llvm.dbg.value(metadata i32 %1, metadata !3247, metadata !DIExpression()), !dbg !3249
  %2 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !3250, !tbaa !1096
  %uxPriority = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %2, i32 0, i32 3, !dbg !3250
  %3 = load i32, i32* %uxPriority, align 4, !dbg !3250, !tbaa !1279
  %sub = sub i32 5, %3, !dbg !3250
  %4 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !3250, !tbaa !1096
  %xItemValue2 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %4, i32 0, i32 2, i32 0, !dbg !3250
  store i32 %sub, i32* %xItemValue2, align 4, !dbg !3250, !tbaa !1294
  ret i32 %1, !dbg !3251
}

; Function Attrs: nofree norecurse nounwind willreturn
define dso_local %struct.tskTaskControlBlock* @pvTaskIncrementMutexHeldCount() local_unnamed_addr #3 section ".csection0" !dbg !3252 {
entry:
  %0 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !3253, !tbaa !1096
  %cmp.not = icmp eq %struct.tskTaskControlBlock* %0, null, !dbg !3255
  br i1 %cmp.not, label %if.end, label %if.then, !dbg !3256

if.then:                                          ; preds = %entry
  %1 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !3257, !tbaa !1096
  %uxMutexesHeld = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %1, i32 0, i32 9, !dbg !3259
  %2 = load i32, i32* %uxMutexesHeld, align 4, !dbg !3260, !tbaa !1286
  %inc = add i32 %2, 1, !dbg !3260
  store i32 %inc, i32* %uxMutexesHeld, align 4, !dbg !3260, !tbaa !1286
  br label %if.end, !dbg !3261

if.end:                                           ; preds = %if.then, %entry
  %3 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !3262, !tbaa !1096
  ret %struct.tskTaskControlBlock* %3, !dbg !3263
}

; Function Attrs: nounwind
define dso_local i32 @ulTaskGenericNotifyTake(i32 %uxIndexToWait, i32 %xClearCountOnExit, i32 %xTicksToWait) local_unnamed_addr #0 section ".csection0" !dbg !3264 {
entry:
  call void @llvm.dbg.value(metadata i32 %uxIndexToWait, metadata !3268, metadata !DIExpression()), !dbg !3272
  call void @llvm.dbg.value(metadata i32 %xClearCountOnExit, metadata !3269, metadata !DIExpression()), !dbg !3272
  call void @llvm.dbg.value(metadata i32 %xTicksToWait, metadata !3270, metadata !DIExpression()), !dbg !3272
  %cmp.not = icmp eq i32 %uxIndexToWait, 0, !dbg !3273
  br i1 %cmp.not, label %if.end, label %if.then, !dbg !3275

if.then:                                          ; preds = %entry
  %0 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #18, !dbg !3276, !srcloc !1131
  call void @llvm.dbg.value(metadata i32 %0, metadata !1128, metadata !DIExpression()) #18, !dbg !3279
  br label %for.cond, !dbg !3280

for.cond:                                         ; preds = %for.cond, %if.then
  br label %for.cond, !dbg !3281, !llvm.loop !3284

if.end:                                           ; preds = %entry
  call void @vPortEnterCritical() #18, !dbg !3286
  %1 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !3287, !tbaa !1096
  %arrayidx = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %1, i32 0, i32 10, i32 %uxIndexToWait, !dbg !3287
  %2 = load volatile i32, i32* %arrayidx, align 4, !dbg !3287, !tbaa !1105
  %cmp3 = icmp eq i32 %2, 0, !dbg !3290
  br i1 %cmp3, label %if.then5, label %if.end12, !dbg !3291

if.then5:                                         ; preds = %if.end
  %3 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !3292, !tbaa !1096
  %arrayidx6 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %3, i32 0, i32 11, i32 %uxIndexToWait, !dbg !3292
  store volatile i8 1, i8* %arrayidx6, align 1, !dbg !3294, !tbaa !1246
  %cmp7.not = icmp eq i32 %xTicksToWait, 0, !dbg !3295
  br i1 %cmp7.not, label %if.end12, label %if.then9, !dbg !3297

if.then9:                                         ; preds = %if.then5
  call fastcc void @prvAddCurrentTaskToDelayedList(i32 %xTicksToWait, i32 1), !dbg !3298
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !3300, !tbaa !1105
  call void asm sideeffect "dsb", "~{memory}"() #18, !dbg !3300, !srcloc !3302
  call void asm sideeffect "isb", ""() #18, !dbg !3300, !srcloc !3303
  br label %if.end12, !dbg !3304

if.end12:                                         ; preds = %if.then9, %if.then5, %if.end
  call void @vPortExitCritical() #18, !dbg !3305
  call void @vPortEnterCritical() #18, !dbg !3306
  %4 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !3307, !tbaa !1096
  %arrayidx14 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %4, i32 0, i32 10, i32 %uxIndexToWait, !dbg !3307
  %5 = load volatile i32, i32* %arrayidx14, align 4, !dbg !3307, !tbaa !1105
  call void @llvm.dbg.value(metadata i32 %5, metadata !3271, metadata !DIExpression()), !dbg !3272
  %cmp15.not = icmp eq i32 %5, 0, !dbg !3309
  br i1 %cmp15.not, label %if.end28, label %if.then17, !dbg !3311

if.then17:                                        ; preds = %if.end12
  %cmp18.not = icmp eq i32 %xClearCountOnExit, 0, !dbg !3312
  br i1 %cmp18.not, label %if.else23, label %if.then20, !dbg !3315

if.then20:                                        ; preds = %if.then17
  %6 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !3316, !tbaa !1096
  %arrayidx22 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %6, i32 0, i32 10, i32 %uxIndexToWait, !dbg !3316
  store volatile i32 0, i32* %arrayidx22, align 4, !dbg !3318, !tbaa !1105
  br label %if.end28, !dbg !3319

if.else23:                                        ; preds = %if.then17
  %sub = add i32 %5, -1, !dbg !3320
  %7 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !3322, !tbaa !1096
  %arrayidx25 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %7, i32 0, i32 10, i32 %uxIndexToWait, !dbg !3322
  store volatile i32 %sub, i32* %arrayidx25, align 4, !dbg !3323, !tbaa !1105
  br label %if.end28

if.end28:                                         ; preds = %if.else23, %if.then20, %if.end12
  %8 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !3324, !tbaa !1096
  %arrayidx30 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %8, i32 0, i32 11, i32 %uxIndexToWait, !dbg !3324
  store volatile i8 0, i8* %arrayidx30, align 1, !dbg !3325, !tbaa !1246
  call void @vPortExitCritical() #18, !dbg !3326
  ret i32 %5, !dbg !3327
}

; Function Attrs: nounwind
define dso_local i32 @xTaskGenericNotifyWait(i32 %uxIndexToWait, i32 %ulBitsToClearOnEntry, i32 %ulBitsToClearOnExit, i32* %pulNotificationValue, i32 %xTicksToWait) local_unnamed_addr #0 section ".csection0" !dbg !3328 {
entry:
  call void @llvm.dbg.value(metadata i32 %uxIndexToWait, metadata !3332, metadata !DIExpression()), !dbg !3338
  call void @llvm.dbg.value(metadata i32 %ulBitsToClearOnEntry, metadata !3333, metadata !DIExpression()), !dbg !3338
  call void @llvm.dbg.value(metadata i32 %ulBitsToClearOnExit, metadata !3334, metadata !DIExpression()), !dbg !3338
  call void @llvm.dbg.value(metadata i32* %pulNotificationValue, metadata !3335, metadata !DIExpression()), !dbg !3338
  call void @llvm.dbg.value(metadata i32 %xTicksToWait, metadata !3336, metadata !DIExpression()), !dbg !3338
  %cmp.not = icmp eq i32 %uxIndexToWait, 0, !dbg !3339
  br i1 %cmp.not, label %if.end, label %if.then, !dbg !3341

if.then:                                          ; preds = %entry
  %0 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #18, !dbg !3342, !srcloc !1131
  call void @llvm.dbg.value(metadata i32 %0, metadata !1128, metadata !DIExpression()) #18, !dbg !3345
  br label %for.cond, !dbg !3346

for.cond:                                         ; preds = %for.cond, %if.then
  br label %for.cond, !dbg !3347, !llvm.loop !3350

if.end:                                           ; preds = %entry
  call void @vPortEnterCritical() #18, !dbg !3352
  %1 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !3353, !tbaa !1096
  %arrayidx = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %1, i32 0, i32 11, i32 %uxIndexToWait, !dbg !3353
  %2 = load volatile i8, i8* %arrayidx, align 1, !dbg !3353, !tbaa !1246
  %cmp4.not = icmp eq i8 %2, 2, !dbg !3356
  br i1 %cmp4.not, label %if.end15, label %if.then6, !dbg !3357

if.then6:                                         ; preds = %if.end
  %neg = xor i32 %ulBitsToClearOnEntry, -1, !dbg !3358
  %3 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !3360, !tbaa !1096
  %arrayidx7 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %3, i32 0, i32 10, i32 %uxIndexToWait, !dbg !3360
  %4 = load volatile i32, i32* %arrayidx7, align 4, !dbg !3361, !tbaa !1105
  %and = and i32 %4, %neg, !dbg !3361
  store volatile i32 %and, i32* %arrayidx7, align 4, !dbg !3361, !tbaa !1105
  %5 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !3362, !tbaa !1096
  %arrayidx9 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %5, i32 0, i32 11, i32 %uxIndexToWait, !dbg !3362
  store volatile i8 1, i8* %arrayidx9, align 1, !dbg !3363, !tbaa !1246
  %cmp10.not = icmp eq i32 %xTicksToWait, 0, !dbg !3364
  br i1 %cmp10.not, label %if.end15, label %if.then12, !dbg !3366

if.then12:                                        ; preds = %if.then6
  call fastcc void @prvAddCurrentTaskToDelayedList(i32 %xTicksToWait, i32 1), !dbg !3367
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !3369, !tbaa !1105
  call void asm sideeffect "dsb", "~{memory}"() #18, !dbg !3369, !srcloc !3371
  call void asm sideeffect "isb", ""() #18, !dbg !3369, !srcloc !3372
  br label %if.end15, !dbg !3373

if.end15:                                         ; preds = %if.then12, %if.then6, %if.end
  call void @vPortExitCritical() #18, !dbg !3374
  call void @vPortEnterCritical() #18, !dbg !3375
  %cmp16.not = icmp eq i32* %pulNotificationValue, null, !dbg !3376
  br i1 %cmp16.not, label %if.end21, label %if.then18, !dbg !3379

if.then18:                                        ; preds = %if.end15
  %6 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !3380, !tbaa !1096
  %arrayidx20 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %6, i32 0, i32 10, i32 %uxIndexToWait, !dbg !3380
  %7 = load volatile i32, i32* %arrayidx20, align 4, !dbg !3380, !tbaa !1105
  store i32 %7, i32* %pulNotificationValue, align 4, !dbg !3382, !tbaa !1105
  br label %if.end21, !dbg !3383

if.end21:                                         ; preds = %if.then18, %if.end15
  %8 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !3384, !tbaa !1096
  %arrayidx23 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %8, i32 0, i32 11, i32 %uxIndexToWait, !dbg !3384
  %9 = load volatile i8, i8* %arrayidx23, align 1, !dbg !3384, !tbaa !1246
  %cmp25.not = icmp eq i8 %9, 2, !dbg !3386
  br i1 %cmp25.not, label %if.else28, label %if.end33, !dbg !3387

if.else28:                                        ; preds = %if.end21
  %neg29 = xor i32 %ulBitsToClearOnExit, -1, !dbg !3388
  %10 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !3390, !tbaa !1096
  %arrayidx31 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %10, i32 0, i32 10, i32 %uxIndexToWait, !dbg !3390
  %11 = load volatile i32, i32* %arrayidx31, align 4, !dbg !3391, !tbaa !1105
  %and32 = and i32 %11, %neg29, !dbg !3391
  store volatile i32 %and32, i32* %arrayidx31, align 4, !dbg !3391, !tbaa !1105
  call void @llvm.dbg.value(metadata i32 1, metadata !3337, metadata !DIExpression()), !dbg !3338
  br label %if.end33

if.end33:                                         ; preds = %if.else28, %if.end21
  %xReturn.0 = phi i32 [ 1, %if.else28 ], [ 0, %if.end21 ], !dbg !3392
  call void @llvm.dbg.value(metadata i32 %xReturn.0, metadata !3337, metadata !DIExpression()), !dbg !3338
  %12 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !3393, !tbaa !1096
  %arrayidx35 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %12, i32 0, i32 11, i32 %uxIndexToWait, !dbg !3393
  store volatile i8 0, i8* %arrayidx35, align 1, !dbg !3394, !tbaa !1246
  call void @vPortExitCritical() #18, !dbg !3395
  ret i32 %xReturn.0, !dbg !3396
}

; Function Attrs: nounwind
define dso_local i32 @xTaskGenericNotify(%struct.tskTaskControlBlock* %xTaskToNotify, i32 %uxIndexToNotify, i32 %ulValue, i32 %eAction, i32* %pulPreviousNotificationValue) local_unnamed_addr #0 section ".csection0" !dbg !3397 {
entry:
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %xTaskToNotify, metadata !3402, metadata !DIExpression()), !dbg !3410
  call void @llvm.dbg.value(metadata i32 %uxIndexToNotify, metadata !3403, metadata !DIExpression()), !dbg !3410
  call void @llvm.dbg.value(metadata i32 %ulValue, metadata !3404, metadata !DIExpression()), !dbg !3410
  call void @llvm.dbg.value(metadata i32 %eAction, metadata !3405, metadata !DIExpression()), !dbg !3410
  call void @llvm.dbg.value(metadata i32* %pulPreviousNotificationValue, metadata !3406, metadata !DIExpression()), !dbg !3410
  call void @llvm.dbg.value(metadata i32 1, metadata !3408, metadata !DIExpression()), !dbg !3410
  %cmp.not = icmp eq i32 %uxIndexToNotify, 0, !dbg !3411
  br i1 %cmp.not, label %if.end, label %if.then, !dbg !3413

if.then:                                          ; preds = %entry
  %0 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #18, !dbg !3414, !srcloc !1131
  call void @llvm.dbg.value(metadata i32 %0, metadata !1128, metadata !DIExpression()) #18, !dbg !3417
  br label %for.cond, !dbg !3418

for.cond:                                         ; preds = %for.cond, %if.then
  br label %for.cond, !dbg !3419, !llvm.loop !3422

if.end:                                           ; preds = %entry
  %cmp3 = icmp eq %struct.tskTaskControlBlock* %xTaskToNotify, null, !dbg !3424
  br i1 %cmp3, label %if.then5, label %if.end7, !dbg !3426

if.then5:                                         ; preds = %if.end
  %1 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #18, !dbg !3427, !srcloc !1131
  call void @llvm.dbg.value(metadata i32 %1, metadata !1128, metadata !DIExpression()) #18, !dbg !3430
  br label %for.cond6, !dbg !3431

for.cond6:                                        ; preds = %for.cond6, %if.then5
  br label %for.cond6, !dbg !3432, !llvm.loop !3435

if.end7:                                          ; preds = %if.end
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %xTaskToNotify, metadata !3407, metadata !DIExpression()), !dbg !3410
  call void @vPortEnterCritical() #18, !dbg !3437
  %cmp8.not = icmp eq i32* %pulPreviousNotificationValue, null, !dbg !3438
  br i1 %cmp8.not, label %if.end11, label %if.then10, !dbg !3441

if.then10:                                        ; preds = %if.end7
  %arrayidx = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %xTaskToNotify, i32 0, i32 10, i32 %uxIndexToNotify, !dbg !3442
  %2 = load volatile i32, i32* %arrayidx, align 4, !dbg !3442, !tbaa !1105
  store i32 %2, i32* %pulPreviousNotificationValue, align 4, !dbg !3444, !tbaa !1105
  br label %if.end11, !dbg !3445

if.end11:                                         ; preds = %if.then10, %if.end7
  %arrayidx12 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %xTaskToNotify, i32 0, i32 11, i32 %uxIndexToNotify, !dbg !3446
  %3 = load volatile i8, i8* %arrayidx12, align 1, !dbg !3446, !tbaa !1246
  call void @llvm.dbg.value(metadata i8 %3, metadata !3409, metadata !DIExpression()), !dbg !3410
  store volatile i8 2, i8* %arrayidx12, align 1, !dbg !3447, !tbaa !1246
  switch i32 %eAction, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb17
    i32 3, label %sw.bb20
    i32 4, label %sw.bb23
    i32 0, label %sw.epilog
  ], !dbg !3448

sw.bb:                                            ; preds = %if.end11
  %arrayidx16 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %xTaskToNotify, i32 0, i32 10, i32 %uxIndexToNotify, !dbg !3449
  %4 = load volatile i32, i32* %arrayidx16, align 4, !dbg !3451, !tbaa !1105
  %or = or i32 %4, %ulValue, !dbg !3451
  store volatile i32 %or, i32* %arrayidx16, align 4, !dbg !3451, !tbaa !1105
  br label %sw.epilog, !dbg !3452

sw.bb17:                                          ; preds = %if.end11
  %arrayidx19 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %xTaskToNotify, i32 0, i32 10, i32 %uxIndexToNotify, !dbg !3453
  %5 = load volatile i32, i32* %arrayidx19, align 4, !dbg !3454, !tbaa !1105
  %inc = add i32 %5, 1, !dbg !3454
  store volatile i32 %inc, i32* %arrayidx19, align 4, !dbg !3454, !tbaa !1105
  br label %sw.epilog, !dbg !3455

sw.bb20:                                          ; preds = %if.end11
  %arrayidx22 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %xTaskToNotify, i32 0, i32 10, i32 %uxIndexToNotify, !dbg !3456
  store volatile i32 %ulValue, i32* %arrayidx22, align 4, !dbg !3457, !tbaa !1105
  br label %sw.epilog, !dbg !3458

sw.bb23:                                          ; preds = %if.end11
  %cmp25.not = icmp eq i8 %3, 2, !dbg !3459
  br i1 %cmp25.not, label %sw.epilog, label %if.then27, !dbg !3461

if.then27:                                        ; preds = %sw.bb23
  %arrayidx29 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %xTaskToNotify, i32 0, i32 10, i32 %uxIndexToNotify, !dbg !3462
  store volatile i32 %ulValue, i32* %arrayidx29, align 4, !dbg !3464, !tbaa !1105
  br label %sw.epilog, !dbg !3465

sw.default:                                       ; preds = %if.end11
  %6 = load volatile i32, i32* @xTickCount, align 4, !dbg !3466, !tbaa !1105
  %cmp31.not = icmp eq i32 %6, 0, !dbg !3466
  br i1 %cmp31.not, label %sw.epilog, label %if.then35, !dbg !3468

if.then35:                                        ; preds = %sw.default
  %7 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #18, !dbg !3469, !srcloc !1131
  call void @llvm.dbg.value(metadata i32 %7, metadata !1128, metadata !DIExpression()) #18, !dbg !3472
  br label %for.cond36, !dbg !3473

for.cond36:                                       ; preds = %for.cond36, %if.then35
  br label %for.cond36, !dbg !3474, !llvm.loop !3477

sw.epilog:                                        ; preds = %sw.default, %if.then27, %sw.bb23, %sw.bb20, %sw.bb17, %sw.bb, %if.end11
  %xReturn.0 = phi i32 [ 1, %sw.default ], [ 1, %if.end11 ], [ 1, %if.then27 ], [ 1, %sw.bb20 ], [ 1, %sw.bb17 ], [ 1, %sw.bb ], [ 0, %sw.bb23 ], !dbg !3410
  call void @llvm.dbg.value(metadata i32 %xReturn.0, metadata !3408, metadata !DIExpression()), !dbg !3410
  %cmp39 = icmp eq i8 %3, 1, !dbg !3479
  br i1 %cmp39, label %if.then41, label %if.end61, !dbg !3481

if.then41:                                        ; preds = %sw.epilog
  %xStateListItem = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %xTaskToNotify, i32 0, i32 1, !dbg !3482
  %call = call i32 @icall_arg1p(i32 4, i8* bitcast (i32 (%struct.xLIST_ITEM*)* @uxListRemove to i8*), i8* %11, i32 ptrtoint (%struct.xLIST_ITEM* getelementptr (%struct.xLIST_ITEM, %struct.xLIST_ITEM* null, i32 1) to i32)), !dbg !3484
  %uxPriority = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %xTaskToNotify, i32 0, i32 3, !dbg !3485
  %8 = load i32, i32* %uxPriority, align 4, !dbg !3485, !tbaa !1279
  %shl = shl i32 1, %8, !dbg !3485
  %9 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !3485, !tbaa !1085
  %or42 = or i32 %9, %shl, !dbg !3485
  store volatile i32 %or42, i32* @uxTopReadyPriority, align 4, !dbg !3485, !tbaa !1085
  %arrayidx44 = getelementptr inbounds [5 x %struct.xLIST], [5 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %8, !dbg !3485
  call void @vListInsertEnd(%struct.xLIST* nonnull %arrayidx44, %struct.xLIST_ITEM* nonnull %xStateListItem) #18, !dbg !3485
  %pvContainer = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %xTaskToNotify, i32 0, i32 2, i32 4, !dbg !3486
  %10 = load %struct.xLIST*, %struct.xLIST** %pvContainer, align 4, !dbg !3486, !tbaa !1425
  %cmp46.not = icmp eq %struct.xLIST* %10, null, !dbg !3486
  br i1 %cmp46.not, label %if.end52, label %if.then50, !dbg !3488
  %11 = bitcast %struct.xLIST_ITEM* %xStateListItem to i8*

if.then50:                                        ; preds = %if.then41
  %12 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #18, !dbg !3489, !srcloc !1131
  call void @llvm.dbg.value(metadata i32 %12, metadata !1128, metadata !DIExpression()) #18, !dbg !3492
  br label %for.cond51, !dbg !3493

for.cond51:                                       ; preds = %for.cond51, %if.then50
  br label %for.cond51, !dbg !3494, !llvm.loop !3497

if.end52:                                         ; preds = %if.then41
  %13 = load i32, i32* %uxPriority, align 4, !dbg !3499, !tbaa !1279
  %14 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !3501, !tbaa !1096
  %uxPriority54 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %14, i32 0, i32 3, !dbg !3502
  %15 = load i32, i32* %uxPriority54, align 4, !dbg !3502, !tbaa !1279
  %cmp55 = icmp ugt i32 %13, %15, !dbg !3503
  br i1 %cmp55, label %if.then57, label %if.end61, !dbg !3504

if.then57:                                        ; preds = %if.end52
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !3505, !tbaa !1105
  call void asm sideeffect "dsb", "~{memory}"() #18, !dbg !3505, !srcloc !3508
  call void asm sideeffect "isb", ""() #18, !dbg !3505, !srcloc !3509
  br label %if.end61, !dbg !3510

if.end61:                                         ; preds = %if.then57, %if.end52, %sw.epilog
  call void @vPortExitCritical() #18, !dbg !3511
  ret i32 %xReturn.0, !dbg !3512
}

; Function Attrs: nounwind
define dso_local i32 @xTaskGenericNotifyFromISR(%struct.tskTaskControlBlock* %xTaskToNotify, i32 %uxIndexToNotify, i32 %ulValue, i32 %eAction, i32* %pulPreviousNotificationValue, i32* %pxHigherPriorityTaskWoken) local_unnamed_addr #0 section ".csection0" !dbg !3513 {
entry:
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %xTaskToNotify, metadata !3517, metadata !DIExpression()), !dbg !3527
  call void @llvm.dbg.value(metadata i32 %uxIndexToNotify, metadata !3518, metadata !DIExpression()), !dbg !3527
  call void @llvm.dbg.value(metadata i32 %ulValue, metadata !3519, metadata !DIExpression()), !dbg !3527
  call void @llvm.dbg.value(metadata i32 %eAction, metadata !3520, metadata !DIExpression()), !dbg !3527
  call void @llvm.dbg.value(metadata i32* %pulPreviousNotificationValue, metadata !3521, metadata !DIExpression()), !dbg !3527
  call void @llvm.dbg.value(metadata i32* %pxHigherPriorityTaskWoken, metadata !3522, metadata !DIExpression()), !dbg !3527
  call void @llvm.dbg.value(metadata i32 1, metadata !3525, metadata !DIExpression()), !dbg !3527
  %cmp = icmp eq %struct.tskTaskControlBlock* %xTaskToNotify, null, !dbg !3528
  br i1 %cmp, label %if.then, label %if.end, !dbg !3530

if.then:                                          ; preds = %entry
  %0 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #18, !dbg !3531, !srcloc !1131
  call void @llvm.dbg.value(metadata i32 %0, metadata !1128, metadata !DIExpression()) #18, !dbg !3534
  br label %for.cond, !dbg !3535

for.cond:                                         ; preds = %for.cond, %if.then
  br label %for.cond, !dbg !3536, !llvm.loop !3539

if.end:                                           ; preds = %entry
  %cmp1.not = icmp eq i32 %uxIndexToNotify, 0, !dbg !3541
  br i1 %cmp1.not, label %if.end6, label %if.then4, !dbg !3543

if.then4:                                         ; preds = %if.end
  %1 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #18, !dbg !3544, !srcloc !1131
  call void @llvm.dbg.value(metadata i32 %1, metadata !1128, metadata !DIExpression()) #18, !dbg !3547
  br label %for.cond5, !dbg !3548

for.cond5:                                        ; preds = %for.cond5, %if.then4
  br label %for.cond5, !dbg !3549, !llvm.loop !3552

if.end6:                                          ; preds = %if.end
  call void @vPortValidateInterruptPriority() #18, !dbg !3554
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %xTaskToNotify, metadata !3523, metadata !DIExpression()), !dbg !3527
  %2 = call { i32, i32 } asm sideeffect "\09mrs $0, basepri\09\09\09\09\09\09\09\09\09\09\09\0A\09mov $1, $2\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $1\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,=r,i,~{memory}"(i32 80) #18, !dbg !3555, !srcloc !1980
  call void @llvm.dbg.value(metadata i32 undef, metadata !1977, metadata !DIExpression()) #18, !dbg !3557
  call void @llvm.dbg.value(metadata i32 undef, metadata !1978, metadata !DIExpression()) #18, !dbg !3557
  call void @llvm.dbg.value(metadata i32 undef, metadata !3526, metadata !DIExpression()), !dbg !3527
  %cmp7.not = icmp eq i32* %pulPreviousNotificationValue, null, !dbg !3558
  br i1 %cmp7.not, label %if.end10, label %if.then9, !dbg !3561

if.then9:                                         ; preds = %if.end6
  %arrayidx = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %xTaskToNotify, i32 0, i32 10, i32 %uxIndexToNotify, !dbg !3562
  %3 = load volatile i32, i32* %arrayidx, align 4, !dbg !3562, !tbaa !1105
  store i32 %3, i32* %pulPreviousNotificationValue, align 4, !dbg !3564, !tbaa !1105
  br label %if.end10, !dbg !3565

if.end10:                                         ; preds = %if.then9, %if.end6
  %arrayidx11 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %xTaskToNotify, i32 0, i32 11, i32 %uxIndexToNotify, !dbg !3566
  %4 = load volatile i8, i8* %arrayidx11, align 1, !dbg !3566, !tbaa !1246
  call void @llvm.dbg.value(metadata i8 %4, metadata !3524, metadata !DIExpression()), !dbg !3527
  store volatile i8 2, i8* %arrayidx11, align 1, !dbg !3567, !tbaa !1246
  switch i32 %eAction, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb16
    i32 3, label %sw.bb19
    i32 4, label %sw.bb22
    i32 0, label %sw.epilog
  ], !dbg !3568

sw.bb:                                            ; preds = %if.end10
  %arrayidx15 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %xTaskToNotify, i32 0, i32 10, i32 %uxIndexToNotify, !dbg !3569
  %5 = load volatile i32, i32* %arrayidx15, align 4, !dbg !3571, !tbaa !1105
  %or = or i32 %5, %ulValue, !dbg !3571
  store volatile i32 %or, i32* %arrayidx15, align 4, !dbg !3571, !tbaa !1105
  br label %sw.epilog, !dbg !3572

sw.bb16:                                          ; preds = %if.end10
  %arrayidx18 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %xTaskToNotify, i32 0, i32 10, i32 %uxIndexToNotify, !dbg !3573
  %6 = load volatile i32, i32* %arrayidx18, align 4, !dbg !3574, !tbaa !1105
  %inc = add i32 %6, 1, !dbg !3574
  store volatile i32 %inc, i32* %arrayidx18, align 4, !dbg !3574, !tbaa !1105
  br label %sw.epilog, !dbg !3575

sw.bb19:                                          ; preds = %if.end10
  %arrayidx21 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %xTaskToNotify, i32 0, i32 10, i32 %uxIndexToNotify, !dbg !3576
  store volatile i32 %ulValue, i32* %arrayidx21, align 4, !dbg !3577, !tbaa !1105
  br label %sw.epilog, !dbg !3578

sw.bb22:                                          ; preds = %if.end10
  %cmp24.not = icmp eq i8 %4, 2, !dbg !3579
  br i1 %cmp24.not, label %sw.epilog, label %if.then26, !dbg !3581

if.then26:                                        ; preds = %sw.bb22
  %arrayidx28 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %xTaskToNotify, i32 0, i32 10, i32 %uxIndexToNotify, !dbg !3582
  store volatile i32 %ulValue, i32* %arrayidx28, align 4, !dbg !3584, !tbaa !1105
  br label %sw.epilog, !dbg !3585

sw.default:                                       ; preds = %if.end10
  %7 = load volatile i32, i32* @xTickCount, align 4, !dbg !3586, !tbaa !1105
  %cmp30.not = icmp eq i32 %7, 0, !dbg !3586
  br i1 %cmp30.not, label %sw.epilog, label %if.then34, !dbg !3588

if.then34:                                        ; preds = %sw.default
  %8 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #18, !dbg !3589, !srcloc !1131
  call void @llvm.dbg.value(metadata i32 %8, metadata !1128, metadata !DIExpression()) #18, !dbg !3592
  br label %for.cond35, !dbg !3593

for.cond35:                                       ; preds = %for.cond35, %if.then34
  br label %for.cond35, !dbg !3594, !llvm.loop !3597

sw.epilog:                                        ; preds = %sw.default, %if.then26, %sw.bb22, %sw.bb19, %sw.bb16, %sw.bb, %if.end10
  %xReturn.0 = phi i32 [ 1, %sw.default ], [ 1, %if.end10 ], [ 1, %if.then26 ], [ 1, %sw.bb19 ], [ 1, %sw.bb16 ], [ 1, %sw.bb ], [ 0, %sw.bb22 ], !dbg !3527
  call void @llvm.dbg.value(metadata i32 %xReturn.0, metadata !3525, metadata !DIExpression()), !dbg !3527
  %cmp38 = icmp eq i8 %4, 1, !dbg !3599
  br i1 %cmp38, label %if.then40, label %if.end70, !dbg !3601

if.then40:                                        ; preds = %sw.epilog
  %xEventListItem = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %xTaskToNotify, i32 0, i32 2, !dbg !3602
  %pvContainer = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %xTaskToNotify, i32 0, i32 2, i32 4, !dbg !3602
  %9 = load %struct.xLIST*, %struct.xLIST** %pvContainer, align 4, !dbg !3602, !tbaa !1425
  %cmp41.not = icmp eq %struct.xLIST* %9, null, !dbg !3602
  br i1 %cmp41.not, label %if.end47, label %if.then45, !dbg !3605

if.then45:                                        ; preds = %if.then40
  %10 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #18, !dbg !3606, !srcloc !1131
  call void @llvm.dbg.value(metadata i32 %10, metadata !1128, metadata !DIExpression()) #18, !dbg !3609
  br label %for.cond46, !dbg !3610

for.cond46:                                       ; preds = %for.cond46, %if.then45
  br label %for.cond46, !dbg !3611, !llvm.loop !3614

if.end47:                                         ; preds = %if.then40
  %11 = load volatile i32, i32* @uxSchedulerSuspended, align 4, !dbg !3616, !tbaa !1085
  %cmp48 = icmp eq i32 %11, 0, !dbg !3618
  br i1 %cmp48, label %if.then50, label %if.else56, !dbg !3619

if.then50:                                        ; preds = %if.end47
  %xStateListItem = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %xTaskToNotify, i32 0, i32 1, !dbg !3620
  %call51 = call i32 @icall_arg1p(i32 4, i8* bitcast (i32 (%struct.xLIST_ITEM*)* @uxListRemove to i8*), i8* %14, i32 ptrtoint (%struct.xLIST_ITEM* getelementptr (%struct.xLIST_ITEM, %struct.xLIST_ITEM* null, i32 1) to i32)), !dbg !3622
  %uxPriority = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %xTaskToNotify, i32 0, i32 3, !dbg !3623
  %12 = load i32, i32* %uxPriority, align 4, !dbg !3623, !tbaa !1279
  %shl = shl i32 1, %12, !dbg !3623
  %13 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !3623, !tbaa !1085
  %or52 = or i32 %13, %shl, !dbg !3623
  store volatile i32 %or52, i32* @uxTopReadyPriority, align 4, !dbg !3623, !tbaa !1085
  %arrayidx54 = getelementptr inbounds [5 x %struct.xLIST], [5 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %12, !dbg !3623
  call void @vListInsertEnd(%struct.xLIST* nonnull %arrayidx54, %struct.xLIST_ITEM* nonnull %xStateListItem) #18, !dbg !3623
  br label %if.end58, !dbg !3624
  %14 = bitcast %struct.xLIST_ITEM* %xStateListItem to i8*

if.else56:                                        ; preds = %if.end47
  call void @vListInsertEnd(%struct.xLIST* nonnull @xPendingReadyList, %struct.xLIST_ITEM* nonnull %xEventListItem) #18, !dbg !3625
  br label %if.end58

if.end58:                                         ; preds = %if.else56, %if.then50
  %uxPriority59 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %xTaskToNotify, i32 0, i32 3, !dbg !3627
  %15 = load i32, i32* %uxPriority59, align 4, !dbg !3627, !tbaa !1279
  %16 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !3629, !tbaa !1096
  %uxPriority60 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %16, i32 0, i32 3, !dbg !3630
  %17 = load i32, i32* %uxPriority60, align 4, !dbg !3630, !tbaa !1279
  %cmp61 = icmp ugt i32 %15, %17, !dbg !3631
  br i1 %cmp61, label %if.then63, label %if.end70, !dbg !3632

if.then63:                                        ; preds = %if.end58
  %cmp64.not = icmp eq i32* %pxHigherPriorityTaskWoken, null, !dbg !3633
  br i1 %cmp64.not, label %if.end67, label %if.then66, !dbg !3636

if.then66:                                        ; preds = %if.then63
  store i32 1, i32* %pxHigherPriorityTaskWoken, align 4, !dbg !3637, !tbaa !1085
  br label %if.end67, !dbg !3639

if.end67:                                         ; preds = %if.then66, %if.then63
  store volatile i32 1, i32* @xYieldPending, align 4, !dbg !3640, !tbaa !1085
  br label %if.end70, !dbg !3641

if.end70:                                         ; preds = %if.end67, %if.end58, %sw.epilog
  %asmresult.i = extractvalue { i32, i32 } %2, 0, !dbg !3555
  call void @llvm.dbg.value(metadata i32 %asmresult.i, metadata !3526, metadata !DIExpression()), !dbg !3527
  call void @llvm.dbg.value(metadata i32 %asmresult.i, metadata !1977, metadata !DIExpression()) #18, !dbg !3557
  call void @llvm.dbg.value(metadata i32 undef, metadata !1985, metadata !DIExpression()) #18, !dbg !3642
  call void asm sideeffect "\09msr basepri, $0\09", "r,~{memory}"(i32 %asmresult.i) #18, !dbg !3644, !srcloc !1993
  ret i32 %xReturn.0, !dbg !3645
}

; Function Attrs: nounwind
define dso_local void @vTaskGenericNotifyGiveFromISR(%struct.tskTaskControlBlock* %xTaskToNotify, i32 %uxIndexToNotify, i32* %pxHigherPriorityTaskWoken) local_unnamed_addr #0 section ".csection0" !dbg !3646 {
entry:
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %xTaskToNotify, metadata !3650, metadata !DIExpression()), !dbg !3656
  call void @llvm.dbg.value(metadata i32 %uxIndexToNotify, metadata !3651, metadata !DIExpression()), !dbg !3656
  call void @llvm.dbg.value(metadata i32* %pxHigherPriorityTaskWoken, metadata !3652, metadata !DIExpression()), !dbg !3656
  %cmp = icmp eq %struct.tskTaskControlBlock* %xTaskToNotify, null, !dbg !3657
  br i1 %cmp, label %if.then, label %if.end, !dbg !3659

if.then:                                          ; preds = %entry
  %0 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #18, !dbg !3660, !srcloc !1131
  call void @llvm.dbg.value(metadata i32 %0, metadata !1128, metadata !DIExpression()) #18, !dbg !3663
  br label %for.cond, !dbg !3664

for.cond:                                         ; preds = %for.cond, %if.then
  br label %for.cond, !dbg !3665, !llvm.loop !3668

if.end:                                           ; preds = %entry
  %cmp1.not = icmp eq i32 %uxIndexToNotify, 0, !dbg !3670
  br i1 %cmp1.not, label %if.end6, label %if.then4, !dbg !3672

if.then4:                                         ; preds = %if.end
  %1 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #18, !dbg !3673, !srcloc !1131
  call void @llvm.dbg.value(metadata i32 %1, metadata !1128, metadata !DIExpression()) #18, !dbg !3676
  br label %for.cond5, !dbg !3677

for.cond5:                                        ; preds = %for.cond5, %if.then4
  br label %for.cond5, !dbg !3678, !llvm.loop !3681

if.end6:                                          ; preds = %if.end
  call void @vPortValidateInterruptPriority() #18, !dbg !3683
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %xTaskToNotify, metadata !3653, metadata !DIExpression()), !dbg !3656
  %2 = call { i32, i32 } asm sideeffect "\09mrs $0, basepri\09\09\09\09\09\09\09\09\09\09\09\0A\09mov $1, $2\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $1\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,=r,i,~{memory}"(i32 80) #18, !dbg !3684, !srcloc !1980
  call void @llvm.dbg.value(metadata i32 undef, metadata !1977, metadata !DIExpression()) #18, !dbg !3686
  call void @llvm.dbg.value(metadata i32 undef, metadata !1978, metadata !DIExpression()) #18, !dbg !3686
  call void @llvm.dbg.value(metadata i32 undef, metadata !3655, metadata !DIExpression()), !dbg !3656
  %arrayidx = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %xTaskToNotify, i32 0, i32 11, i32 %uxIndexToNotify, !dbg !3687
  %3 = load volatile i8, i8* %arrayidx, align 1, !dbg !3687, !tbaa !1246
  call void @llvm.dbg.value(metadata i8 %3, metadata !3654, metadata !DIExpression()), !dbg !3656
  store volatile i8 2, i8* %arrayidx, align 1, !dbg !3689, !tbaa !1246
  %arrayidx9 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %xTaskToNotify, i32 0, i32 10, i32 %uxIndexToNotify, !dbg !3690
  %4 = load volatile i32, i32* %arrayidx9, align 4, !dbg !3691, !tbaa !1105
  %inc = add i32 %4, 1, !dbg !3691
  store volatile i32 %inc, i32* %arrayidx9, align 4, !dbg !3691, !tbaa !1105
  %cmp11 = icmp eq i8 %3, 1, !dbg !3692
  br i1 %cmp11, label %if.then13, label %if.end41, !dbg !3694

if.then13:                                        ; preds = %if.end6
  %xEventListItem = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %xTaskToNotify, i32 0, i32 2, !dbg !3695
  %pvContainer = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %xTaskToNotify, i32 0, i32 2, i32 4, !dbg !3695
  %5 = load %struct.xLIST*, %struct.xLIST** %pvContainer, align 4, !dbg !3695, !tbaa !1425
  %cmp14.not = icmp eq %struct.xLIST* %5, null, !dbg !3695
  br i1 %cmp14.not, label %if.end20, label %if.then18, !dbg !3698

if.then18:                                        ; preds = %if.then13
  %6 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #18, !dbg !3699, !srcloc !1131
  call void @llvm.dbg.value(metadata i32 %6, metadata !1128, metadata !DIExpression()) #18, !dbg !3702
  br label %for.cond19, !dbg !3703

for.cond19:                                       ; preds = %for.cond19, %if.then18
  br label %for.cond19, !dbg !3704, !llvm.loop !3707

if.end20:                                         ; preds = %if.then13
  %7 = load volatile i32, i32* @uxSchedulerSuspended, align 4, !dbg !3709, !tbaa !1085
  %cmp21 = icmp eq i32 %7, 0, !dbg !3711
  br i1 %cmp21, label %if.then23, label %if.else, !dbg !3712

if.then23:                                        ; preds = %if.end20
  %xStateListItem = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %xTaskToNotify, i32 0, i32 1, !dbg !3713
  %call24 = call i32 @icall_arg1p(i32 4, i8* bitcast (i32 (%struct.xLIST_ITEM*)* @uxListRemove to i8*), i8* %10, i32 ptrtoint (%struct.xLIST_ITEM* getelementptr (%struct.xLIST_ITEM, %struct.xLIST_ITEM* null, i32 1) to i32)), !dbg !3715
  %uxPriority = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %xTaskToNotify, i32 0, i32 3, !dbg !3716
  %8 = load i32, i32* %uxPriority, align 4, !dbg !3716, !tbaa !1279
  %shl = shl i32 1, %8, !dbg !3716
  %9 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !3716, !tbaa !1085
  %or = or i32 %9, %shl, !dbg !3716
  store volatile i32 %or, i32* @uxTopReadyPriority, align 4, !dbg !3716, !tbaa !1085
  %arrayidx26 = getelementptr inbounds [5 x %struct.xLIST], [5 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %8, !dbg !3716
  call void @vListInsertEnd(%struct.xLIST* nonnull %arrayidx26, %struct.xLIST_ITEM* nonnull %xStateListItem) #18, !dbg !3716
  br label %if.end29, !dbg !3717
  %10 = bitcast %struct.xLIST_ITEM* %xStateListItem to i8*

if.else:                                          ; preds = %if.end20
  call void @vListInsertEnd(%struct.xLIST* nonnull @xPendingReadyList, %struct.xLIST_ITEM* nonnull %xEventListItem) #18, !dbg !3718
  br label %if.end29

if.end29:                                         ; preds = %if.else, %if.then23
  %uxPriority30 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %xTaskToNotify, i32 0, i32 3, !dbg !3720
  %11 = load i32, i32* %uxPriority30, align 4, !dbg !3720, !tbaa !1279
  %12 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !3722, !tbaa !1096
  %uxPriority31 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %12, i32 0, i32 3, !dbg !3723
  %13 = load i32, i32* %uxPriority31, align 4, !dbg !3723, !tbaa !1279
  %cmp32 = icmp ugt i32 %11, %13, !dbg !3724
  br i1 %cmp32, label %if.then34, label %if.end41, !dbg !3725

if.then34:                                        ; preds = %if.end29
  %cmp35.not = icmp eq i32* %pxHigherPriorityTaskWoken, null, !dbg !3726
  br i1 %cmp35.not, label %if.end38, label %if.then37, !dbg !3729

if.then37:                                        ; preds = %if.then34
  store i32 1, i32* %pxHigherPriorityTaskWoken, align 4, !dbg !3730, !tbaa !1085
  br label %if.end38, !dbg !3732

if.end38:                                         ; preds = %if.then37, %if.then34
  store volatile i32 1, i32* @xYieldPending, align 4, !dbg !3733, !tbaa !1085
  br label %if.end41, !dbg !3734

if.end41:                                         ; preds = %if.end38, %if.end29, %if.end6
  %asmresult.i = extractvalue { i32, i32 } %2, 0, !dbg !3684
  call void @llvm.dbg.value(metadata i32 %asmresult.i, metadata !3655, metadata !DIExpression()), !dbg !3656
  call void @llvm.dbg.value(metadata i32 %asmresult.i, metadata !1977, metadata !DIExpression()) #18, !dbg !3686
  call void @llvm.dbg.value(metadata i32 undef, metadata !1985, metadata !DIExpression()) #18, !dbg !3735
  call void asm sideeffect "\09msr basepri, $0\09", "r,~{memory}"(i32 %asmresult.i) #18, !dbg !3737, !srcloc !1993
  ret void, !dbg !3738
}

; Function Attrs: nounwind
define dso_local i32 @xTaskGenericNotifyStateClear(%struct.tskTaskControlBlock* %xTask, i32 %uxIndexToClear) local_unnamed_addr #0 section ".csection0" !dbg !3739 {
entry:
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %xTask, metadata !3743, metadata !DIExpression()), !dbg !3747
  call void @llvm.dbg.value(metadata i32 %uxIndexToClear, metadata !3744, metadata !DIExpression()), !dbg !3747
  %cmp.not = icmp eq i32 %uxIndexToClear, 0, !dbg !3748
  br i1 %cmp.not, label %if.end, label %if.then, !dbg !3750

if.then:                                          ; preds = %entry
  %0 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #18, !dbg !3751, !srcloc !1131
  call void @llvm.dbg.value(metadata i32 %0, metadata !1128, metadata !DIExpression()) #18, !dbg !3754
  br label %for.cond, !dbg !3755

for.cond:                                         ; preds = %for.cond, %if.then
  br label %for.cond, !dbg !3756, !llvm.loop !3759

if.end:                                           ; preds = %entry
  %cmp3 = icmp eq %struct.tskTaskControlBlock* %xTask, null, !dbg !3761
  br i1 %cmp3, label %cond.true, label %cond.end, !dbg !3761

cond.true:                                        ; preds = %if.end
  %1 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !3761, !tbaa !1096
  br label %cond.end, !dbg !3761

cond.end:                                         ; preds = %cond.true, %if.end
  %cond = phi %struct.tskTaskControlBlock* [ %1, %cond.true ], [ %xTask, %if.end ], !dbg !3761
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %cond, metadata !3745, metadata !DIExpression()), !dbg !3747
  call void @vPortEnterCritical() #18, !dbg !3762
  %arrayidx = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %cond, i32 0, i32 11, i32 %uxIndexToClear, !dbg !3763
  %2 = load volatile i8, i8* %arrayidx, align 1, !dbg !3763, !tbaa !1246
  %cmp6 = icmp eq i8 %2, 2, !dbg !3766
  br i1 %cmp6, label %if.then8, label %if.end11, !dbg !3767

if.then8:                                         ; preds = %cond.end
  store volatile i8 0, i8* %arrayidx, align 1, !dbg !3768, !tbaa !1246
  call void @llvm.dbg.value(metadata i32 1, metadata !3746, metadata !DIExpression()), !dbg !3747
  br label %if.end11, !dbg !3770

if.end11:                                         ; preds = %if.then8, %cond.end
  %xReturn.0 = phi i32 [ 1, %if.then8 ], [ 0, %cond.end ], !dbg !3771
  call void @llvm.dbg.value(metadata i32 %xReturn.0, metadata !3746, metadata !DIExpression()), !dbg !3747
  call void @vPortExitCritical() #18, !dbg !3772
  ret i32 %xReturn.0, !dbg !3773
}

; Function Attrs: nounwind
define dso_local i32 @ulTaskGenericNotifyValueClear(%struct.tskTaskControlBlock* %xTask, i32 %uxIndexToClear, i32 %ulBitsToClear) local_unnamed_addr #0 section ".csection0" !dbg !3774 {
entry:
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %xTask, metadata !3778, metadata !DIExpression()), !dbg !3783
  call void @llvm.dbg.value(metadata i32 %uxIndexToClear, metadata !3779, metadata !DIExpression()), !dbg !3783
  call void @llvm.dbg.value(metadata i32 %ulBitsToClear, metadata !3780, metadata !DIExpression()), !dbg !3783
  %cmp = icmp eq %struct.tskTaskControlBlock* %xTask, null, !dbg !3784
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !3784

cond.true:                                        ; preds = %entry
  %0 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !3784, !tbaa !1096
  br label %cond.end, !dbg !3784

cond.end:                                         ; preds = %cond.true, %entry
  %cond = phi %struct.tskTaskControlBlock* [ %0, %cond.true ], [ %xTask, %entry ], !dbg !3784
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %cond, metadata !3781, metadata !DIExpression()), !dbg !3783
  call void @vPortEnterCritical() #18, !dbg !3785
  %arrayidx = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %cond, i32 0, i32 10, i32 %uxIndexToClear, !dbg !3786
  %1 = load volatile i32, i32* %arrayidx, align 4, !dbg !3786, !tbaa !1105
  call void @llvm.dbg.value(metadata i32 %1, metadata !3782, metadata !DIExpression()), !dbg !3783
  %neg = xor i32 %ulBitsToClear, -1, !dbg !3788
  %2 = load volatile i32, i32* %arrayidx, align 4, !dbg !3789, !tbaa !1105
  %and = and i32 %2, %neg, !dbg !3789
  store volatile i32 %and, i32* %arrayidx, align 4, !dbg !3789, !tbaa !1105
  call void @vPortExitCritical() #18, !dbg !3790
  ret i32 %1, !dbg !3791
}

; Function Attrs: noreturn nounwind
define dso_local i32 @main() local_unnamed_addr #4 section ".csection9" !dbg !3792 {
entry:
  call fastcc void @prvSetupHardware(), !dbg !3795
  call void @xcall_arg1i(i32 12, i8* bitcast (void (i32)* @vStartLEDFlashTasks to i8*), i32 1, i32 1), !dbg !3796
  call void @vTaskStartScheduler() #18, !dbg !3797
  br label %for.cond, !dbg !3798

for.cond:                                         ; preds = %for.cond, %entry
  br label %for.cond, !dbg !3799, !llvm.loop !3802
}

; Function Attrs: nounwind
define internal fastcc void @prvSetupHardware() unnamed_addr #0 section ".csection9" !dbg !3805 {
entry:
  call void @xcall_arg0(i32 0, void ()* @SystemInit), !dbg !3806
  call void @NVIC_PriorityGroupConfig(i32 768) #18, !dbg !3807
  call void @xcall_arg0(i32 10, void ()* @vParTestInitialise), !dbg !3808
  call void @STM_EVAL_PBInit(i32 2, i32 1) #18, !dbg !3809
  ret void, !dbg !3810
}

; Function Attrs: norecurse nounwind readnone willreturn
define dso_local void @vApplicationTickHook() local_unnamed_addr #8 section ".csection9" !dbg !3811 {
entry:
  ret void, !dbg !3812
}

; Function Attrs: nofree norecurse nounwind willreturn
define dso_local void @TIM3_IRQHandler() local_unnamed_addr #3 section ".csection9" !dbg !3813 {
entry:
  %0 = load volatile i32, i32* @ulFPUInterruptNesting, align 4, !dbg !3814, !tbaa !1085
  %inc = add i32 %0, 1, !dbg !3814
  store volatile i32 %inc, i32* @ulFPUInterruptNesting, align 4, !dbg !3814, !tbaa !1085
  %1 = load volatile i32, i32* @ulFPUInterruptNesting, align 4, !dbg !3815, !tbaa !1085
  %2 = load volatile i32, i32* @ulMaxFPUInterruptNesting, align 4, !dbg !3817, !tbaa !1085
  %cmp = icmp ugt i32 %1, %2, !dbg !3818
  br i1 %cmp, label %if.then, label %if.end, !dbg !3819

if.then:                                          ; preds = %entry
  %3 = load volatile i32, i32* @ulFPUInterruptNesting, align 4, !dbg !3820, !tbaa !1085
  store volatile i32 %3, i32* @ulMaxFPUInterruptNesting, align 4, !dbg !3822, !tbaa !1085
  br label %if.end, !dbg !3823

if.end:                                           ; preds = %if.then, %entry
  %4 = load volatile i32, i32* @ulFPUInterruptNesting, align 4, !dbg !3824, !tbaa !1085
  %dec = add i32 %4, -1, !dbg !3824
  store volatile i32 %dec, i32* @ulFPUInterruptNesting, align 4, !dbg !3824, !tbaa !1085
  ret void, !dbg !3825
}

; Function Attrs: nounwind
define dso_local void @TIM2_IRQHandler() local_unnamed_addr #0 section ".csection9" !dbg !3826 {
entry:
  %0 = load volatile i32, i32* @ulFPUInterruptNesting, align 4, !dbg !3827, !tbaa !1085
  %inc = add i32 %0, 1, !dbg !3827
  store volatile i32 %inc, i32* @ulFPUInterruptNesting, align 4, !dbg !3827, !tbaa !1085
  call void @xcall_arg1i(i32 11, i8* bitcast (void (i32)* @vRegTestClearFlopRegistersToParameterValue to i8*), i32 1, i32 1), !dbg !3828
  call fastcc void @NVIC_SetPendingIRQ(), !dbg !3829
  %call = call i32 @icall_arg1i(i32 11, i8* bitcast (i32 (i32)* @ulRegTestCheckFlopRegistersContainParameterValue to i8*), i32 1, i32 1), !dbg !3830
  %cmp = icmp eq i32 %call, 0, !dbg !3830
  br i1 %cmp, label %if.then, label %if.end, !dbg !3832

if.then:                                          ; preds = %entry
  %1 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #18, !dbg !3833, !srcloc !3839
  call void @llvm.dbg.value(metadata i32 %1, metadata !3836, metadata !DIExpression()) #18, !dbg !3840
  br label %for.cond, !dbg !3841

for.cond:                                         ; preds = %for.cond, %if.then
  br label %for.cond, !dbg !3842, !llvm.loop !3845

if.end:                                           ; preds = %entry
  %2 = load volatile i32, i32* @ulFPUInterruptNesting, align 4, !dbg !3847, !tbaa !1085
  %dec = add i32 %2, -1, !dbg !3847
  store volatile i32 %dec, i32* @ulFPUInterruptNesting, align 4, !dbg !3847, !tbaa !1085
  ret void, !dbg !3848
}

declare !dbg !3849 dso_local void @vRegTestClearFlopRegistersToParameterValue(i32 %0) local_unnamed_addr #9 section ".csection11"

; Function Attrs: inlinehint nofree norecurse nounwind willreturn
define internal fastcc void @NVIC_SetPendingIRQ() unnamed_addr #10 section ".csection2" !dbg !3852 {
entry:
  call void @llvm.dbg.value(metadata i32 29, metadata !3857, metadata !DIExpression()), !dbg !3858
  store volatile i32 536870912, i32* inttoptr (i32 -536813056 to i32*), align 512, !dbg !3859, !tbaa !1105
  ret void, !dbg !3860
}

declare !dbg !3861 dso_local i32 @ulRegTestCheckFlopRegistersContainParameterValue(i32 %0) local_unnamed_addr #9 section ".csection11"

; Function Attrs: nounwind
define dso_local void @EXTI9_5_IRQHandler() local_unnamed_addr #0 section ".csection9" !dbg !3864 {
entry:
  %lHigherPriorityTaskWoken = alloca i32, align 4
  %0 = bitcast i32* %lHigherPriorityTaskWoken to i8*, !dbg !3867
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #18, !dbg !3867
  call void @llvm.dbg.value(metadata i32 0, metadata !3866, metadata !DIExpression()), !dbg !3868
  store i32 0, i32* %lHigherPriorityTaskWoken, align 4, !dbg !3869, !tbaa !1085
  call void @xcall_arg1i(i32 15, i8* bitcast (void (i32)* @EXTI_ClearITPendingBit to i8*), i32 64, i32 64), !dbg !3870
  call void @llvm.dbg.value(metadata i32* %lHigherPriorityTaskWoken, metadata !3866, metadata !DIExpression(DW_OP_deref)), !dbg !3868
  %call = call i32 @xQueueGiveFromISR(%struct.QueueDefinition* null, i32* nonnull %lHigherPriorityTaskWoken) #18, !dbg !3871
  %1 = load i32, i32* %lHigherPriorityTaskWoken, align 4, !dbg !3872, !tbaa !1085
  call void @llvm.dbg.value(metadata i32 %1, metadata !3866, metadata !DIExpression()), !dbg !3868
  %cmp.not = icmp eq i32 %1, 0, !dbg !3872
  br i1 %cmp.not, label %if.end, label %if.then, !dbg !3874

if.then:                                          ; preds = %entry
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !3875, !tbaa !1105
  call void asm sideeffect "dsb", "~{memory}"() #18, !dbg !3875, !srcloc !3877
  call void asm sideeffect "isb", ""() #18, !dbg !3875, !srcloc !3878
  br label %if.end, !dbg !3875

if.end:                                           ; preds = %if.then, %entry
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #18, !dbg !3879
  ret void, !dbg !3879
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg %0, i8* nocapture %1) #11 section ".csection13"

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg %0, i8* nocapture %1) #11 section ".csection13"

; Function Attrs: noreturn nounwind
define dso_local void @vApplicationMallocFailedHook() local_unnamed_addr #4 section ".csection0" !dbg !3880 {
entry:
  %0 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #18, !dbg !3881, !srcloc !3839
  call void @llvm.dbg.value(metadata i32 %0, metadata !3836, metadata !DIExpression()) #18, !dbg !3883
  br label %for.cond, !dbg !3884

for.cond:                                         ; preds = %for.cond, %entry
  br label %for.cond, !dbg !3885, !llvm.loop !3888
}

; Function Attrs: norecurse nounwind readnone willreturn
define dso_local void @vApplicationIdleHook() local_unnamed_addr #8 section ".csection9" !dbg !3891 {
entry:
  ret void, !dbg !3892
}

; Function Attrs: noreturn nounwind
define dso_local void @vApplicationStackOverflowHook(%struct.tskTaskControlBlock* nocapture readnone %pxTask, i8* nocapture readnone %pcTaskName) local_unnamed_addr #4 section ".csection9" !dbg !3893 {
entry:
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %pxTask, metadata !3897, metadata !DIExpression()), !dbg !3899
  call void @llvm.dbg.value(metadata i8* %pcTaskName, metadata !3898, metadata !DIExpression()), !dbg !3899
  %0 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #18, !dbg !3900, !srcloc !3839
  call void @llvm.dbg.value(metadata i32 %0, metadata !3836, metadata !DIExpression()) #18, !dbg !3902
  br label %for.cond, !dbg !3903

for.cond:                                         ; preds = %for.cond, %entry
  br label %for.cond, !dbg !3904, !llvm.loop !3907
}

; Function Attrs: norecurse nounwind readnone willreturn
define dso_local void @_sbrk() local_unnamed_addr #8 section ".csection9" !dbg !3910 {
entry:
  ret void, !dbg !3911
}

; Function Attrs: nofree norecurse nounwind willreturn
define dso_local void @vListInitialise(%struct.xLIST* %pxList) local_unnamed_addr #3 section ".csection4" !dbg !3912 {
entry:
  call void @llvm.dbg.value(metadata %struct.xLIST* %pxList, metadata !3920, metadata !DIExpression()), !dbg !3921
  %xListEnd = getelementptr inbounds %struct.xLIST, %struct.xLIST* %pxList, i32 0, i32 2, !dbg !3922
  %pxIndex = getelementptr inbounds %struct.xLIST, %struct.xLIST* %pxList, i32 0, i32 1, !dbg !3923
  %0 = bitcast %struct.xLIST_ITEM** %pxIndex to %struct.xMINI_LIST_ITEM**, !dbg !3924
  store %struct.xMINI_LIST_ITEM* %xListEnd, %struct.xMINI_LIST_ITEM** %0, align 4, !dbg !3924, !tbaa !1142
  %xItemValue = getelementptr inbounds %struct.xMINI_LIST_ITEM, %struct.xMINI_LIST_ITEM* %xListEnd, i32 0, i32 0, !dbg !3925
  store i32 -1, i32* %xItemValue, align 4, !dbg !3926, !tbaa !3927
  %pxNext = getelementptr inbounds %struct.xLIST, %struct.xLIST* %pxList, i32 0, i32 2, i32 1, !dbg !3928
  %1 = bitcast %struct.xLIST_ITEM** %pxNext to %struct.xMINI_LIST_ITEM**, !dbg !3929
  store %struct.xMINI_LIST_ITEM* %xListEnd, %struct.xMINI_LIST_ITEM** %1, align 4, !dbg !3929, !tbaa !1493
  %pxPrevious = getelementptr inbounds %struct.xLIST, %struct.xLIST* %pxList, i32 0, i32 2, i32 2, !dbg !3930
  %2 = bitcast %struct.xLIST_ITEM** %pxPrevious to %struct.xMINI_LIST_ITEM**, !dbg !3931
  store %struct.xMINI_LIST_ITEM* %xListEnd, %struct.xMINI_LIST_ITEM** %2, align 4, !dbg !3931, !tbaa !3932
  %uxNumberOfItems = getelementptr inbounds %struct.xLIST, %struct.xLIST* %pxList, i32 0, i32 0, !dbg !3933
  store volatile i32 0, i32* %uxNumberOfItems, align 4, !dbg !3934, !tbaa !1122
  ret void, !dbg !3935
}

; Function Attrs: nofree norecurse nounwind willreturn writeonly
define dso_local void @vListInitialiseItem(%struct.xLIST_ITEM* nocapture %pxItem) local_unnamed_addr #7 section ".csection4" !dbg !3936 {
entry:
  call void @llvm.dbg.value(metadata %struct.xLIST_ITEM* %pxItem, metadata !3941, metadata !DIExpression()), !dbg !3942
  %pvContainer = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %pxItem, i32 0, i32 4, !dbg !3943
  store %struct.xLIST* null, %struct.xLIST** %pvContainer, align 4, !dbg !3944, !tbaa !3945
  ret void, !dbg !3946
}

; Function Attrs: nofree norecurse nounwind willreturn
define dso_local void @vListInsertEnd(%struct.xLIST* %pxList, %struct.xLIST_ITEM* %pxNewListItem) local_unnamed_addr #3 section ".csection4" !dbg !3947 {
entry:
  call void @llvm.dbg.value(metadata %struct.xLIST* %pxList, metadata !3951, metadata !DIExpression()), !dbg !3954
  call void @llvm.dbg.value(metadata %struct.xLIST_ITEM* %pxNewListItem, metadata !3952, metadata !DIExpression()), !dbg !3954
  %pxIndex1 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %pxList, i32 0, i32 1, !dbg !3955
  %0 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %pxIndex1, align 4, !dbg !3955, !tbaa !1142
  call void @llvm.dbg.value(metadata %struct.xLIST_ITEM* %0, metadata !3953, metadata !DIExpression()), !dbg !3954
  %pxNext = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %pxNewListItem, i32 0, i32 1, !dbg !3956
  store %struct.xLIST_ITEM* %0, %struct.xLIST_ITEM** %pxNext, align 4, !dbg !3957, !tbaa !1143
  %pxPrevious = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %0, i32 0, i32 2, !dbg !3958
  %1 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %pxPrevious, align 4, !dbg !3958, !tbaa !3959
  %pxPrevious2 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %pxNewListItem, i32 0, i32 2, !dbg !3960
  store %struct.xLIST_ITEM* %1, %struct.xLIST_ITEM** %pxPrevious2, align 4, !dbg !3961, !tbaa !3959
  %2 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %pxPrevious, align 4, !dbg !3962, !tbaa !3959
  %pxNext4 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %2, i32 0, i32 1, !dbg !3963
  store %struct.xLIST_ITEM* %pxNewListItem, %struct.xLIST_ITEM** %pxNext4, align 4, !dbg !3964, !tbaa !1143
  store %struct.xLIST_ITEM* %pxNewListItem, %struct.xLIST_ITEM** %pxPrevious, align 4, !dbg !3965, !tbaa !3959
  %pvContainer = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %pxNewListItem, i32 0, i32 4, !dbg !3966
  store %struct.xLIST* %pxList, %struct.xLIST** %pvContainer, align 4, !dbg !3967, !tbaa !3945
  %uxNumberOfItems = getelementptr inbounds %struct.xLIST, %struct.xLIST* %pxList, i32 0, i32 0, !dbg !3968
  %3 = load volatile i32, i32* %uxNumberOfItems, align 4, !dbg !3969, !tbaa !1122
  %inc = add i32 %3, 1, !dbg !3969
  store volatile i32 %inc, i32* %uxNumberOfItems, align 4, !dbg !3969, !tbaa !1122
  ret void, !dbg !3970
}

; Function Attrs: nofree norecurse nounwind
define dso_local void @vListInsert(%struct.xLIST* %pxList, %struct.xLIST_ITEM* %pxNewListItem) local_unnamed_addr #12 section ".csection4" !dbg !3971 {
entry:
  call void @llvm.dbg.value(metadata %struct.xLIST* %pxList, metadata !3973, metadata !DIExpression()), !dbg !3977
  call void @llvm.dbg.value(metadata %struct.xLIST_ITEM* %pxNewListItem, metadata !3974, metadata !DIExpression()), !dbg !3977
  %xItemValue = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %pxNewListItem, i32 0, i32 0, !dbg !3978
  %0 = load i32, i32* %xItemValue, align 4, !dbg !3978, !tbaa !1494
  call void @llvm.dbg.value(metadata i32 %0, metadata !3976, metadata !DIExpression()), !dbg !3977
  %cmp = icmp eq i32 %0, -1, !dbg !3979
  br i1 %cmp, label %if.then, label %if.else, !dbg !3981

if.then:                                          ; preds = %entry
  %pxPrevious = getelementptr inbounds %struct.xLIST, %struct.xLIST* %pxList, i32 0, i32 2, i32 2, !dbg !3982
  %1 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %pxPrevious, align 4, !dbg !3982, !tbaa !3932
  call void @llvm.dbg.value(metadata %struct.xLIST_ITEM* %1, metadata !3975, metadata !DIExpression()), !dbg !3977
  br label %if.end, !dbg !3984

if.else:                                          ; preds = %entry
  %xListEnd1 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %pxList, i32 0, i32 2, !dbg !3985
  %2 = bitcast %struct.xMINI_LIST_ITEM* %xListEnd1 to %struct.xLIST_ITEM*, !dbg !3988
  call void @llvm.dbg.value(metadata %struct.xLIST_ITEM* %2, metadata !3975, metadata !DIExpression()), !dbg !3977
  br label %for.cond, !dbg !3989

for.cond:                                         ; preds = %for.cond, %if.else
  %pxIterator.0 = phi %struct.xLIST_ITEM* [ %2, %if.else ], [ %3, %for.cond ], !dbg !3990
  call void @llvm.dbg.value(metadata %struct.xLIST_ITEM* %pxIterator.0, metadata !3975, metadata !DIExpression()), !dbg !3977
  %pxNext = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %pxIterator.0, i32 0, i32 1, !dbg !3991
  %3 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %pxNext, align 4, !dbg !3991, !tbaa !1143
  %xItemValue2 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %3, i32 0, i32 0, !dbg !3993
  %4 = load i32, i32* %xItemValue2, align 4, !dbg !3993, !tbaa !1494
  %cmp3.not = icmp ugt i32 %4, %0, !dbg !3994
  br i1 %cmp3.not, label %if.end, label %for.cond, !dbg !3995, !llvm.loop !3996

if.end:                                           ; preds = %for.cond, %if.then
  %pxIterator.1 = phi %struct.xLIST_ITEM* [ %1, %if.then ], [ %pxIterator.0, %for.cond ], !dbg !3998
  call void @llvm.dbg.value(metadata %struct.xLIST_ITEM* %pxIterator.1, metadata !3975, metadata !DIExpression()), !dbg !3977
  %pxNext5 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %pxIterator.1, i32 0, i32 1, !dbg !3999
  %5 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %pxNext5, align 4, !dbg !3999, !tbaa !1143
  %pxNext6 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %pxNewListItem, i32 0, i32 1, !dbg !4000
  store %struct.xLIST_ITEM* %5, %struct.xLIST_ITEM** %pxNext6, align 4, !dbg !4001, !tbaa !1143
  %pxPrevious8 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %5, i32 0, i32 2, !dbg !4002
  store %struct.xLIST_ITEM* %pxNewListItem, %struct.xLIST_ITEM** %pxPrevious8, align 4, !dbg !4003, !tbaa !3959
  %pxPrevious9 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %pxNewListItem, i32 0, i32 2, !dbg !4004
  store %struct.xLIST_ITEM* %pxIterator.1, %struct.xLIST_ITEM** %pxPrevious9, align 4, !dbg !4005, !tbaa !3959
  store %struct.xLIST_ITEM* %pxNewListItem, %struct.xLIST_ITEM** %pxNext5, align 4, !dbg !4006, !tbaa !1143
  %pvContainer = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %pxNewListItem, i32 0, i32 4, !dbg !4007
  store %struct.xLIST* %pxList, %struct.xLIST** %pvContainer, align 4, !dbg !4008, !tbaa !3945
  %uxNumberOfItems = getelementptr inbounds %struct.xLIST, %struct.xLIST* %pxList, i32 0, i32 0, !dbg !4009
  %6 = load volatile i32, i32* %uxNumberOfItems, align 4, !dbg !4010, !tbaa !1122
  %inc = add i32 %6, 1, !dbg !4010
  store volatile i32 %inc, i32* %uxNumberOfItems, align 4, !dbg !4010, !tbaa !1122
  ret void, !dbg !4011
}

; Function Attrs: nofree norecurse nounwind willreturn
define dso_local i32 @uxListRemove(%struct.xLIST_ITEM* %pxItemToRemove) local_unnamed_addr #3 section ".csection4" !dbg !4012 {
entry:
  call void @llvm.dbg.value(metadata %struct.xLIST_ITEM* %pxItemToRemove, metadata !4016, metadata !DIExpression()), !dbg !4018
  %pvContainer = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %pxItemToRemove, i32 0, i32 4, !dbg !4019
  %0 = load %struct.xLIST*, %struct.xLIST** %pvContainer, align 4, !dbg !4019, !tbaa !3945
  call void @llvm.dbg.value(metadata %struct.xLIST* %0, metadata !4017, metadata !DIExpression()), !dbg !4018
  %pxPrevious = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %pxItemToRemove, i32 0, i32 2, !dbg !4020
  %1 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %pxPrevious, align 4, !dbg !4020, !tbaa !3959
  %pxNext = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %pxItemToRemove, i32 0, i32 1, !dbg !4021
  %2 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %pxNext, align 4, !dbg !4021, !tbaa !1143
  %pxPrevious1 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %2, i32 0, i32 2, !dbg !4022
  store %struct.xLIST_ITEM* %1, %struct.xLIST_ITEM** %pxPrevious1, align 4, !dbg !4023, !tbaa !3959
  %3 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %pxPrevious, align 4, !dbg !4024, !tbaa !3959
  %pxNext4 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %3, i32 0, i32 1, !dbg !4025
  store %struct.xLIST_ITEM* %2, %struct.xLIST_ITEM** %pxNext4, align 4, !dbg !4026, !tbaa !1143
  %pxIndex = getelementptr inbounds %struct.xLIST, %struct.xLIST* %0, i32 0, i32 1, !dbg !4027
  %4 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %pxIndex, align 4, !dbg !4027, !tbaa !1142
  %cmp = icmp eq %struct.xLIST_ITEM* %4, %pxItemToRemove, !dbg !4029
  br i1 %cmp, label %if.then, label %if.end, !dbg !4030

if.then:                                          ; preds = %entry
  store %struct.xLIST_ITEM* %3, %struct.xLIST_ITEM** %pxIndex, align 4, !dbg !4031, !tbaa !1142
  br label %if.end, !dbg !4033

if.end:                                           ; preds = %if.then, %entry
  store %struct.xLIST* null, %struct.xLIST** %pvContainer, align 4, !dbg !4034, !tbaa !3945
  %uxNumberOfItems = getelementptr inbounds %struct.xLIST, %struct.xLIST* %0, i32 0, i32 0, !dbg !4035
  %5 = load volatile i32, i32* %uxNumberOfItems, align 4, !dbg !4036, !tbaa !1122
  %dec = add i32 %5, -1, !dbg !4036
  store volatile i32 %dec, i32* %uxNumberOfItems, align 4, !dbg !4036, !tbaa !1122
  %6 = load volatile i32, i32* %uxNumberOfItems, align 4, !dbg !4037, !tbaa !1122
  ret i32 %6, !dbg !4038
}

; Function Attrs: nounwind
define dso_local i32 @xQueueGenericReset(%struct.QueueDefinition* %xQueue, i32 %xNewQueue) local_unnamed_addr #0 section ".csection3" !dbg !4039 {
entry:
  call void @llvm.dbg.value(metadata %struct.QueueDefinition* %xQueue, metadata !4043, metadata !DIExpression()), !dbg !4047
  call void @llvm.dbg.value(metadata i32 %xNewQueue, metadata !4044, metadata !DIExpression()), !dbg !4047
  call void @llvm.dbg.value(metadata %struct.QueueDefinition* %xQueue, metadata !4045, metadata !DIExpression()), !dbg !4047
  %cmp = icmp eq %struct.QueueDefinition* %xQueue, null, !dbg !4048
  br i1 %cmp, label %if.then, label %if.end, !dbg !4050

if.then:                                          ; preds = %entry
  %0 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #18, !dbg !4051, !srcloc !4057
  call void @llvm.dbg.value(metadata i32 %0, metadata !4054, metadata !DIExpression()) #18, !dbg !4058
  br label %for.cond, !dbg !4059

for.cond:                                         ; preds = %for.cond, %if.then
  br label %for.cond, !dbg !4060, !llvm.loop !4063

if.end:                                           ; preds = %entry
  call void @xcall_arg0(i32 0, void ()* @vPortEnterCritical), !dbg !4065
  %pcHead = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %xQueue, i32 0, i32 0, !dbg !4066
  %1 = load i8*, i8** %pcHead, align 4, !dbg !4066, !tbaa !4068
  %uxLength = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %xQueue, i32 0, i32 6, !dbg !4070
  %2 = load i32, i32* %uxLength, align 4, !dbg !4070, !tbaa !4071
  %uxItemSize = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %xQueue, i32 0, i32 7, !dbg !4072
  %3 = load i32, i32* %uxItemSize, align 4, !dbg !4072, !tbaa !4073
  %mul = mul i32 %3, %2, !dbg !4074
  %add.ptr = getelementptr inbounds i8, i8* %1, i32 %mul, !dbg !4075
  %pcTail = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %xQueue, i32 0, i32 2, i32 0, i32 0, !dbg !4076
  store i8* %add.ptr, i8** %pcTail, align 4, !dbg !4077, !tbaa !1246
  %uxMessagesWaiting = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %xQueue, i32 0, i32 5, !dbg !4078
  store volatile i32 0, i32* %uxMessagesWaiting, align 4, !dbg !4079, !tbaa !4080
  %pcWriteTo = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %xQueue, i32 0, i32 1, !dbg !4081
  store i8* %1, i8** %pcWriteTo, align 4, !dbg !4082, !tbaa !4083
  %sub = add i32 %2, -1, !dbg !4084
  %mul6 = mul i32 %sub, %3, !dbg !4085
  %add.ptr7 = getelementptr inbounds i8, i8* %1, i32 %mul6, !dbg !4086
  %pcReadFrom = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %xQueue, i32 0, i32 2, i32 0, i32 1, !dbg !4087
  store i8* %add.ptr7, i8** %pcReadFrom, align 4, !dbg !4088, !tbaa !1246
  %cRxLock = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %xQueue, i32 0, i32 8, !dbg !4089
  store volatile i8 -1, i8* %cRxLock, align 4, !dbg !4090, !tbaa !4091
  %cTxLock = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %xQueue, i32 0, i32 9, !dbg !4092
  store volatile i8 -1, i8* %cTxLock, align 1, !dbg !4093, !tbaa !4094
  %cmp10 = icmp eq i32 %xNewQueue, 0, !dbg !4095
  br i1 %cmp10, label %if.then11, label %if.else21, !dbg !4097

if.then11:                                        ; preds = %if.end
  %xTasksWaitingToSend = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %xQueue, i32 0, i32 3, !dbg !4098
  %uxNumberOfItems = getelementptr inbounds %struct.xLIST, %struct.xLIST* %xTasksWaitingToSend, i32 0, i32 0, !dbg !4098
  %4 = load volatile i32, i32* %uxNumberOfItems, align 4, !dbg !4098, !tbaa !4101
  %cmp12.not = icmp eq i32 %4, 0, !dbg !4098
  br i1 %cmp12.not, label %if.end23, label %if.then14, !dbg !4102

if.then14:                                        ; preds = %if.then11
  %call = call i32 @icall_arg1p(i32 0, i8* bitcast (i32 (%struct.xLIST*)* @xTaskRemoveFromEventList to i8*), i8* %5, i32 ptrtoint (%struct.xLIST* getelementptr (%struct.xLIST, %struct.xLIST* null, i32 1) to i32)), !dbg !4103
  %cmp16.not = icmp eq i32 %call, 0, !dbg !4106
  br i1 %cmp16.not, label %if.end23, label %if.then17, !dbg !4107
  %5 = bitcast %struct.xLIST* %xTasksWaitingToSend to i8*

if.then17:                                        ; preds = %if.then14
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !4108, !tbaa !1105
  call void asm sideeffect "dsb", "~{memory}"() #18, !dbg !4108, !srcloc !4111
  call void asm sideeffect "isb", ""() #18, !dbg !4108, !srcloc !4112
  br label %if.end23, !dbg !4113

if.else21:                                        ; preds = %if.end
  %xTasksWaitingToSend22 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %xQueue, i32 0, i32 3, !dbg !4114
  call void @xcall_arg1p(i32 4, i8* bitcast (void (%struct.xLIST*)* @vListInitialise to i8*), i8* %6, i32 ptrtoint (%struct.xLIST* getelementptr (%struct.xLIST, %struct.xLIST* null, i32 1) to i32)), !dbg !4116
  %xTasksWaitingToReceive = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %xQueue, i32 0, i32 4, !dbg !4117
  call void @xcall_arg1p(i32 4, i8* bitcast (void (%struct.xLIST*)* @vListInitialise to i8*), i8* %7, i32 ptrtoint (%struct.xLIST* getelementptr (%struct.xLIST, %struct.xLIST* null, i32 1) to i32)), !dbg !4118
  br label %if.end23
  %6 = bitcast %struct.xLIST* %xTasksWaitingToSend22 to i8*
  %7 = bitcast %struct.xLIST* %xTasksWaitingToReceive to i8*

if.end23:                                         ; preds = %if.else21, %if.then17, %if.then14, %if.then11
  call void @xcall_arg0(i32 0, void ()* @vPortExitCritical), !dbg !4119
  ret i32 1, !dbg !4120
}

; Function Attrs: nounwind
define dso_local %struct.QueueDefinition* @xQueueGenericCreate(i32 %uxQueueLength, i32 %uxItemSize, i8 zeroext %ucQueueType) local_unnamed_addr #0 section ".csection3" !dbg !4121 {
entry:
  call void @llvm.dbg.value(metadata i32 %uxQueueLength, metadata !4125, metadata !DIExpression()), !dbg !4131
  call void @llvm.dbg.value(metadata i32 %uxItemSize, metadata !4126, metadata !DIExpression()), !dbg !4131
  call void @llvm.dbg.value(metadata i8 %ucQueueType, metadata !4127, metadata !DIExpression()), !dbg !4131
  %cmp.not = icmp eq i32 %uxQueueLength, 0, !dbg !4132
  br i1 %cmp.not, label %if.then, label %if.end, !dbg !4134

if.then:                                          ; preds = %entry
  %0 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #18, !dbg !4135, !srcloc !4057
  call void @llvm.dbg.value(metadata i32 %0, metadata !4054, metadata !DIExpression()) #18, !dbg !4138
  br label %for.cond, !dbg !4139

for.cond:                                         ; preds = %for.cond, %if.then
  br label %for.cond, !dbg !4140, !llvm.loop !4143

if.end:                                           ; preds = %entry
  %umul = call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %uxItemSize, i32 %uxQueueLength), !dbg !4145
  %umul.val = extractvalue { i32, i1 } %umul, 0, !dbg !4145
  call void @llvm.dbg.value(metadata i32 %umul.val, metadata !4129, metadata !DIExpression()), !dbg !4131
  %umul.ov = extractvalue { i32, i1 } %umul, 1
  br i1 %umul.ov, label %if.then9, label %if.end11, !dbg !4146

if.then9:                                         ; preds = %if.end
  %1 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #18, !dbg !4147, !srcloc !4057
  call void @llvm.dbg.value(metadata i32 %1, metadata !4054, metadata !DIExpression()) #18, !dbg !4151
  br label %for.cond10, !dbg !4152

for.cond10:                                       ; preds = %for.cond10, %if.then9
  br label %for.cond10, !dbg !4153, !llvm.loop !4156

if.end11:                                         ; preds = %if.end
  %cmp12 = icmp ugt i32 %umul.val, -81, !dbg !4158
  br i1 %cmp12, label %if.then16, label %if.end18, !dbg !4160

if.then16:                                        ; preds = %if.end11
  %2 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #18, !dbg !4161, !srcloc !4057
  call void @llvm.dbg.value(metadata i32 %2, metadata !4054, metadata !DIExpression()) #18, !dbg !4164
  br label %for.cond17, !dbg !4165

for.cond17:                                       ; preds = %for.cond17, %if.then16
  br label %for.cond17, !dbg !4166, !llvm.loop !4169

if.end18:                                         ; preds = %if.end11
  %add = add i32 %umul.val, 80, !dbg !4158
  %call = call i8* @pvPortMalloc(i32 %add) #18, !dbg !4171
  %3 = bitcast i8* %call to %struct.QueueDefinition*, !dbg !4172
  call void @llvm.dbg.value(metadata %struct.QueueDefinition* %3, metadata !4128, metadata !DIExpression()), !dbg !4131
  %cmp20.not = icmp eq i8* %call, null, !dbg !4173
  br i1 %cmp20.not, label %if.end23, label %if.then22, !dbg !4175

if.then22:                                        ; preds = %if.end18
  call void @llvm.dbg.value(metadata i8* %call, metadata !4130, metadata !DIExpression()), !dbg !4131
  %add.ptr = getelementptr inbounds i8, i8* %call, i32 80, !dbg !4176
  call void @llvm.dbg.value(metadata i8* %add.ptr, metadata !4130, metadata !DIExpression()), !dbg !4131
  call fastcc void @prvInitialiseNewQueue(i32 %uxQueueLength, i32 %uxItemSize, i8* nonnull %add.ptr, i8 zeroext %ucQueueType, %struct.QueueDefinition* nonnull %3), !dbg !4178
  br label %if.end23, !dbg !4179

if.end23:                                         ; preds = %if.then22, %if.end18
  ret %struct.QueueDefinition* %3, !dbg !4180
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i32, i1 } @llvm.umul.with.overflow.i32(i32 %0, i32 %1) #1 section ".csection13"

; Function Attrs: nounwind
define internal fastcc void @prvInitialiseNewQueue(i32 %uxQueueLength, i32 %uxItemSize, i8* %pucQueueStorage, i8 zeroext %ucQueueType, %struct.QueueDefinition* %pxNewQueue) unnamed_addr #0 section ".csection3" !dbg !4181 {
entry:
  call void @llvm.dbg.value(metadata i32 %uxQueueLength, metadata !4185, metadata !DIExpression()), !dbg !4190
  call void @llvm.dbg.value(metadata i32 %uxItemSize, metadata !4186, metadata !DIExpression()), !dbg !4190
  call void @llvm.dbg.value(metadata i8* %pucQueueStorage, metadata !4187, metadata !DIExpression()), !dbg !4190
  call void @llvm.dbg.value(metadata i8 %ucQueueType, metadata !4188, metadata !DIExpression()), !dbg !4190
  call void @llvm.dbg.value(metadata %struct.QueueDefinition* %pxNewQueue, metadata !4189, metadata !DIExpression()), !dbg !4190
  %cmp = icmp eq i32 %uxItemSize, 0, !dbg !4191
  br i1 %cmp, label %if.then, label %if.else, !dbg !4193

if.then:                                          ; preds = %entry
  %0 = bitcast %struct.QueueDefinition* %pxNewQueue to %struct.QueueDefinition**, !dbg !4194
  store %struct.QueueDefinition* %pxNewQueue, %struct.QueueDefinition** %0, align 4, !dbg !4194, !tbaa !4068
  br label %if.end, !dbg !4196

if.else:                                          ; preds = %entry
  %pcHead1 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %pxNewQueue, i32 0, i32 0, !dbg !4197
  store i8* %pucQueueStorage, i8** %pcHead1, align 4, !dbg !4199, !tbaa !4068
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %uxLength = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %pxNewQueue, i32 0, i32 6, !dbg !4200
  store i32 %uxQueueLength, i32* %uxLength, align 4, !dbg !4201, !tbaa !4071
  %uxItemSize2 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %pxNewQueue, i32 0, i32 7, !dbg !4202
  store i32 %uxItemSize, i32* %uxItemSize2, align 4, !dbg !4203, !tbaa !4073
  %call = call i32 @xQueueGenericReset(%struct.QueueDefinition* %pxNewQueue, i32 1), !dbg !4204
  %ucQueueType3 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %pxNewQueue, i32 0, i32 11, !dbg !4205
  store i8 %ucQueueType, i8* %ucQueueType3, align 4, !dbg !4207, !tbaa !4208
  ret void, !dbg !4209
}

; Function Attrs: nounwind
define dso_local %struct.QueueDefinition* @xQueueCreateMutex(i8 zeroext %ucQueueType) local_unnamed_addr #0 section ".csection3" !dbg !4210 {
entry:
  call void @llvm.dbg.value(metadata i8 %ucQueueType, metadata !4214, metadata !DIExpression()), !dbg !4218
  call void @llvm.dbg.value(metadata i32 1, metadata !4216, metadata !DIExpression()), !dbg !4218
  call void @llvm.dbg.value(metadata i32 0, metadata !4217, metadata !DIExpression()), !dbg !4218
  %call = call %struct.QueueDefinition* @xQueueGenericCreate(i32 1, i32 0, i8 zeroext %ucQueueType), !dbg !4219
  call void @llvm.dbg.value(metadata %struct.QueueDefinition* %call, metadata !4215, metadata !DIExpression()), !dbg !4218
  call fastcc void @prvInitialiseMutex(%struct.QueueDefinition* %call), !dbg !4220
  ret %struct.QueueDefinition* %call, !dbg !4221
}

; Function Attrs: nounwind
define internal fastcc void @prvInitialiseMutex(%struct.QueueDefinition* %pxNewQueue) unnamed_addr #0 section ".csection3" !dbg !4222 {
entry:
  call void @llvm.dbg.value(metadata %struct.QueueDefinition* %pxNewQueue, metadata !4226, metadata !DIExpression()), !dbg !4227
  %cmp.not = icmp eq %struct.QueueDefinition* %pxNewQueue, null, !dbg !4228
  br i1 %cmp.not, label %if.end, label %if.then, !dbg !4230

if.then:                                          ; preds = %entry
  %u = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %pxNewQueue, i32 0, i32 2, !dbg !4231
  %xMutexHolder = bitcast %union.anon* %u to %struct.tskTaskControlBlock**, !dbg !4233
  store %struct.tskTaskControlBlock* null, %struct.tskTaskControlBlock** %xMutexHolder, align 4, !dbg !4234, !tbaa !1246
  %pcHead = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %pxNewQueue, i32 0, i32 0, !dbg !4235
  store i8* null, i8** %pcHead, align 4, !dbg !4236, !tbaa !4068
  %uxRecursiveCallCount = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %pxNewQueue, i32 0, i32 2, i32 0, i32 1, !dbg !4237
  %0 = bitcast i8** %uxRecursiveCallCount to i32*, !dbg !4237
  store i32 0, i32* %0, align 4, !dbg !4238, !tbaa !1246
  %call = call i32 @xQueueGenericSend(%struct.QueueDefinition* nonnull %pxNewQueue, i8* null, i32 0, i32 0), !dbg !4239
  br label %if.end, !dbg !4240

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !4241
}

; Function Attrs: nounwind
define dso_local i32 @xQueueGenericSend(%struct.QueueDefinition* %xQueue, i8* readonly %pvItemToQueue, i32 %xTicksToWait, i32 %xCopyPosition) local_unnamed_addr #0 section ".csection3" !dbg !4242 {
entry:
  %xTicksToWait.addr = alloca i32, align 4
  %xTimeOut = alloca %struct.xTIME_OUT, align 4
  call void @llvm.dbg.value(metadata %struct.QueueDefinition* %xQueue, metadata !4249, metadata !DIExpression()), !dbg !4262
  call void @llvm.dbg.value(metadata i8* %pvItemToQueue, metadata !4250, metadata !DIExpression()), !dbg !4262
  call void @llvm.dbg.value(metadata i32 %xTicksToWait, metadata !4251, metadata !DIExpression()), !dbg !4262
  store i32 %xTicksToWait, i32* %xTicksToWait.addr, align 4, !tbaa !1105
  call void @llvm.dbg.value(metadata i32 %xCopyPosition, metadata !4252, metadata !DIExpression()), !dbg !4262
  call void @llvm.dbg.value(metadata i32 0, metadata !4253, metadata !DIExpression()), !dbg !4262
  %0 = bitcast %struct.xTIME_OUT* %xTimeOut to i8*, !dbg !4263
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #18, !dbg !4263
  call void @llvm.dbg.declare(metadata %struct.xTIME_OUT* %xTimeOut, metadata !4255, metadata !DIExpression()), !dbg !4264
  call void @llvm.dbg.value(metadata %struct.QueueDefinition* %xQueue, metadata !4261, metadata !DIExpression()), !dbg !4262
  %cmp = icmp eq %struct.QueueDefinition* %xQueue, null, !dbg !4265
  br i1 %cmp, label %if.then, label %if.end, !dbg !4267

if.then:                                          ; preds = %entry
  %1 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #18, !dbg !4268, !srcloc !4057
  call void @llvm.dbg.value(metadata i32 %1, metadata !4054, metadata !DIExpression()) #18, !dbg !4271
  br label %for.cond, !dbg !4272

for.cond:                                         ; preds = %for.cond, %if.then
  br label %for.cond, !dbg !4273, !llvm.loop !4276

if.end:                                           ; preds = %entry
  %cmp1 = icmp eq i8* %pvItemToQueue, null, !dbg !4278
  br i1 %cmp1, label %land.rhs, label %if.end6, !dbg !4278

land.rhs:                                         ; preds = %if.end
  %uxItemSize = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %xQueue, i32 0, i32 7, !dbg !4278
  %2 = load i32, i32* %uxItemSize, align 4, !dbg !4278, !tbaa !4073
  %cmp2.not = icmp eq i32 %2, 0, !dbg !4278
  br i1 %cmp2.not, label %if.end6, label %if.then4, !dbg !4280

if.then4:                                         ; preds = %land.rhs
  %3 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #18, !dbg !4281, !srcloc !4057
  call void @llvm.dbg.value(metadata i32 %3, metadata !4054, metadata !DIExpression()) #18, !dbg !4284
  br label %for.cond5, !dbg !4285

for.cond5:                                        ; preds = %for.cond5, %if.then4
  br label %for.cond5, !dbg !4286, !llvm.loop !4289

if.end6:                                          ; preds = %land.rhs, %if.end
  %cmp7 = icmp eq i32 %xCopyPosition, 2, !dbg !4291
  br i1 %cmp7, label %land.rhs8, label %if.end16, !dbg !4291

land.rhs8:                                        ; preds = %if.end6
  %uxLength = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %xQueue, i32 0, i32 6, !dbg !4291
  %4 = load i32, i32* %uxLength, align 4, !dbg !4291, !tbaa !4071
  %cmp9.not = icmp eq i32 %4, 1, !dbg !4291
  br i1 %cmp9.not, label %if.end16, label %if.then14, !dbg !4293

if.then14:                                        ; preds = %land.rhs8
  %5 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #18, !dbg !4294, !srcloc !4057
  call void @llvm.dbg.value(metadata i32 %5, metadata !4054, metadata !DIExpression()) #18, !dbg !4297
  br label %for.cond15, !dbg !4298

for.cond15:                                       ; preds = %for.cond15, %if.then14
  br label %for.cond15, !dbg !4299, !llvm.loop !4302

if.end16:                                         ; preds = %land.rhs8, %if.end6
  %call = call i32 @icall_arg0(i32 0, i32 ()* @xTaskGetSchedulerState), !dbg !4304
  %cmp17 = icmp eq i32 %call, 0, !dbg !4304
  %6 = load i32, i32* %xTicksToWait.addr, align 4, !dbg !4304
  call void @llvm.dbg.value(metadata i32 %6, metadata !4251, metadata !DIExpression()), !dbg !4262
  %cmp19 = icmp ne i32 %6, 0, !dbg !4304
  %cmp23 = and i1 %cmp17, %cmp19, !dbg !4304
  br i1 %cmp23, label %if.then24, label %for.cond27.preheader, !dbg !4307

for.cond27.preheader:                             ; preds = %if.end16
  %uxMessagesWaiting = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %xQueue, i32 0, i32 5
  %uxLength28 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %xQueue, i32 0, i32 6
  %cRxLock = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %xQueue, i32 0, i32 8
  %cTxLock = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %xQueue, i32 0, i32 9
  %xTasksWaitingToSend = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %xQueue, i32 0, i32 3
  br label %for.cond27, !dbg !4308

if.then24:                                        ; preds = %if.end16
  %7 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #18, !dbg !4310, !srcloc !4057
  call void @llvm.dbg.value(metadata i32 %7, metadata !4054, metadata !DIExpression()) #18, !dbg !4313
  br label %for.cond25, !dbg !4314

for.cond25:                                       ; preds = %for.cond25, %if.then24
  br label %for.cond25, !dbg !4315, !llvm.loop !4318

for.cond27:                                       ; preds = %if.end86, %for.cond27.preheader
  %cmp51 = phi i1 [ false, %if.end86 ], [ true, %for.cond27.preheader ], !dbg !4262
  call void @llvm.dbg.value(metadata i32 undef, metadata !4253, metadata !DIExpression()), !dbg !4262
  call void @xcall_arg0(i32 0, void ()* @vPortEnterCritical), !dbg !4320
  %8 = load volatile i32, i32* %uxMessagesWaiting, align 4, !dbg !4323, !tbaa !4080
  %9 = load i32, i32* %uxLength28, align 4, !dbg !4326, !tbaa !4071
  %cmp29 = icmp ult i32 %8, %9, !dbg !4327
  %or.cond = or i1 %cmp7, %cmp29, !dbg !4328
  br i1 %or.cond, label %if.then31, label %if.else47, !dbg !4328

if.then31:                                        ; preds = %for.cond27
  %call32 = call fastcc i32 @prvCopyDataToQueue(%struct.QueueDefinition* nonnull %xQueue, i8* %pvItemToQueue, i32 %xCopyPosition), !dbg !4329
  call void @llvm.dbg.value(metadata i32 %call32, metadata !4254, metadata !DIExpression()), !dbg !4262
  %xTasksWaitingToReceive = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %xQueue, i32 0, i32 4, !dbg !4332
  %uxNumberOfItems = getelementptr inbounds %struct.xLIST, %struct.xLIST* %xTasksWaitingToReceive, i32 0, i32 0, !dbg !4332
  %10 = load volatile i32, i32* %uxNumberOfItems, align 4, !dbg !4332, !tbaa !4334
  %cmp33.not = icmp eq i32 %10, 0, !dbg !4332
  br i1 %cmp33.not, label %if.else41, label %if.then35, !dbg !4335

if.then35:                                        ; preds = %if.then31
  %call37 = call i32 @icall_arg1p(i32 0, i8* bitcast (i32 (%struct.xLIST*)* @xTaskRemoveFromEventList to i8*), i8* %11, i32 ptrtoint (%struct.xLIST* getelementptr (%struct.xLIST, %struct.xLIST* null, i32 1) to i32)), !dbg !4336
  %cmp38.not = icmp eq i32 %call37, 0, !dbg !4339
  br i1 %cmp38.not, label %if.end46, label %if.then39, !dbg !4340
  %11 = bitcast %struct.xLIST* %xTasksWaitingToReceive to i8*

if.then39:                                        ; preds = %if.then35
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !4341, !tbaa !1105
  call void asm sideeffect "dsb", "~{memory}"() #18, !dbg !4341, !srcloc !4344
  call void asm sideeffect "isb", ""() #18, !dbg !4341, !srcloc !4345
  br label %if.end46, !dbg !4346

if.else41:                                        ; preds = %if.then31
  %cmp42.not = icmp eq i32 %call32, 0, !dbg !4347
  br i1 %cmp42.not, label %if.end46, label %if.then43, !dbg !4349

if.then43:                                        ; preds = %if.else41
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !4350, !tbaa !1105
  call void asm sideeffect "dsb", "~{memory}"() #18, !dbg !4350, !srcloc !4353
  call void asm sideeffect "isb", ""() #18, !dbg !4350, !srcloc !4354
  br label %if.end46, !dbg !4355

if.end46:                                         ; preds = %if.then43, %if.else41, %if.then39, %if.then35
  call void @xcall_arg0(i32 0, void ()* @vPortExitCritical), !dbg !4356
  br label %cleanup, !dbg !4357

if.else47:                                        ; preds = %for.cond27
  %12 = load i32, i32* %xTicksToWait.addr, align 4, !dbg !4358, !tbaa !1105
  call void @llvm.dbg.value(metadata i32 %12, metadata !4251, metadata !DIExpression()), !dbg !4262
  %cmp48 = icmp eq i32 %12, 0, !dbg !4361
  br i1 %cmp48, label %if.then49, label %if.else50, !dbg !4362

if.then49:                                        ; preds = %if.else47
  call void @xcall_arg0(i32 0, void ()* @vPortExitCritical), !dbg !4363
  br label %cleanup, !dbg !4365

if.else50:                                        ; preds = %if.else47
  br i1 %cmp51, label %if.then52, label %if.end56, !dbg !4366

if.then52:                                        ; preds = %if.else50
  call void @xcall_arg1p(i32 0, i8* bitcast (void (%struct.xTIME_OUT*)* @vTaskInternalSetTimeOutState to i8*), i8* %13, i32 mul nuw (i32 ptrtoint (i32* getelementptr (i32, i32* null, i32 1) to i32), i32 2)), !dbg !4367
  call void @llvm.dbg.value(metadata i32 1, metadata !4253, metadata !DIExpression()), !dbg !4262
  br label %if.end56, !dbg !4370
  %13 = bitcast %struct.xTIME_OUT* %xTimeOut to i8*

if.end56:                                         ; preds = %if.then52, %if.else50
  call void @llvm.dbg.value(metadata i32 1, metadata !4253, metadata !DIExpression()), !dbg !4262
  call void @xcall_arg0(i32 0, void ()* @vPortExitCritical), !dbg !4371
  call void @vTaskSuspendAll() #18, !dbg !4372
  call void @xcall_arg0(i32 0, void ()* @vPortEnterCritical), !dbg !4373
  %14 = load volatile i8, i8* %cRxLock, align 4, !dbg !4374, !tbaa !4091
  %cmp57 = icmp eq i8 %14, -1, !dbg !4374
  br i1 %cmp57, label %if.then59, label %if.end61, !dbg !4377

if.then59:                                        ; preds = %if.end56
  store volatile i8 0, i8* %cRxLock, align 4, !dbg !4378, !tbaa !4091
  br label %if.end61, !dbg !4378

if.end61:                                         ; preds = %if.then59, %if.end56
  %15 = load volatile i8, i8* %cTxLock, align 1, !dbg !4380, !tbaa !4094
  %cmp63 = icmp eq i8 %15, -1, !dbg !4380
  br i1 %cmp63, label %if.then65, label %if.end67, !dbg !4377

if.then65:                                        ; preds = %if.end61
  store volatile i8 0, i8* %cTxLock, align 1, !dbg !4382, !tbaa !4094
  br label %if.end67, !dbg !4382

if.end67:                                         ; preds = %if.then65, %if.end61
  call void @xcall_arg0(i32 0, void ()* @vPortExitCritical), !dbg !4373
  call void @llvm.dbg.value(metadata i32* %xTicksToWait.addr, metadata !4251, metadata !DIExpression(DW_OP_deref)), !dbg !4262
  %call68 = call i32 @xTaskCheckForTimeOut(%struct.xTIME_OUT* nonnull %xTimeOut, i32* nonnull %xTicksToWait.addr) #18, !dbg !4384
  %cmp69 = icmp eq i32 %call68, 0, !dbg !4386
  br i1 %cmp69, label %if.then71, label %if.else84, !dbg !4387

if.then71:                                        ; preds = %if.end67
  %call72 = call fastcc i32 @prvIsQueueFull(%struct.QueueDefinition* nonnull %xQueue), !dbg !4388
  %cmp73.not = icmp eq i32 %call72, 0, !dbg !4391
  br i1 %cmp73.not, label %if.else81, label %if.then75, !dbg !4392

if.then75:                                        ; preds = %if.then71
  %16 = load i32, i32* %xTicksToWait.addr, align 4, !dbg !4393, !tbaa !1105
  call void @llvm.dbg.value(metadata i32 %16, metadata !4251, metadata !DIExpression()), !dbg !4262
  call void @vTaskPlaceOnEventList(%struct.xLIST* nonnull %xTasksWaitingToSend, i32 %16) #18, !dbg !4395
  call fastcc void @prvUnlockQueue(%struct.QueueDefinition* nonnull %xQueue), !dbg !4396
  %call76 = call i32 @icall_arg0(i32 0, i32 ()* @xTaskResumeAll), !dbg !4397
  %cmp77 = icmp eq i32 %call76, 0, !dbg !4399
  br i1 %cmp77, label %if.then79, label %if.end86, !dbg !4400

if.then79:                                        ; preds = %if.then75
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !4401, !tbaa !1105
  call void asm sideeffect "dsb", "~{memory}"() #18, !dbg !4401, !srcloc !4404
  call void asm sideeffect "isb", ""() #18, !dbg !4401, !srcloc !4405
  br label %if.end86, !dbg !4406

if.else81:                                        ; preds = %if.then71
  call fastcc void @prvUnlockQueue(%struct.QueueDefinition* nonnull %xQueue), !dbg !4407
  %call82 = call i32 @icall_arg0(i32 0, i32 ()* @xTaskResumeAll), !dbg !4409
  br label %if.end86

if.else84:                                        ; preds = %if.end67
  call fastcc void @prvUnlockQueue(%struct.QueueDefinition* nonnull %xQueue), !dbg !4410
  %call85 = call i32 @icall_arg0(i32 0, i32 ()* @xTaskResumeAll), !dbg !4412
  br label %cleanup, !dbg !4413

if.end86:                                         ; preds = %if.else81, %if.then79, %if.then75
  br label %for.cond27, !dbg !4414, !llvm.loop !4415

cleanup:                                          ; preds = %if.else84, %if.then49, %if.end46
  %retval.0 = phi i32 [ 1, %if.end46 ], [ 0, %if.then49 ], [ 0, %if.else84 ], !dbg !4417
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #18, !dbg !4418
  ret i32 %retval.0, !dbg !4418
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata %0, metadata %1, metadata %2) #1 section ".csection13"

; Function Attrs: nounwind
define internal fastcc i32 @prvCopyDataToQueue(%struct.QueueDefinition* %pxQueue, i8* nocapture readonly %pvItemToQueue, i32 %xPosition) unnamed_addr #0 section ".csection3" !dbg !4419 {
entry:
  call void @llvm.dbg.value(metadata %struct.QueueDefinition* %pxQueue, metadata !4423, metadata !DIExpression()), !dbg !4428
  call void @llvm.dbg.value(metadata i8* %pvItemToQueue, metadata !4424, metadata !DIExpression()), !dbg !4428
  call void @llvm.dbg.value(metadata i32 %xPosition, metadata !4425, metadata !DIExpression()), !dbg !4428
  call void @llvm.dbg.value(metadata i32 0, metadata !4426, metadata !DIExpression()), !dbg !4428
  %uxMessagesWaiting1 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %pxQueue, i32 0, i32 5, !dbg !4429
  %0 = load volatile i32, i32* %uxMessagesWaiting1, align 4, !dbg !4429, !tbaa !4080
  call void @llvm.dbg.value(metadata i32 %0, metadata !4427, metadata !DIExpression()), !dbg !4428
  %uxItemSize = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %pxQueue, i32 0, i32 7, !dbg !4430
  %1 = load i32, i32* %uxItemSize, align 4, !dbg !4430, !tbaa !4073
  %cmp = icmp eq i32 %1, 0, !dbg !4432
  br i1 %cmp, label %if.then, label %if.else7, !dbg !4433

if.then:                                          ; preds = %entry
  %pcHead = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %pxQueue, i32 0, i32 0, !dbg !4434
  %2 = load i8*, i8** %pcHead, align 4, !dbg !4434, !tbaa !4068
  %cmp2 = icmp eq i8* %2, null, !dbg !4438
  br i1 %cmp2, label %if.then3, label %if.end56, !dbg !4439

if.then3:                                         ; preds = %if.then
  %u = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %pxQueue, i32 0, i32 2, !dbg !4440
  %xMutexHolder = bitcast %union.anon* %u to %struct.tskTaskControlBlock**, !dbg !4442
  %3 = load %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** %xMutexHolder, align 4, !dbg !4442, !tbaa !1246
  %call = call i32 @icall_arg1p(i32 0, i8* bitcast (i32 (%struct.tskTaskControlBlock*)* @xTaskPriorityDisinherit to i8*), i8* %4, i32 ptrtoint (%struct.tskTaskControlBlock* getelementptr (%struct.tskTaskControlBlock, %struct.tskTaskControlBlock* null, i32 1) to i32)), !dbg !4443
  call void @llvm.dbg.value(metadata i32 %call, metadata !4426, metadata !DIExpression()), !dbg !4428
  store %struct.tskTaskControlBlock* null, %struct.tskTaskControlBlock** %xMutexHolder, align 4, !dbg !4444, !tbaa !1246
  br label %if.end56, !dbg !4445
  %4 = bitcast %struct.tskTaskControlBlock* %3 to i8*

if.else7:                                         ; preds = %entry
  %cmp8 = icmp eq i32 %xPosition, 0, !dbg !4446
  br i1 %cmp8, label %if.then9, label %if.else21, !dbg !4448

if.then9:                                         ; preds = %if.else7
  %pcWriteTo = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %pxQueue, i32 0, i32 1, !dbg !4449
  %5 = load i8*, i8** %pcWriteTo, align 4, !dbg !4449, !tbaa !4083
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 1 %5, i8* align 1 %pvItemToQueue, i32 %1, i1 false), !dbg !4451
  %6 = load i32, i32* %uxItemSize, align 4, !dbg !4452, !tbaa !4073
  %7 = load i8*, i8** %pcWriteTo, align 4, !dbg !4453, !tbaa !4083
  %add.ptr = getelementptr inbounds i8, i8* %7, i32 %6, !dbg !4453
  store i8* %add.ptr, i8** %pcWriteTo, align 4, !dbg !4453, !tbaa !4083
  %pcTail = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %pxQueue, i32 0, i32 2, i32 0, i32 0, !dbg !4454
  %8 = load i8*, i8** %pcTail, align 4, !dbg !4454, !tbaa !1246
  %cmp15.not = icmp ult i8* %add.ptr, %8, !dbg !4456
  br i1 %cmp15.not, label %if.end56, label %if.then16, !dbg !4457

if.then16:                                        ; preds = %if.then9
  %pcHead17 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %pxQueue, i32 0, i32 0, !dbg !4458
  %9 = load i8*, i8** %pcHead17, align 4, !dbg !4458, !tbaa !4068
  store i8* %9, i8** %pcWriteTo, align 4, !dbg !4460, !tbaa !4083
  br label %if.end56, !dbg !4461

if.else21:                                        ; preds = %if.else7
  %pcReadFrom = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %pxQueue, i32 0, i32 2, i32 0, i32 1, !dbg !4462
  %10 = load i8*, i8** %pcReadFrom, align 4, !dbg !4462, !tbaa !1246
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 1 %10, i8* align 1 %pvItemToQueue, i32 %1, i1 false), !dbg !4464
  %11 = load i32, i32* %uxItemSize, align 4, !dbg !4465, !tbaa !4073
  %12 = load i8*, i8** %pcReadFrom, align 4, !dbg !4466, !tbaa !1246
  %idx.neg = sub i32 0, %11, !dbg !4466
  %add.ptr29 = getelementptr inbounds i8, i8* %12, i32 %idx.neg, !dbg !4466
  store i8* %add.ptr29, i8** %pcReadFrom, align 4, !dbg !4466, !tbaa !1246
  %pcHead33 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %pxQueue, i32 0, i32 0, !dbg !4467
  %13 = load i8*, i8** %pcHead33, align 4, !dbg !4467, !tbaa !4068
  %cmp34 = icmp ult i8* %add.ptr29, %13, !dbg !4469
  br i1 %cmp34, label %if.then35, label %if.end46, !dbg !4470

if.then35:                                        ; preds = %if.else21
  %pcTail38 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %pxQueue, i32 0, i32 2, i32 0, i32 0, !dbg !4471
  %14 = load i8*, i8** %pcTail38, align 4, !dbg !4471, !tbaa !1246
  %add.ptr41 = getelementptr inbounds i8, i8* %14, i32 %idx.neg, !dbg !4473
  store i8* %add.ptr41, i8** %pcReadFrom, align 4, !dbg !4474, !tbaa !1246
  br label %if.end46, !dbg !4475

if.end46:                                         ; preds = %if.then35, %if.else21
  %cmp47 = icmp eq i32 %xPosition, 2, !dbg !4476
  %cmp49 = icmp ne i32 %0, 0
  %or.cond = and i1 %cmp47, %cmp49, !dbg !4478
  %dec = sext i1 %or.cond to i32, !dbg !4478
  %spec.select = add i32 %0, %dec, !dbg !4478
  br label %if.end56, !dbg !4478

if.end56:                                         ; preds = %if.end46, %if.then16, %if.then9, %if.then3, %if.then
  %xReturn.0 = phi i32 [ %call, %if.then3 ], [ 0, %if.then ], [ 0, %if.then16 ], [ 0, %if.then9 ], [ 0, %if.end46 ], !dbg !4428
  %uxMessagesWaiting.0 = phi i32 [ %0, %if.then3 ], [ %0, %if.then ], [ %0, %if.then16 ], [ %0, %if.then9 ], [ %spec.select, %if.end46 ], !dbg !4428
  call void @llvm.dbg.value(metadata i32 %uxMessagesWaiting.0, metadata !4427, metadata !DIExpression()), !dbg !4428
  call void @llvm.dbg.value(metadata i32 %xReturn.0, metadata !4426, metadata !DIExpression()), !dbg !4428
  %add = add i32 %uxMessagesWaiting.0, 1, !dbg !4479
  store volatile i32 %add, i32* %uxMessagesWaiting1, align 4, !dbg !4480, !tbaa !4080
  ret i32 %xReturn.0, !dbg !4481
}

; Function Attrs: nounwind
define internal fastcc i32 @prvIsQueueFull(%struct.QueueDefinition* %pxQueue) unnamed_addr #0 section ".csection3" !dbg !4482 {
entry:
  call void @llvm.dbg.value(metadata %struct.QueueDefinition* %pxQueue, metadata !4488, metadata !DIExpression()), !dbg !4490
  call void @xcall_arg0(i32 0, void ()* @vPortEnterCritical), !dbg !4491
  %uxMessagesWaiting = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %pxQueue, i32 0, i32 5, !dbg !4492
  %0 = load volatile i32, i32* %uxMessagesWaiting, align 4, !dbg !4492, !tbaa !4080
  %uxLength = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %pxQueue, i32 0, i32 6, !dbg !4495
  %1 = load i32, i32* %uxLength, align 4, !dbg !4495, !tbaa !4071
  %cmp = icmp eq i32 %0, %1, !dbg !4496
  %xReturn.0 = zext i1 %cmp to i32, !dbg !4497
  call void @llvm.dbg.value(metadata i32 %xReturn.0, metadata !4489, metadata !DIExpression()), !dbg !4490
  call void @xcall_arg0(i32 0, void ()* @vPortExitCritical), !dbg !4498
  ret i32 %xReturn.0, !dbg !4499
}

; Function Attrs: nounwind
define internal fastcc void @prvUnlockQueue(%struct.QueueDefinition* %pxQueue) unnamed_addr #0 section ".csection3" !dbg !4500 {
entry:
  call void @llvm.dbg.value(metadata %struct.QueueDefinition* %pxQueue, metadata !4504, metadata !DIExpression()), !dbg !4509
  call void @xcall_arg0(i32 0, void ()* @vPortEnterCritical), !dbg !4510
  %cTxLock1 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %pxQueue, i32 0, i32 9, !dbg !4511
  %0 = load volatile i8, i8* %cTxLock1, align 1, !dbg !4511, !tbaa !4094
  call void @llvm.dbg.value(metadata i8 %0, metadata !4505, metadata !DIExpression()), !dbg !4512
  %xTasksWaitingToReceive = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %pxQueue, i32 0, i32 4, !dbg !4513
  %uxNumberOfItems = getelementptr inbounds %struct.xLIST, %struct.xLIST* %xTasksWaitingToReceive, i32 0, i32 0, !dbg !4513
  call void @llvm.dbg.value(metadata i8 %0, metadata !4505, metadata !DIExpression()), !dbg !4512
  %cmp50 = icmp sgt i8 %0, 0, !dbg !4517
  br i1 %cmp50, label %while.body, label %while.end, !dbg !4518

while.body:                                       ; preds = %if.end12, %entry
  %cTxLock.051 = phi i8 [ %dec, %if.end12 ], [ %0, %entry ]
  call void @llvm.dbg.value(metadata i8 %cTxLock.051, metadata !4505, metadata !DIExpression()), !dbg !4512
  %1 = load volatile i32, i32* %uxNumberOfItems, align 4, !dbg !4513, !tbaa !4334
  %cmp3.not = icmp eq i32 %1, 0, !dbg !4513
  br i1 %cmp3.not, label %while.end, label %if.then, !dbg !4519

if.then:                                          ; preds = %while.body
  %call = call i32 @icall_arg1p(i32 0, i8* bitcast (i32 (%struct.xLIST*)* @xTaskRemoveFromEventList to i8*), i8* %2, i32 ptrtoint (%struct.xLIST* getelementptr (%struct.xLIST, %struct.xLIST* null, i32 1) to i32)), !dbg !4520
  %cmp8.not = icmp eq i32 %call, 0, !dbg !4523
  br i1 %cmp8.not, label %if.end12, label %if.then10, !dbg !4524
  %2 = bitcast %struct.xLIST* %xTasksWaitingToReceive to i8*

if.then10:                                        ; preds = %if.then
  call void @xcall_arg0(i32 0, void ()* @vTaskMissedYield), !dbg !4525
  br label %if.end12, !dbg !4527

if.end12:                                         ; preds = %if.then10, %if.then
  %dec = add nsw i8 %cTxLock.051, -1, !dbg !4528
  call void @llvm.dbg.value(metadata i8 %dec, metadata !4505, metadata !DIExpression()), !dbg !4512
  %cmp = icmp sgt i8 %cTxLock.051, 1, !dbg !4517
  br i1 %cmp, label %while.body, label %while.end, !dbg !4518, !llvm.loop !4529

while.end:                                        ; preds = %if.end12, %while.body, %entry
  store volatile i8 -1, i8* %cTxLock1, align 1, !dbg !4531, !tbaa !4094
  call void @xcall_arg0(i32 0, void ()* @vPortExitCritical), !dbg !4532
  call void @vPortEnterCritical() #18, !dbg !4533
  %cRxLock14 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %pxQueue, i32 0, i32 8, !dbg !4534
  %3 = load volatile i8, i8* %cRxLock14, align 4, !dbg !4534, !tbaa !4091
  call void @llvm.dbg.value(metadata i8 %3, metadata !4507, metadata !DIExpression()), !dbg !4535
  %xTasksWaitingToSend = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %pxQueue, i32 0, i32 3, !dbg !4536
  %uxNumberOfItems20 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %xTasksWaitingToSend, i32 0, i32 0, !dbg !4536
  call void @llvm.dbg.value(metadata i8 %3, metadata !4507, metadata !DIExpression()), !dbg !4535
  %cmp1748 = icmp sgt i8 %3, 0, !dbg !4539
  br i1 %cmp1748, label %while.body19, label %while.end37, !dbg !4540

while.body19:                                     ; preds = %if.end33, %while.end
  %cRxLock.049 = phi i8 [ %dec34, %if.end33 ], [ %3, %while.end ]
  call void @llvm.dbg.value(metadata i8 %cRxLock.049, metadata !4507, metadata !DIExpression()), !dbg !4535
  %4 = load volatile i32, i32* %uxNumberOfItems20, align 4, !dbg !4536, !tbaa !4101
  %cmp21.not = icmp eq i32 %4, 0, !dbg !4536
  br i1 %cmp21.not, label %while.end37, label %if.then26, !dbg !4541

if.then26:                                        ; preds = %while.body19
  %call28 = call i32 @icall_arg1p(i32 0, i8* bitcast (i32 (%struct.xLIST*)* @xTaskRemoveFromEventList to i8*), i8* %5, i32 ptrtoint (%struct.xLIST* getelementptr (%struct.xLIST, %struct.xLIST* null, i32 1) to i32)), !dbg !4542
  %cmp29.not = icmp eq i32 %call28, 0, !dbg !4545
  br i1 %cmp29.not, label %if.end33, label %if.then31, !dbg !4546
  %5 = bitcast %struct.xLIST* %xTasksWaitingToSend to i8*

if.then31:                                        ; preds = %if.then26
  call void @xcall_arg0(i32 0, void ()* @vTaskMissedYield), !dbg !4547
  br label %if.end33, !dbg !4549

if.end33:                                         ; preds = %if.then31, %if.then26
  %dec34 = add nsw i8 %cRxLock.049, -1, !dbg !4550
  call void @llvm.dbg.value(metadata i8 %dec34, metadata !4507, metadata !DIExpression()), !dbg !4535
  %cmp17 = icmp sgt i8 %cRxLock.049, 1, !dbg !4539
  br i1 %cmp17, label %while.body19, label %while.end37, !dbg !4540, !llvm.loop !4551

while.end37:                                      ; preds = %if.end33, %while.body19, %while.end
  store volatile i8 -1, i8* %cRxLock14, align 4, !dbg !4553, !tbaa !4091
  call void @xcall_arg0(i32 0, void ()* @vPortExitCritical), !dbg !4554
  ret void, !dbg !4555
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i32(i8* noalias nocapture writeonly %0, i8* noalias nocapture readonly %1, i32 %2, i1 immarg %3) #11 section ".csection13"

; Function Attrs: nounwind
define dso_local i32 @xQueueGiveMutexRecursive(%struct.QueueDefinition* %xMutex) local_unnamed_addr #0 section ".csection3" !dbg !4556 {
entry:
  call void @llvm.dbg.value(metadata %struct.QueueDefinition* %xMutex, metadata !4560, metadata !DIExpression()), !dbg !4563
  call void @llvm.dbg.value(metadata %struct.QueueDefinition* %xMutex, metadata !4562, metadata !DIExpression()), !dbg !4563
  %cmp = icmp eq %struct.QueueDefinition* %xMutex, null, !dbg !4564
  br i1 %cmp, label %if.then, label %if.end, !dbg !4566

if.then:                                          ; preds = %entry
  %0 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #18, !dbg !4567, !srcloc !4057
  call void @llvm.dbg.value(metadata i32 %0, metadata !4054, metadata !DIExpression()) #18, !dbg !4570
  br label %for.cond, !dbg !4571

for.cond:                                         ; preds = %for.cond, %if.then
  br label %for.cond, !dbg !4572, !llvm.loop !4575

if.end:                                           ; preds = %entry
  %u = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %xMutex, i32 0, i32 2, !dbg !4577
  %xMutexHolder = bitcast %union.anon* %u to %struct.tskTaskControlBlock**, !dbg !4579
  %1 = load %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** %xMutexHolder, align 4, !dbg !4579, !tbaa !1246
  %call = call %struct.tskTaskControlBlock* @xTaskGetCurrentTaskHandle() #18, !dbg !4580
  %cmp1 = icmp eq %struct.tskTaskControlBlock* %1, %call, !dbg !4581
  br i1 %cmp1, label %if.then2, label %if.end13, !dbg !4582

if.then2:                                         ; preds = %if.end
  %uxRecursiveCallCount = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %xMutex, i32 0, i32 2, i32 0, i32 1, !dbg !4583
  %2 = bitcast i8** %uxRecursiveCallCount to i32*, !dbg !4583
  %3 = load i32, i32* %2, align 4, !dbg !4585, !tbaa !1246
  %dec = add i32 %3, -1, !dbg !4585
  store i32 %dec, i32* %2, align 4, !dbg !4585, !tbaa !1246
  %cmp8 = icmp eq i32 %dec, 0, !dbg !4586
  br i1 %cmp8, label %if.then9, label %if.end13, !dbg !4588

if.then9:                                         ; preds = %if.then2
  %call10 = call i32 @xQueueGenericSend(%struct.QueueDefinition* nonnull %xMutex, i8* null, i32 0, i32 0), !dbg !4589
  br label %if.end13, !dbg !4591

if.end13:                                         ; preds = %if.then9, %if.then2, %if.end
  %xReturn.0 = phi i32 [ 1, %if.then2 ], [ 1, %if.then9 ], [ 0, %if.end ], !dbg !4592
  call void @llvm.dbg.value(metadata i32 %xReturn.0, metadata !4561, metadata !DIExpression()), !dbg !4563
  ret i32 %xReturn.0, !dbg !4593
}

; Function Attrs: nounwind
define dso_local i32 @xQueueTakeMutexRecursive(%struct.QueueDefinition* %xMutex, i32 %xTicksToWait) local_unnamed_addr #0 section ".csection3" !dbg !4594 {
entry:
  call void @llvm.dbg.value(metadata %struct.QueueDefinition* %xMutex, metadata !4598, metadata !DIExpression()), !dbg !4602
  call void @llvm.dbg.value(metadata i32 %xTicksToWait, metadata !4599, metadata !DIExpression()), !dbg !4602
  call void @llvm.dbg.value(metadata %struct.QueueDefinition* %xMutex, metadata !4601, metadata !DIExpression()), !dbg !4602
  %cmp = icmp eq %struct.QueueDefinition* %xMutex, null, !dbg !4603
  br i1 %cmp, label %if.then, label %if.end, !dbg !4605

if.then:                                          ; preds = %entry
  %0 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #18, !dbg !4606, !srcloc !4057
  call void @llvm.dbg.value(metadata i32 %0, metadata !4054, metadata !DIExpression()) #18, !dbg !4609
  br label %for.cond, !dbg !4610

for.cond:                                         ; preds = %for.cond, %if.then
  br label %for.cond, !dbg !4611, !llvm.loop !4614

if.end:                                           ; preds = %entry
  %u = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %xMutex, i32 0, i32 2, !dbg !4616
  %xMutexHolder = bitcast %union.anon* %u to %struct.tskTaskControlBlock**, !dbg !4618
  %1 = load %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** %xMutexHolder, align 4, !dbg !4618, !tbaa !1246
  %call = call %struct.tskTaskControlBlock* @xTaskGetCurrentTaskHandle() #18, !dbg !4619
  %cmp1 = icmp eq %struct.tskTaskControlBlock* %1, %call, !dbg !4620
  br i1 %cmp1, label %if.then2, label %if.else, !dbg !4621

if.then2:                                         ; preds = %if.end
  %uxRecursiveCallCount = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %xMutex, i32 0, i32 2, i32 0, i32 1, !dbg !4622
  %2 = bitcast i8** %uxRecursiveCallCount to i32*, !dbg !4622
  %3 = load i32, i32* %2, align 4, !dbg !4624, !tbaa !1246
  %inc = add i32 %3, 1, !dbg !4624
  store i32 %inc, i32* %2, align 4, !dbg !4624, !tbaa !1246
  call void @llvm.dbg.value(metadata i32 1, metadata !4600, metadata !DIExpression()), !dbg !4602
  br label %if.end14, !dbg !4625

if.else:                                          ; preds = %if.end
  %call5 = call i32 @xQueueSemaphoreTake(%struct.QueueDefinition* nonnull %xMutex, i32 %xTicksToWait), !dbg !4626
  call void @llvm.dbg.value(metadata i32 %call5, metadata !4600, metadata !DIExpression()), !dbg !4602
  %cmp6.not = icmp eq i32 %call5, 0, !dbg !4628
  br i1 %cmp6.not, label %if.end14, label %if.then7, !dbg !4630

if.then7:                                         ; preds = %if.else
  %uxRecursiveCallCount10 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %xMutex, i32 0, i32 2, i32 0, i32 1, !dbg !4631
  %4 = bitcast i8** %uxRecursiveCallCount10 to i32*, !dbg !4631
  %5 = load i32, i32* %4, align 4, !dbg !4633, !tbaa !1246
  %inc11 = add i32 %5, 1, !dbg !4633
  store i32 %inc11, i32* %4, align 4, !dbg !4633, !tbaa !1246
  br label %if.end14, !dbg !4634

if.end14:                                         ; preds = %if.then7, %if.else, %if.then2
  %xReturn.0 = phi i32 [ 1, %if.then2 ], [ %call5, %if.then7 ], [ 0, %if.else ], !dbg !4635
  call void @llvm.dbg.value(metadata i32 %xReturn.0, metadata !4600, metadata !DIExpression()), !dbg !4602
  ret i32 %xReturn.0, !dbg !4636
}

; Function Attrs: nounwind
define dso_local i32 @xQueueSemaphoreTake(%struct.QueueDefinition* %xQueue, i32 %xTicksToWait) local_unnamed_addr #0 section ".csection3" !dbg !4637 {
entry:
  %xTicksToWait.addr = alloca i32, align 4
  %xTimeOut = alloca %struct.xTIME_OUT, align 4
  call void @llvm.dbg.value(metadata %struct.QueueDefinition* %xQueue, metadata !4639, metadata !DIExpression()), !dbg !4659
  call void @llvm.dbg.value(metadata i32 %xTicksToWait, metadata !4640, metadata !DIExpression()), !dbg !4659
  store i32 %xTicksToWait, i32* %xTicksToWait.addr, align 4, !tbaa !1105
  call void @llvm.dbg.value(metadata i32 0, metadata !4641, metadata !DIExpression()), !dbg !4659
  %0 = bitcast %struct.xTIME_OUT* %xTimeOut to i8*, !dbg !4660
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #18, !dbg !4660
  call void @llvm.dbg.declare(metadata %struct.xTIME_OUT* %xTimeOut, metadata !4642, metadata !DIExpression()), !dbg !4661
  call void @llvm.dbg.value(metadata %struct.QueueDefinition* %xQueue, metadata !4643, metadata !DIExpression()), !dbg !4659
  call void @llvm.dbg.value(metadata i32 0, metadata !4644, metadata !DIExpression()), !dbg !4659
  %cmp = icmp eq %struct.QueueDefinition* %xQueue, null, !dbg !4662
  br i1 %cmp, label %if.then, label %if.end, !dbg !4664

if.then:                                          ; preds = %entry
  %1 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #18, !dbg !4665, !srcloc !4057
  call void @llvm.dbg.value(metadata i32 %1, metadata !4054, metadata !DIExpression()) #18, !dbg !4668
  br label %for.cond, !dbg !4669

for.cond:                                         ; preds = %for.cond, %if.then
  br label %for.cond, !dbg !4670, !llvm.loop !4673

if.end:                                           ; preds = %entry
  %uxItemSize = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %xQueue, i32 0, i32 7, !dbg !4675
  %2 = load i32, i32* %uxItemSize, align 4, !dbg !4675, !tbaa !4073
  %cmp1.not = icmp eq i32 %2, 0, !dbg !4675
  br i1 %cmp1.not, label %if.end6, label %if.then4, !dbg !4677

if.then4:                                         ; preds = %if.end
  %3 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #18, !dbg !4678, !srcloc !4057
  call void @llvm.dbg.value(metadata i32 %3, metadata !4054, metadata !DIExpression()) #18, !dbg !4681
  br label %for.cond5, !dbg !4682

for.cond5:                                        ; preds = %for.cond5, %if.then4
  br label %for.cond5, !dbg !4683, !llvm.loop !4686

if.end6:                                          ; preds = %if.end
  %call = call i32 @icall_arg0(i32 0, i32 ()* @xTaskGetSchedulerState), !dbg !4688
  %cmp7 = icmp eq i32 %call, 0, !dbg !4688
  %4 = load i32, i32* %xTicksToWait.addr, align 4, !dbg !4688
  call void @llvm.dbg.value(metadata i32 %4, metadata !4640, metadata !DIExpression()), !dbg !4659
  %cmp9 = icmp ne i32 %4, 0, !dbg !4688
  %cmp11 = and i1 %cmp7, %cmp9, !dbg !4688
  br i1 %cmp11, label %if.then13, label %for.cond16.preheader, !dbg !4691

for.cond16.preheader:                             ; preds = %if.end6
  %uxMessagesWaiting = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %xQueue, i32 0, i32 5
  %pcHead = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %xQueue, i32 0, i32 0
  %u = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %xQueue, i32 0, i32 2
  %xMutexHolder = bitcast %union.anon* %u to %struct.tskTaskControlBlock**
  %xTasksWaitingToSend = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %xQueue, i32 0, i32 3
  %uxNumberOfItems = getelementptr inbounds %struct.xLIST, %struct.xLIST* %xTasksWaitingToSend, i32 0, i32 0
  %cRxLock = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %xQueue, i32 0, i32 8
  %cTxLock = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %xQueue, i32 0, i32 9
  %pcHead79 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %xQueue, i32 0, i32 0
  %u83 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %xQueue, i32 0, i32 2
  %xMutexHolder85 = bitcast %union.anon* %u83 to %struct.tskTaskControlBlock**
  %xTasksWaitingToReceive = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %xQueue, i32 0, i32 4
  br label %for.cond16, !dbg !4692

if.then13:                                        ; preds = %if.end6
  %5 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #18, !dbg !4693, !srcloc !4057
  call void @llvm.dbg.value(metadata i32 %5, metadata !4054, metadata !DIExpression()) #18, !dbg !4696
  br label %for.cond14, !dbg !4697

for.cond14:                                       ; preds = %for.cond14, %if.then13
  br label %for.cond14, !dbg !4698, !llvm.loop !4701

for.cond16:                                       ; preds = %if.end114, %for.cond16.preheader
  %xInheritanceOccurred.0 = phi i32 [ %xInheritanceOccurred.2, %if.end114 ], [ 0, %for.cond16.preheader ], !dbg !4659
  %xEntryTimeSet.0 = phi i32 [ %xEntryTimeSet.2, %if.end114 ], [ 0, %for.cond16.preheader ], !dbg !4703
  %retval.0 = phi i32 [ %retval.1, %if.end114 ], [ undef, %for.cond16.preheader ]
  call void @llvm.dbg.value(metadata i32 %xEntryTimeSet.0, metadata !4641, metadata !DIExpression()), !dbg !4659
  call void @llvm.dbg.value(metadata i32 %xInheritanceOccurred.0, metadata !4644, metadata !DIExpression()), !dbg !4659
  call void @xcall_arg0(i32 0, void ()* @vPortEnterCritical), !dbg !4704
  %6 = load volatile i32, i32* %uxMessagesWaiting, align 4, !dbg !4705, !tbaa !4080
  call void @llvm.dbg.value(metadata i32 %6, metadata !4645, metadata !DIExpression()), !dbg !4706
  %cmp17.not = icmp eq i32 %6, 0, !dbg !4707
  br i1 %cmp17.not, label %if.else40, label %if.then19, !dbg !4709

if.then19:                                        ; preds = %for.cond16
  %sub = add i32 %6, -1, !dbg !4710
  store volatile i32 %sub, i32* %uxMessagesWaiting, align 4, !dbg !4712, !tbaa !4080
  %7 = load i8*, i8** %pcHead, align 4, !dbg !4713, !tbaa !4068
  %cmp21 = icmp eq i8* %7, null, !dbg !4716
  br i1 %cmp21, label %if.then23, label %if.end25, !dbg !4717

if.then23:                                        ; preds = %if.then19
  %call24 = call %struct.tskTaskControlBlock* @pvTaskIncrementMutexHeldCount() #18, !dbg !4718
  store %struct.tskTaskControlBlock* %call24, %struct.tskTaskControlBlock** %xMutexHolder, align 4, !dbg !4720, !tbaa !1246
  br label %if.end25, !dbg !4721

if.end25:                                         ; preds = %if.then23, %if.then19
  %8 = load volatile i32, i32* %uxNumberOfItems, align 4, !dbg !4722, !tbaa !4101
  %cmp26.not = icmp eq i32 %8, 0, !dbg !4722
  br i1 %cmp26.not, label %if.end39, label %if.then30, !dbg !4724

if.then30:                                        ; preds = %if.end25
  %call32 = call i32 @icall_arg1p(i32 0, i8* bitcast (i32 (%struct.xLIST*)* @xTaskRemoveFromEventList to i8*), i8* %9, i32 ptrtoint (%struct.xLIST* getelementptr (%struct.xLIST, %struct.xLIST* null, i32 1) to i32)), !dbg !4725
  %cmp33.not = icmp eq i32 %call32, 0, !dbg !4728
  br i1 %cmp33.not, label %if.end39, label %if.then35, !dbg !4729
  %9 = bitcast %struct.xLIST* %xTasksWaitingToSend to i8*

if.then35:                                        ; preds = %if.then30
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !4730, !tbaa !1105
  call void asm sideeffect "dsb", "~{memory}"() #18, !dbg !4730, !srcloc !4733
  call void asm sideeffect "isb", ""() #18, !dbg !4730, !srcloc !4734
  br label %if.end39, !dbg !4735

if.end39:                                         ; preds = %if.then35, %if.then30, %if.end25
  call void @xcall_arg0(i32 0, void ()* @vPortExitCritical), !dbg !4736
  br label %cleanup, !dbg !4737

if.else40:                                        ; preds = %for.cond16
  %10 = load i32, i32* %xTicksToWait.addr, align 4, !dbg !4738, !tbaa !1105
  call void @llvm.dbg.value(metadata i32 %10, metadata !4640, metadata !DIExpression()), !dbg !4659
  %cmp41 = icmp eq i32 %10, 0, !dbg !4741
  br i1 %cmp41, label %if.then43, label %if.else51, !dbg !4742

if.then43:                                        ; preds = %if.else40
  %cmp44.not = icmp eq i32 %xInheritanceOccurred.0, 0, !dbg !4743
  br i1 %cmp44.not, label %if.end50, label %if.then48, !dbg !4747

if.then48:                                        ; preds = %if.then43
  %11 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #18, !dbg !4748, !srcloc !4057
  call void @llvm.dbg.value(metadata i32 %11, metadata !4054, metadata !DIExpression()) #18, !dbg !4751
  br label %for.cond49, !dbg !4752

for.cond49:                                       ; preds = %for.cond49, %if.then48
  br label %for.cond49, !dbg !4753, !llvm.loop !4756

if.end50:                                         ; preds = %if.then43
  call void @xcall_arg0(i32 0, void ()* @vPortExitCritical), !dbg !4758
  br label %cleanup, !dbg !4759

if.else51:                                        ; preds = %if.else40
  %cmp52 = icmp eq i32 %xEntryTimeSet.0, 0, !dbg !4760
  br i1 %cmp52, label %if.then54, label %cleanup, !dbg !4762

if.then54:                                        ; preds = %if.else51
  call void @xcall_arg1p(i32 0, i8* bitcast (void (%struct.xTIME_OUT*)* @vTaskInternalSetTimeOutState to i8*), i8* %12, i32 mul nuw (i32 ptrtoint (i32* getelementptr (i32, i32* null, i32 1) to i32), i32 2)), !dbg !4763
  call void @llvm.dbg.value(metadata i32 1, metadata !4641, metadata !DIExpression()), !dbg !4659
  br label %cleanup, !dbg !4765
  %12 = bitcast %struct.xTIME_OUT* %xTimeOut to i8*

cleanup:                                          ; preds = %if.then54, %if.else51, %if.end50, %if.end39
  %xEntryTimeSet.2 = phi i32 [ %xEntryTimeSet.0, %if.end39 ], [ %xEntryTimeSet.0, %if.end50 ], [ 1, %if.else51 ], [ 1, %if.then54 ], !dbg !4659
  %cond119 = phi i1 [ false, %if.end39 ], [ false, %if.end50 ], [ true, %if.else51 ], [ true, %if.then54 ]
  %retval.1 = phi i32 [ 1, %if.end39 ], [ 0, %if.end50 ], [ %retval.0, %if.else51 ], [ %retval.0, %if.then54 ]
  call void @llvm.dbg.value(metadata i32 %xEntryTimeSet.2, metadata !4641, metadata !DIExpression()), !dbg !4659
  br i1 %cond119, label %cleanup.cont, label %cleanup115

cleanup.cont:                                     ; preds = %cleanup
  call void @xcall_arg0(i32 0, void ()* @vPortExitCritical), !dbg !4766
  call void @vTaskSuspendAll() #18, !dbg !4767
  call void @xcall_arg0(i32 0, void ()* @vPortEnterCritical), !dbg !4768
  %13 = load volatile i8, i8* %cRxLock, align 4, !dbg !4769, !tbaa !4091
  %cmp60 = icmp eq i8 %13, -1, !dbg !4769
  br i1 %cmp60, label %if.then62, label %if.end64, !dbg !4772

if.then62:                                        ; preds = %cleanup.cont
  store volatile i8 0, i8* %cRxLock, align 4, !dbg !4773, !tbaa !4091
  br label %if.end64, !dbg !4773

if.end64:                                         ; preds = %if.then62, %cleanup.cont
  %14 = load volatile i8, i8* %cTxLock, align 1, !dbg !4775, !tbaa !4094
  %cmp66 = icmp eq i8 %14, -1, !dbg !4775
  br i1 %cmp66, label %if.then68, label %if.end70, !dbg !4772

if.then68:                                        ; preds = %if.end64
  store volatile i8 0, i8* %cTxLock, align 1, !dbg !4777, !tbaa !4094
  br label %if.end70, !dbg !4777

if.end70:                                         ; preds = %if.then68, %if.end64
  call void @xcall_arg0(i32 0, void ()* @vPortExitCritical), !dbg !4768
  call void @llvm.dbg.value(metadata i32* %xTicksToWait.addr, metadata !4640, metadata !DIExpression(DW_OP_deref)), !dbg !4659
  %call71 = call i32 @xTaskCheckForTimeOut(%struct.xTIME_OUT* nonnull %xTimeOut, i32* nonnull %xTicksToWait.addr) #18, !dbg !4779
  %cmp72 = icmp eq i32 %call71, 0, !dbg !4780
  br i1 %cmp72, label %if.then74, label %if.else98, !dbg !4781

if.then74:                                        ; preds = %if.end70
  %call75 = call fastcc i32 @prvIsQueueEmpty(%struct.QueueDefinition* nonnull %xQueue), !dbg !4782
  %cmp76.not = icmp eq i32 %call75, 0, !dbg !4785
  br i1 %cmp76.not, label %if.else95, label %if.then78, !dbg !4786

if.then78:                                        ; preds = %if.then74
  %15 = load i8*, i8** %pcHead79, align 4, !dbg !4787, !tbaa !4068
  %cmp80 = icmp eq i8* %15, null, !dbg !4791
  br i1 %cmp80, label %if.then82, label %if.end88, !dbg !4792

if.then82:                                        ; preds = %if.then78
  call void @xcall_arg0(i32 0, void ()* @vPortEnterCritical), !dbg !4793
  %16 = load %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** %xMutexHolder85, align 4, !dbg !4795, !tbaa !1246
  %call86 = call i32 @icall_arg1p(i32 0, i8* bitcast (i32 (%struct.tskTaskControlBlock*)* @xTaskPriorityInherit to i8*), i8* %17, i32 ptrtoint (%struct.tskTaskControlBlock* getelementptr (%struct.tskTaskControlBlock, %struct.tskTaskControlBlock* null, i32 1) to i32)), !dbg !4797
  call void @llvm.dbg.value(metadata i32 %call86, metadata !4644, metadata !DIExpression()), !dbg !4659
  call void @xcall_arg0(i32 0, void ()* @vPortExitCritical), !dbg !4798
  br label %if.end88, !dbg !4799
  %17 = bitcast %struct.tskTaskControlBlock* %16 to i8*

if.end88:                                         ; preds = %if.then82, %if.then78
  %xInheritanceOccurred.1 = phi i32 [ %call86, %if.then82 ], [ %xInheritanceOccurred.0, %if.then78 ], !dbg !4659
  call void @llvm.dbg.value(metadata i32 %xInheritanceOccurred.1, metadata !4644, metadata !DIExpression()), !dbg !4659
  %18 = load i32, i32* %xTicksToWait.addr, align 4, !dbg !4800, !tbaa !1105
  call void @llvm.dbg.value(metadata i32 %18, metadata !4640, metadata !DIExpression()), !dbg !4659
  call void @vTaskPlaceOnEventList(%struct.xLIST* nonnull %xTasksWaitingToReceive, i32 %18) #18, !dbg !4801
  call fastcc void @prvUnlockQueue(%struct.QueueDefinition* nonnull %xQueue), !dbg !4802
  %call89 = call i32 @icall_arg0(i32 0, i32 ()* @xTaskResumeAll), !dbg !4803
  %cmp90 = icmp eq i32 %call89, 0, !dbg !4805
  br i1 %cmp90, label %if.then92, label %if.end114, !dbg !4806

if.then92:                                        ; preds = %if.end88
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !4807, !tbaa !1105
  call void asm sideeffect "dsb", "~{memory}"() #18, !dbg !4807, !srcloc !4810
  call void asm sideeffect "isb", ""() #18, !dbg !4807, !srcloc !4811
  br label %if.end114, !dbg !4812

if.else95:                                        ; preds = %if.then74
  call fastcc void @prvUnlockQueue(%struct.QueueDefinition* nonnull %xQueue), !dbg !4813
  %call96 = call i32 @icall_arg0(i32 0, i32 ()* @xTaskResumeAll), !dbg !4815
  br label %if.end114

if.else98:                                        ; preds = %if.end70
  call fastcc void @prvUnlockQueue(%struct.QueueDefinition* nonnull %xQueue), !dbg !4816
  %call99 = call i32 @icall_arg0(i32 0, i32 ()* @xTaskResumeAll), !dbg !4817
  %call100 = call fastcc i32 @prvIsQueueEmpty(%struct.QueueDefinition* nonnull %xQueue), !dbg !4818
  %cmp101.not = icmp eq i32 %call100, 0, !dbg !4819
  br i1 %cmp101.not, label %if.end114, label %if.then103, !dbg !4820

if.then103:                                       ; preds = %if.else98
  %cmp104.not = icmp eq i32 %xInheritanceOccurred.0, 0, !dbg !4821
  br i1 %cmp104.not, label %cleanup115, label %if.then106, !dbg !4822

if.then106:                                       ; preds = %if.then103
  call void @xcall_arg0(i32 0, void ()* @vPortEnterCritical), !dbg !4823
  %call107 = call fastcc i32 @prvGetDisinheritPriorityAfterTimeout(%struct.QueueDefinition* nonnull %xQueue), !dbg !4824
  call void @llvm.dbg.value(metadata i32 %call107, metadata !4650, metadata !DIExpression()), !dbg !4825
  %u108 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %xQueue, i32 0, i32 2, !dbg !4826
  %xMutexHolder110 = bitcast %union.anon* %u108 to %struct.tskTaskControlBlock**, !dbg !4827
  %19 = load %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** %xMutexHolder110, align 4, !dbg !4827, !tbaa !1246
  call void @vTaskPriorityDisinheritAfterTimeout(%struct.tskTaskControlBlock* %19, i32 %call107) #18, !dbg !4828
  call void @xcall_arg0(i32 0, void ()* @vPortExitCritical), !dbg !4829
  br label %cleanup115, !dbg !4830

if.end114:                                        ; preds = %if.else98, %if.else95, %if.then92, %if.end88
  %xInheritanceOccurred.2 = phi i32 [ %xInheritanceOccurred.1, %if.then92 ], [ %xInheritanceOccurred.1, %if.end88 ], [ %xInheritanceOccurred.0, %if.else95 ], [ %xInheritanceOccurred.0, %if.else98 ], !dbg !4659
  call void @llvm.dbg.value(metadata i32 %xInheritanceOccurred.2, metadata !4644, metadata !DIExpression()), !dbg !4659
  br label %for.cond16, !dbg !4831, !llvm.loop !4832

cleanup115:                                       ; preds = %if.then106, %if.then103, %cleanup
  %retval.2 = phi i32 [ 0, %if.then106 ], [ 0, %if.then103 ], [ %retval.1, %cleanup ], !dbg !4834
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #18, !dbg !4835
  ret i32 %retval.2, !dbg !4835
}

; Function Attrs: nounwind
define internal fastcc i32 @prvIsQueueEmpty(%struct.QueueDefinition* %pxQueue) unnamed_addr #0 section ".csection3" !dbg !4836 {
entry:
  call void @llvm.dbg.value(metadata %struct.QueueDefinition* %pxQueue, metadata !4838, metadata !DIExpression()), !dbg !4840
  call void @xcall_arg0(i32 0, void ()* @vPortEnterCritical), !dbg !4841
  %uxMessagesWaiting = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %pxQueue, i32 0, i32 5, !dbg !4842
  %0 = load volatile i32, i32* %uxMessagesWaiting, align 4, !dbg !4842, !tbaa !4080
  %cmp = icmp eq i32 %0, 0, !dbg !4845
  %xReturn.0 = zext i1 %cmp to i32, !dbg !4846
  call void @llvm.dbg.value(metadata i32 %xReturn.0, metadata !4839, metadata !DIExpression()), !dbg !4840
  call void @xcall_arg0(i32 0, void ()* @vPortExitCritical), !dbg !4847
  ret i32 %xReturn.0, !dbg !4848
}

; Function Attrs: nofree norecurse nounwind willreturn
define internal fastcc i32 @prvGetDisinheritPriorityAfterTimeout(%struct.QueueDefinition* %pxQueue) unnamed_addr #3 section ".csection3" !dbg !4849 {
entry:
  call void @llvm.dbg.value(metadata %struct.QueueDefinition* %pxQueue, metadata !4854, metadata !DIExpression()), !dbg !4856
  %uxNumberOfItems = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %pxQueue, i32 0, i32 4, i32 0, !dbg !4857
  %0 = load volatile i32, i32* %uxNumberOfItems, align 4, !dbg !4857, !tbaa !4334
  %cmp.not = icmp eq i32 %0, 0, !dbg !4859
  br i1 %cmp.not, label %if.end, label %if.then, !dbg !4860

if.then:                                          ; preds = %entry
  %pxNext = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %pxQueue, i32 0, i32 4, i32 2, i32 1, !dbg !4861
  %1 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %pxNext, align 4, !dbg !4861, !tbaa !4863
  %xItemValue = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %1, i32 0, i32 0, !dbg !4861
  %2 = load i32, i32* %xItemValue, align 4, !dbg !4861, !tbaa !1494
  %sub = sub i32 5, %2, !dbg !4864
  call void @llvm.dbg.value(metadata i32 %sub, metadata !4855, metadata !DIExpression()), !dbg !4856
  br label %if.end, !dbg !4865

if.end:                                           ; preds = %if.then, %entry
  %uxHighestPriorityOfWaitingTasks.0 = phi i32 [ %sub, %if.then ], [ 0, %entry ], !dbg !4866
  call void @llvm.dbg.value(metadata i32 %uxHighestPriorityOfWaitingTasks.0, metadata !4855, metadata !DIExpression()), !dbg !4856
  ret i32 %uxHighestPriorityOfWaitingTasks.0, !dbg !4867
}

; Function Attrs: nounwind
define dso_local %struct.QueueDefinition* @xQueueCreateCountingSemaphore(i32 %uxMaxCount, i32 %uxInitialCount) local_unnamed_addr #0 section ".csection3" !dbg !4868 {
entry:
  call void @llvm.dbg.value(metadata i32 %uxMaxCount, metadata !4872, metadata !DIExpression()), !dbg !4875
  call void @llvm.dbg.value(metadata i32 %uxInitialCount, metadata !4873, metadata !DIExpression()), !dbg !4875
  %cmp.not = icmp eq i32 %uxMaxCount, 0, !dbg !4876
  br i1 %cmp.not, label %if.then, label %if.end, !dbg !4878

if.then:                                          ; preds = %entry
  %0 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #18, !dbg !4879, !srcloc !4057
  call void @llvm.dbg.value(metadata i32 %0, metadata !4054, metadata !DIExpression()) #18, !dbg !4882
  br label %for.cond, !dbg !4883

for.cond:                                         ; preds = %for.cond, %if.then
  br label %for.cond, !dbg !4884, !llvm.loop !4887

if.end:                                           ; preds = %entry
  %cmp3.not = icmp ugt i32 %uxInitialCount, %uxMaxCount, !dbg !4889
  br i1 %cmp3.not, label %if.then7, label %if.end9, !dbg !4891

if.then7:                                         ; preds = %if.end
  %1 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #18, !dbg !4892, !srcloc !4057
  call void @llvm.dbg.value(metadata i32 %1, metadata !4054, metadata !DIExpression()) #18, !dbg !4895
  br label %for.cond8, !dbg !4896

for.cond8:                                        ; preds = %for.cond8, %if.then7
  br label %for.cond8, !dbg !4897, !llvm.loop !4900

if.end9:                                          ; preds = %if.end
  %call = call %struct.QueueDefinition* @xQueueGenericCreate(i32 %uxMaxCount, i32 0, i8 zeroext 2), !dbg !4902
  call void @llvm.dbg.value(metadata %struct.QueueDefinition* %call, metadata !4874, metadata !DIExpression()), !dbg !4875
  %cmp10.not = icmp eq %struct.QueueDefinition* %call, null, !dbg !4903
  br i1 %cmp10.not, label %if.end13, label %if.then12, !dbg !4905

if.then12:                                        ; preds = %if.end9
  %uxMessagesWaiting = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %call, i32 0, i32 5, !dbg !4906
  store volatile i32 %uxInitialCount, i32* %uxMessagesWaiting, align 4, !dbg !4908, !tbaa !4080
  br label %if.end13, !dbg !4909

if.end13:                                         ; preds = %if.then12, %if.end9
  ret %struct.QueueDefinition* %call, !dbg !4910
}

; Function Attrs: nounwind
define dso_local i32 @xQueueGenericSendFromISR(%struct.QueueDefinition* %xQueue, i8* readonly %pvItemToQueue, i32* %pxHigherPriorityTaskWoken, i32 %xCopyPosition) local_unnamed_addr #0 section ".csection3" !dbg !4911 {
entry:
  call void @llvm.dbg.value(metadata %struct.QueueDefinition* %xQueue, metadata !4915, metadata !DIExpression()), !dbg !4928
  call void @llvm.dbg.value(metadata i8* %pvItemToQueue, metadata !4916, metadata !DIExpression()), !dbg !4928
  call void @llvm.dbg.value(metadata i32* %pxHigherPriorityTaskWoken, metadata !4917, metadata !DIExpression()), !dbg !4928
  call void @llvm.dbg.value(metadata i32 %xCopyPosition, metadata !4918, metadata !DIExpression()), !dbg !4928
  call void @llvm.dbg.value(metadata %struct.QueueDefinition* %xQueue, metadata !4921, metadata !DIExpression()), !dbg !4928
  %cmp = icmp eq %struct.QueueDefinition* %xQueue, null, !dbg !4929
  br i1 %cmp, label %if.then, label %if.end, !dbg !4931

if.then:                                          ; preds = %entry
  %0 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #18, !dbg !4932, !srcloc !4057
  call void @llvm.dbg.value(metadata i32 %0, metadata !4054, metadata !DIExpression()) #18, !dbg !4935
  br label %for.cond, !dbg !4936

for.cond:                                         ; preds = %for.cond, %if.then
  br label %for.cond, !dbg !4937, !llvm.loop !4940

if.end:                                           ; preds = %entry
  %cmp1 = icmp eq i8* %pvItemToQueue, null, !dbg !4942
  br i1 %cmp1, label %land.rhs, label %if.end6, !dbg !4942

land.rhs:                                         ; preds = %if.end
  %uxItemSize = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %xQueue, i32 0, i32 7, !dbg !4942
  %1 = load i32, i32* %uxItemSize, align 4, !dbg !4942, !tbaa !4073
  %cmp2.not = icmp eq i32 %1, 0, !dbg !4942
  br i1 %cmp2.not, label %if.end6, label %if.then4, !dbg !4944

if.then4:                                         ; preds = %land.rhs
  %2 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #18, !dbg !4945, !srcloc !4057
  call void @llvm.dbg.value(metadata i32 %2, metadata !4054, metadata !DIExpression()) #18, !dbg !4948
  br label %for.cond5, !dbg !4949

for.cond5:                                        ; preds = %for.cond5, %if.then4
  br label %for.cond5, !dbg !4950, !llvm.loop !4953

if.end6:                                          ; preds = %land.rhs, %if.end
  %cmp7 = icmp eq i32 %xCopyPosition, 2, !dbg !4955
  br i1 %cmp7, label %land.rhs8, label %if.end16, !dbg !4955

land.rhs8:                                        ; preds = %if.end6
  %uxLength = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %xQueue, i32 0, i32 6, !dbg !4955
  %3 = load i32, i32* %uxLength, align 4, !dbg !4955, !tbaa !4071
  %cmp9.not = icmp eq i32 %3, 1, !dbg !4955
  br i1 %cmp9.not, label %if.end16, label %if.then14, !dbg !4957

if.then14:                                        ; preds = %land.rhs8
  %4 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #18, !dbg !4958, !srcloc !4057
  call void @llvm.dbg.value(metadata i32 %4, metadata !4054, metadata !DIExpression()) #18, !dbg !4961
  br label %for.cond15, !dbg !4962

for.cond15:                                       ; preds = %for.cond15, %if.then14
  br label %for.cond15, !dbg !4963, !llvm.loop !4966

if.end16:                                         ; preds = %land.rhs8, %if.end6
  call void @xcall_arg0(i32 0, void ()* @vPortValidateInterruptPriority), !dbg !4968
  %5 = call { i32, i32 } asm sideeffect "\09mrs $0, basepri\09\09\09\09\09\09\09\09\09\09\09\0A\09mov $1, $2\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $1\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,=r,i,~{memory}"(i32 80) #18, !dbg !4969, !srcloc !4975
  call void @llvm.dbg.value(metadata i32 undef, metadata !4972, metadata !DIExpression()) #18, !dbg !4976
  call void @llvm.dbg.value(metadata i32 undef, metadata !4973, metadata !DIExpression()) #18, !dbg !4976
  call void @llvm.dbg.value(metadata i32 undef, metadata !4920, metadata !DIExpression()), !dbg !4928
  %uxMessagesWaiting = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %xQueue, i32 0, i32 5, !dbg !4977
  %6 = load volatile i32, i32* %uxMessagesWaiting, align 4, !dbg !4977, !tbaa !4080
  %uxLength17 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %xQueue, i32 0, i32 6, !dbg !4978
  %7 = load i32, i32* %uxLength17, align 4, !dbg !4978, !tbaa !4071
  %cmp18 = icmp ult i32 %6, %7, !dbg !4979
  %or.cond = or i1 %cmp7, %cmp18, !dbg !4980
  br i1 %or.cond, label %if.then20, label %if.end59, !dbg !4980

if.then20:                                        ; preds = %if.end16
  %cTxLock21 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %xQueue, i32 0, i32 9, !dbg !4981
  %8 = load volatile i8, i8* %cTxLock21, align 1, !dbg !4981, !tbaa !4094
  call void @llvm.dbg.value(metadata i8 %8, metadata !4922, metadata !DIExpression()), !dbg !4982
  %9 = load volatile i32, i32* %uxMessagesWaiting, align 4, !dbg !4983, !tbaa !4080
  call void @llvm.dbg.value(metadata i32 %9, metadata !4927, metadata !DIExpression()), !dbg !4982
  %call23 = call fastcc i32 @prvCopyDataToQueue(%struct.QueueDefinition* nonnull %xQueue, i8* %pvItemToQueue, i32 %xCopyPosition), !dbg !4984
  switch i8 %8, label %if.end53 [
    i8 -1, label %if.then26
    i8 127, label %if.then51
  ], !dbg !4985

if.then26:                                        ; preds = %if.then20
  %xTasksWaitingToReceive = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %xQueue, i32 0, i32 4, !dbg !4986
  %uxNumberOfItems = getelementptr inbounds %struct.xLIST, %struct.xLIST* %xTasksWaitingToReceive, i32 0, i32 0, !dbg !4986
  %10 = load volatile i32, i32* %uxNumberOfItems, align 4, !dbg !4986, !tbaa !4334
  %cmp27.not = icmp eq i32 %10, 0, !dbg !4986
  br i1 %cmp27.not, label %if.end59, label %if.then31, !dbg !4991

if.then31:                                        ; preds = %if.then26
  %call33 = call i32 @icall_arg1p(i32 0, i8* bitcast (i32 (%struct.xLIST*)* @xTaskRemoveFromEventList to i8*), i8* %11, i32 ptrtoint (%struct.xLIST* getelementptr (%struct.xLIST, %struct.xLIST* null, i32 1) to i32)), !dbg !4992
  %cmp34 = icmp ne i32 %call33, 0, !dbg !4995
  %cmp37 = icmp ne i32* %pxHigherPriorityTaskWoken, null
  %or.cond60 = and i1 %cmp37, %cmp34, !dbg !4996
  br i1 %or.cond60, label %if.then39, label %if.end59, !dbg !4996
  %11 = bitcast %struct.xLIST* %xTasksWaitingToReceive to i8*

if.then39:                                        ; preds = %if.then31
  store i32 1, i32* %pxHigherPriorityTaskWoken, align 4, !dbg !4997, !tbaa !1085
  br label %if.end59, !dbg !5001

if.then51:                                        ; preds = %if.then20
  %12 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #18, !dbg !5002, !srcloc !4057
  call void @llvm.dbg.value(metadata i32 %12, metadata !4054, metadata !DIExpression()) #18, !dbg !5007
  br label %for.cond52, !dbg !5008

for.cond52:                                       ; preds = %for.cond52, %if.then51
  br label %for.cond52, !dbg !5009, !llvm.loop !5012

if.end53:                                         ; preds = %if.then20
  %add = add i8 %8, 1, !dbg !5014
  store volatile i8 %add, i8* %cTxLock21, align 1, !dbg !5015, !tbaa !4094
  br label %if.end59

if.end59:                                         ; preds = %if.end53, %if.then39, %if.then31, %if.then26, %if.end16
  %xReturn.0 = phi i32 [ 1, %if.then31 ], [ 1, %if.then39 ], [ 1, %if.then26 ], [ 1, %if.end53 ], [ 0, %if.end16 ], !dbg !5016
  %asmresult.i = extractvalue { i32, i32 } %5, 0, !dbg !4969
  call void @llvm.dbg.value(metadata i32 %asmresult.i, metadata !4920, metadata !DIExpression()), !dbg !4928
  call void @llvm.dbg.value(metadata i32 %asmresult.i, metadata !4972, metadata !DIExpression()) #18, !dbg !4976
  call void @llvm.dbg.value(metadata i32 %xReturn.0, metadata !4919, metadata !DIExpression()), !dbg !4928
  call void @llvm.dbg.value(metadata i32 undef, metadata !5017, metadata !DIExpression()) #18, !dbg !5020
  call void asm sideeffect "\09msr basepri, $0\09", "r,~{memory}"(i32 %asmresult.i) #18, !dbg !5022, !srcloc !5023
  ret i32 %xReturn.0, !dbg !5024
}

; Function Attrs: nounwind
define dso_local i32 @xQueueGiveFromISR(%struct.QueueDefinition* %xQueue, i32* %pxHigherPriorityTaskWoken) local_unnamed_addr #0 section ".csection3" !dbg !5025 {
entry:
  call void @llvm.dbg.value(metadata %struct.QueueDefinition* %xQueue, metadata !5029, metadata !DIExpression()), !dbg !5039
  call void @llvm.dbg.value(metadata i32* %pxHigherPriorityTaskWoken, metadata !5030, metadata !DIExpression()), !dbg !5039
  call void @llvm.dbg.value(metadata %struct.QueueDefinition* %xQueue, metadata !5033, metadata !DIExpression()), !dbg !5039
  %cmp = icmp eq %struct.QueueDefinition* %xQueue, null, !dbg !5040
  br i1 %cmp, label %if.then, label %if.end, !dbg !5042

if.then:                                          ; preds = %entry
  %0 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #18, !dbg !5043, !srcloc !4057
  call void @llvm.dbg.value(metadata i32 %0, metadata !4054, metadata !DIExpression()) #18, !dbg !5046
  br label %for.cond, !dbg !5047

for.cond:                                         ; preds = %for.cond, %if.then
  br label %for.cond, !dbg !5048, !llvm.loop !5051

if.end:                                           ; preds = %entry
  %uxItemSize = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %xQueue, i32 0, i32 7, !dbg !5053
  %1 = load i32, i32* %uxItemSize, align 4, !dbg !5053, !tbaa !4073
  %cmp1.not = icmp eq i32 %1, 0, !dbg !5053
  br i1 %cmp1.not, label %if.end6, label %if.then4, !dbg !5055

if.then4:                                         ; preds = %if.end
  %2 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #18, !dbg !5056, !srcloc !4057
  call void @llvm.dbg.value(metadata i32 %2, metadata !4054, metadata !DIExpression()) #18, !dbg !5059
  br label %for.cond5, !dbg !5060

for.cond5:                                        ; preds = %for.cond5, %if.then4
  br label %for.cond5, !dbg !5061, !llvm.loop !5064

if.end6:                                          ; preds = %if.end
  %pcHead = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %xQueue, i32 0, i32 0, !dbg !5066
  %3 = load i8*, i8** %pcHead, align 4, !dbg !5066, !tbaa !4068
  %cmp7 = icmp eq i8* %3, null, !dbg !5066
  br i1 %cmp7, label %land.rhs, label %if.end15, !dbg !5066

land.rhs:                                         ; preds = %if.end6
  %u = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %xQueue, i32 0, i32 2, !dbg !5066
  %xMutexHolder = bitcast %union.anon* %u to %struct.tskTaskControlBlock**, !dbg !5066
  %4 = load %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** %xMutexHolder, align 4, !dbg !5066, !tbaa !1246
  %cmp9.not = icmp eq %struct.tskTaskControlBlock* %4, null, !dbg !5066
  br i1 %cmp9.not, label %if.end15, label %if.then13, !dbg !5068

if.then13:                                        ; preds = %land.rhs
  %5 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #18, !dbg !5069, !srcloc !4057
  call void @llvm.dbg.value(metadata i32 %5, metadata !4054, metadata !DIExpression()) #18, !dbg !5072
  br label %for.cond14, !dbg !5073

for.cond14:                                       ; preds = %for.cond14, %if.then13
  br label %for.cond14, !dbg !5074, !llvm.loop !5077

if.end15:                                         ; preds = %land.rhs, %if.end6
  call void @xcall_arg0(i32 0, void ()* @vPortValidateInterruptPriority), !dbg !5079
  %6 = call { i32, i32 } asm sideeffect "\09mrs $0, basepri\09\09\09\09\09\09\09\09\09\09\09\0A\09mov $1, $2\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $1\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,=r,i,~{memory}"(i32 80) #18, !dbg !5080, !srcloc !4975
  call void @llvm.dbg.value(metadata i32 undef, metadata !4972, metadata !DIExpression()) #18, !dbg !5082
  call void @llvm.dbg.value(metadata i32 undef, metadata !4973, metadata !DIExpression()) #18, !dbg !5082
  call void @llvm.dbg.value(metadata i32 undef, metadata !5032, metadata !DIExpression()), !dbg !5039
  %uxMessagesWaiting16 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %xQueue, i32 0, i32 5, !dbg !5083
  %7 = load volatile i32, i32* %uxMessagesWaiting16, align 4, !dbg !5083, !tbaa !4080
  call void @llvm.dbg.value(metadata i32 %7, metadata !5034, metadata !DIExpression()), !dbg !5084
  %uxLength = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %xQueue, i32 0, i32 6, !dbg !5085
  %8 = load i32, i32* %uxLength, align 4, !dbg !5085, !tbaa !4071
  %cmp17 = icmp ult i32 %7, %8, !dbg !5086
  br i1 %cmp17, label %if.then19, label %if.end59, !dbg !5087

if.then19:                                        ; preds = %if.end15
  %cTxLock20 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %xQueue, i32 0, i32 9, !dbg !5088
  %9 = load volatile i8, i8* %cTxLock20, align 1, !dbg !5088, !tbaa !4094
  call void @llvm.dbg.value(metadata i8 %9, metadata !5036, metadata !DIExpression()), !dbg !5089
  %add = add i32 %7, 1, !dbg !5090
  store volatile i32 %add, i32* %uxMessagesWaiting16, align 4, !dbg !5091, !tbaa !4080
  switch i8 %9, label %if.end52 [
    i8 -1, label %if.then25
    i8 127, label %if.then50
  ], !dbg !5092

if.then25:                                        ; preds = %if.then19
  %xTasksWaitingToReceive = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %xQueue, i32 0, i32 4, !dbg !5093
  %uxNumberOfItems = getelementptr inbounds %struct.xLIST, %struct.xLIST* %xTasksWaitingToReceive, i32 0, i32 0, !dbg !5093
  %10 = load volatile i32, i32* %uxNumberOfItems, align 4, !dbg !5093, !tbaa !4334
  %cmp26.not = icmp eq i32 %10, 0, !dbg !5093
  br i1 %cmp26.not, label %if.end59, label %if.then30, !dbg !5098

if.then30:                                        ; preds = %if.then25
  %call32 = call i32 @icall_arg1p(i32 0, i8* bitcast (i32 (%struct.xLIST*)* @xTaskRemoveFromEventList to i8*), i8* %11, i32 ptrtoint (%struct.xLIST* getelementptr (%struct.xLIST, %struct.xLIST* null, i32 1) to i32)), !dbg !5099
  %cmp33 = icmp ne i32 %call32, 0, !dbg !5102
  %cmp36 = icmp ne i32* %pxHigherPriorityTaskWoken, null
  %or.cond = and i1 %cmp36, %cmp33, !dbg !5103
  br i1 %or.cond, label %if.then38, label %if.end59, !dbg !5103
  %11 = bitcast %struct.xLIST* %xTasksWaitingToReceive to i8*

if.then38:                                        ; preds = %if.then30
  store i32 1, i32* %pxHigherPriorityTaskWoken, align 4, !dbg !5104, !tbaa !1085
  br label %if.end59, !dbg !5108

if.then50:                                        ; preds = %if.then19
  %12 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #18, !dbg !5109, !srcloc !4057
  call void @llvm.dbg.value(metadata i32 %12, metadata !4054, metadata !DIExpression()) #18, !dbg !5114
  br label %for.cond51, !dbg !5115

for.cond51:                                       ; preds = %for.cond51, %if.then50
  br label %for.cond51, !dbg !5116, !llvm.loop !5119

if.end52:                                         ; preds = %if.then19
  %add54 = add i8 %9, 1, !dbg !5121
  store volatile i8 %add54, i8* %cTxLock20, align 1, !dbg !5122, !tbaa !4094
  br label %if.end59

if.end59:                                         ; preds = %if.end52, %if.then38, %if.then30, %if.then25, %if.end15
  %xReturn.0 = phi i32 [ 1, %if.then30 ], [ 1, %if.then38 ], [ 1, %if.then25 ], [ 1, %if.end52 ], [ 0, %if.end15 ], !dbg !5123
  %asmresult.i = extractvalue { i32, i32 } %6, 0, !dbg !5080
  call void @llvm.dbg.value(metadata i32 %asmresult.i, metadata !5032, metadata !DIExpression()), !dbg !5039
  call void @llvm.dbg.value(metadata i32 %asmresult.i, metadata !4972, metadata !DIExpression()) #18, !dbg !5082
  call void @llvm.dbg.value(metadata i32 %xReturn.0, metadata !5031, metadata !DIExpression()), !dbg !5039
  call void @llvm.dbg.value(metadata i32 undef, metadata !5017, metadata !DIExpression()) #18, !dbg !5124
  call void asm sideeffect "\09msr basepri, $0\09", "r,~{memory}"(i32 %asmresult.i) #18, !dbg !5126, !srcloc !5023
  ret i32 %xReturn.0, !dbg !5127
}

; Function Attrs: nounwind
define dso_local i32 @xQueueReceive(%struct.QueueDefinition* %xQueue, i8* %pvBuffer, i32 %xTicksToWait) local_unnamed_addr #0 section ".csection3" !dbg !5128 {
entry:
  %xTicksToWait.addr = alloca i32, align 4
  %xTimeOut = alloca %struct.xTIME_OUT, align 4
  call void @llvm.dbg.value(metadata %struct.QueueDefinition* %xQueue, metadata !5132, metadata !DIExpression()), !dbg !5143
  call void @llvm.dbg.value(metadata i8* %pvBuffer, metadata !5133, metadata !DIExpression()), !dbg !5143
  call void @llvm.dbg.value(metadata i32 %xTicksToWait, metadata !5134, metadata !DIExpression()), !dbg !5143
  store i32 %xTicksToWait, i32* %xTicksToWait.addr, align 4, !tbaa !1105
  call void @llvm.dbg.value(metadata i32 0, metadata !5135, metadata !DIExpression()), !dbg !5143
  %0 = bitcast %struct.xTIME_OUT* %xTimeOut to i8*, !dbg !5144
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #18, !dbg !5144
  call void @llvm.dbg.declare(metadata %struct.xTIME_OUT* %xTimeOut, metadata !5136, metadata !DIExpression()), !dbg !5145
  call void @llvm.dbg.value(metadata %struct.QueueDefinition* %xQueue, metadata !5137, metadata !DIExpression()), !dbg !5143
  %cmp = icmp eq %struct.QueueDefinition* %xQueue, null, !dbg !5146
  br i1 %cmp, label %if.then, label %if.end, !dbg !5148

if.then:                                          ; preds = %entry
  %1 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #18, !dbg !5149, !srcloc !4057
  call void @llvm.dbg.value(metadata i32 %1, metadata !4054, metadata !DIExpression()) #18, !dbg !5152
  br label %for.cond, !dbg !5153

for.cond:                                         ; preds = %for.cond, %if.then
  br label %for.cond, !dbg !5154, !llvm.loop !5157

if.end:                                           ; preds = %entry
  %cmp1 = icmp eq i8* %pvBuffer, null, !dbg !5159
  br i1 %cmp1, label %land.rhs, label %if.end6, !dbg !5159

land.rhs:                                         ; preds = %if.end
  %uxItemSize = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %xQueue, i32 0, i32 7, !dbg !5159
  %2 = load i32, i32* %uxItemSize, align 4, !dbg !5159, !tbaa !4073
  %cmp2.not = icmp eq i32 %2, 0, !dbg !5159
  br i1 %cmp2.not, label %if.end6, label %if.then4, !dbg !5161

if.then4:                                         ; preds = %land.rhs
  %3 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #18, !dbg !5162, !srcloc !4057
  call void @llvm.dbg.value(metadata i32 %3, metadata !4054, metadata !DIExpression()) #18, !dbg !5165
  br label %for.cond5, !dbg !5166

for.cond5:                                        ; preds = %for.cond5, %if.then4
  br label %for.cond5, !dbg !5167, !llvm.loop !5170

if.end6:                                          ; preds = %land.rhs, %if.end
  %call = call i32 @icall_arg0(i32 0, i32 ()* @xTaskGetSchedulerState), !dbg !5172
  %cmp7 = icmp eq i32 %call, 0, !dbg !5172
  %4 = load i32, i32* %xTicksToWait.addr, align 4, !dbg !5172
  call void @llvm.dbg.value(metadata i32 %4, metadata !5134, metadata !DIExpression()), !dbg !5143
  %cmp9 = icmp ne i32 %4, 0, !dbg !5172
  %cmp13 = and i1 %cmp7, %cmp9, !dbg !5172
  br i1 %cmp13, label %if.then14, label %for.cond17.preheader, !dbg !5175

for.cond17.preheader:                             ; preds = %if.end6
  %uxMessagesWaiting18 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %xQueue, i32 0, i32 5
  %xTasksWaitingToSend = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %xQueue, i32 0, i32 3
  %uxNumberOfItems = getelementptr inbounds %struct.xLIST, %struct.xLIST* %xTasksWaitingToSend, i32 0, i32 0
  %cRxLock = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %xQueue, i32 0, i32 8
  %cTxLock = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %xQueue, i32 0, i32 9
  %xTasksWaitingToReceive = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %xQueue, i32 0, i32 4
  br label %for.cond17, !dbg !5176

if.then14:                                        ; preds = %if.end6
  %5 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #18, !dbg !5177, !srcloc !4057
  call void @llvm.dbg.value(metadata i32 %5, metadata !4054, metadata !DIExpression()) #18, !dbg !5180
  br label %for.cond15, !dbg !5181

for.cond15:                                       ; preds = %for.cond15, %if.then14
  br label %for.cond15, !dbg !5182, !llvm.loop !5185

for.cond17:                                       ; preds = %if.end78, %for.cond17.preheader
  %xEntryTimeSet.0 = phi i32 [ %xEntryTimeSet.2, %if.end78 ], [ 0, %for.cond17.preheader ], !dbg !5187
  %retval.0 = phi i32 [ %retval.1, %if.end78 ], [ undef, %for.cond17.preheader ]
  call void @llvm.dbg.value(metadata i32 %xEntryTimeSet.0, metadata !5135, metadata !DIExpression()), !dbg !5143
  call void @xcall_arg0(i32 0, void ()* @vPortEnterCritical), !dbg !5188
  %6 = load volatile i32, i32* %uxMessagesWaiting18, align 4, !dbg !5189, !tbaa !4080
  call void @llvm.dbg.value(metadata i32 %6, metadata !5138, metadata !DIExpression()), !dbg !5190
  %cmp19.not = icmp eq i32 %6, 0, !dbg !5191
  br i1 %cmp19.not, label %if.else32, label %if.then20, !dbg !5193

if.then20:                                        ; preds = %for.cond17
  call fastcc void @prvCopyDataFromQueue(%struct.QueueDefinition* nonnull %xQueue, i8* %pvBuffer), !dbg !5194
  %sub = add i32 %6, -1, !dbg !5196
  store volatile i32 %sub, i32* %uxMessagesWaiting18, align 4, !dbg !5197, !tbaa !4080
  %7 = load volatile i32, i32* %uxNumberOfItems, align 4, !dbg !5198, !tbaa !4101
  %cmp22.not = icmp eq i32 %7, 0, !dbg !5198
  br i1 %cmp22.not, label %if.end31, label %if.then24, !dbg !5200

if.then24:                                        ; preds = %if.then20
  %call26 = call i32 @icall_arg1p(i32 0, i8* bitcast (i32 (%struct.xLIST*)* @xTaskRemoveFromEventList to i8*), i8* %8, i32 ptrtoint (%struct.xLIST* getelementptr (%struct.xLIST, %struct.xLIST* null, i32 1) to i32)), !dbg !5201
  %cmp27.not = icmp eq i32 %call26, 0, !dbg !5204
  br i1 %cmp27.not, label %if.end31, label %if.then28, !dbg !5205
  %8 = bitcast %struct.xLIST* %xTasksWaitingToSend to i8*

if.then28:                                        ; preds = %if.then24
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !5206, !tbaa !1105
  call void asm sideeffect "dsb", "~{memory}"() #18, !dbg !5206, !srcloc !5209
  call void asm sideeffect "isb", ""() #18, !dbg !5206, !srcloc !5210
  br label %if.end31, !dbg !5211

if.end31:                                         ; preds = %if.then28, %if.then24, %if.then20
  call void @xcall_arg0(i32 0, void ()* @vPortExitCritical), !dbg !5212
  br label %cleanup, !dbg !5213

if.else32:                                        ; preds = %for.cond17
  %9 = load i32, i32* %xTicksToWait.addr, align 4, !dbg !5214, !tbaa !1105
  call void @llvm.dbg.value(metadata i32 %9, metadata !5134, metadata !DIExpression()), !dbg !5143
  %cmp33 = icmp eq i32 %9, 0, !dbg !5217
  br i1 %cmp33, label %if.then34, label %if.else35, !dbg !5218

if.then34:                                        ; preds = %if.else32
  call void @xcall_arg0(i32 0, void ()* @vPortExitCritical), !dbg !5219
  br label %cleanup, !dbg !5221

if.else35:                                        ; preds = %if.else32
  %cmp36 = icmp eq i32 %xEntryTimeSet.0, 0, !dbg !5222
  br i1 %cmp36, label %if.then37, label %cleanup, !dbg !5224

if.then37:                                        ; preds = %if.else35
  call void @xcall_arg1p(i32 0, i8* bitcast (void (%struct.xTIME_OUT*)* @vTaskInternalSetTimeOutState to i8*), i8* %10, i32 mul nuw (i32 ptrtoint (i32* getelementptr (i32, i32* null, i32 1) to i32), i32 2)), !dbg !5225
  call void @llvm.dbg.value(metadata i32 1, metadata !5135, metadata !DIExpression()), !dbg !5143
  br label %cleanup, !dbg !5227
  %10 = bitcast %struct.xTIME_OUT* %xTimeOut to i8*

cleanup:                                          ; preds = %if.then37, %if.else35, %if.then34, %if.end31
  %xEntryTimeSet.2 = phi i32 [ %xEntryTimeSet.0, %if.end31 ], [ %xEntryTimeSet.0, %if.then34 ], [ 1, %if.else35 ], [ 1, %if.then37 ], !dbg !5143
  %retval.1 = phi i32 [ 1, %if.end31 ], [ 0, %if.then34 ], [ %retval.0, %if.else35 ], [ %retval.0, %if.then37 ]
  %cond82 = phi i1 [ false, %if.end31 ], [ false, %if.then34 ], [ true, %if.else35 ], [ true, %if.then37 ]
  call void @llvm.dbg.value(metadata i32 %xEntryTimeSet.2, metadata !5135, metadata !DIExpression()), !dbg !5143
  br i1 %cond82, label %cleanup.cont, label %cleanup79

cleanup.cont:                                     ; preds = %cleanup
  call void @xcall_arg0(i32 0, void ()* @vPortExitCritical), !dbg !5228
  call void @vTaskSuspendAll() #18, !dbg !5229
  call void @xcall_arg0(i32 0, void ()* @vPortEnterCritical), !dbg !5230
  %11 = load volatile i8, i8* %cRxLock, align 4, !dbg !5231, !tbaa !4091
  %cmp42 = icmp eq i8 %11, -1, !dbg !5231
  br i1 %cmp42, label %if.then44, label %if.end46, !dbg !5234

if.then44:                                        ; preds = %cleanup.cont
  store volatile i8 0, i8* %cRxLock, align 4, !dbg !5235, !tbaa !4091
  br label %if.end46, !dbg !5235

if.end46:                                         ; preds = %if.then44, %cleanup.cont
  %12 = load volatile i8, i8* %cTxLock, align 1, !dbg !5237, !tbaa !4094
  %cmp48 = icmp eq i8 %12, -1, !dbg !5237
  br i1 %cmp48, label %if.then50, label %if.end52, !dbg !5234

if.then50:                                        ; preds = %if.end46
  store volatile i8 0, i8* %cTxLock, align 1, !dbg !5239, !tbaa !4094
  br label %if.end52, !dbg !5239

if.end52:                                         ; preds = %if.then50, %if.end46
  call void @xcall_arg0(i32 0, void ()* @vPortExitCritical), !dbg !5230
  call void @llvm.dbg.value(metadata i32* %xTicksToWait.addr, metadata !5134, metadata !DIExpression(DW_OP_deref)), !dbg !5143
  %call53 = call i32 @xTaskCheckForTimeOut(%struct.xTIME_OUT* nonnull %xTimeOut, i32* nonnull %xTicksToWait.addr) #18, !dbg !5241
  %cmp54 = icmp eq i32 %call53, 0, !dbg !5243
  br i1 %cmp54, label %if.then56, label %if.else70, !dbg !5244

if.then56:                                        ; preds = %if.end52
  %call57 = call fastcc i32 @prvIsQueueEmpty(%struct.QueueDefinition* nonnull %xQueue), !dbg !5245
  %cmp58.not = icmp eq i32 %call57, 0, !dbg !5248
  br i1 %cmp58.not, label %if.else67, label %if.then60, !dbg !5249

if.then60:                                        ; preds = %if.then56
  %13 = load i32, i32* %xTicksToWait.addr, align 4, !dbg !5250, !tbaa !1105
  call void @llvm.dbg.value(metadata i32 %13, metadata !5134, metadata !DIExpression()), !dbg !5143
  call void @vTaskPlaceOnEventList(%struct.xLIST* nonnull %xTasksWaitingToReceive, i32 %13) #18, !dbg !5252
  call fastcc void @prvUnlockQueue(%struct.QueueDefinition* nonnull %xQueue), !dbg !5253
  %call61 = call i32 @icall_arg0(i32 0, i32 ()* @xTaskResumeAll), !dbg !5254
  %cmp62 = icmp eq i32 %call61, 0, !dbg !5256
  br i1 %cmp62, label %if.then64, label %if.end78, !dbg !5257

if.then64:                                        ; preds = %if.then60
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !5258, !tbaa !1105
  call void asm sideeffect "dsb", "~{memory}"() #18, !dbg !5258, !srcloc !5261
  call void asm sideeffect "isb", ""() #18, !dbg !5258, !srcloc !5262
  br label %if.end78, !dbg !5263

if.else67:                                        ; preds = %if.then56
  call fastcc void @prvUnlockQueue(%struct.QueueDefinition* nonnull %xQueue), !dbg !5264
  %call68 = call i32 @icall_arg0(i32 0, i32 ()* @xTaskResumeAll), !dbg !5266
  br label %if.end78

if.else70:                                        ; preds = %if.end52
  call fastcc void @prvUnlockQueue(%struct.QueueDefinition* nonnull %xQueue), !dbg !5267
  %call71 = call i32 @icall_arg0(i32 0, i32 ()* @xTaskResumeAll), !dbg !5269
  %call72 = call fastcc i32 @prvIsQueueEmpty(%struct.QueueDefinition* nonnull %xQueue), !dbg !5270
  %cmp73.not = icmp eq i32 %call72, 0, !dbg !5272
  br i1 %cmp73.not, label %if.end78, label %cleanup79, !dbg !5273

if.end78:                                         ; preds = %if.else70, %if.else67, %if.then64, %if.then60
  br label %for.cond17, !dbg !5274, !llvm.loop !5275

cleanup79:                                        ; preds = %if.else70, %cleanup
  %retval.2 = phi i32 [ %retval.1, %cleanup ], [ 0, %if.else70 ], !dbg !5277
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #18, !dbg !5278
  ret i32 %retval.2, !dbg !5278
}

; Function Attrs: nofree nounwind willreturn
define internal fastcc void @prvCopyDataFromQueue(%struct.QueueDefinition* nocapture %pxQueue, i8* nocapture %pvBuffer) unnamed_addr #13 section ".csection3" !dbg !5279 {
entry:
  call void @llvm.dbg.value(metadata %struct.QueueDefinition* %pxQueue, metadata !5283, metadata !DIExpression()), !dbg !5285
  call void @llvm.dbg.value(metadata i8* %pvBuffer, metadata !5284, metadata !DIExpression()), !dbg !5285
  %uxItemSize = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %pxQueue, i32 0, i32 7, !dbg !5286
  %0 = load i32, i32* %uxItemSize, align 4, !dbg !5286, !tbaa !4073
  %cmp.not = icmp eq i32 %0, 0, !dbg !5288
  br i1 %cmp.not, label %if.end16, label %if.then, !dbg !5289

if.then:                                          ; preds = %entry
  %pcReadFrom = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %pxQueue, i32 0, i32 2, i32 0, i32 1, !dbg !5290
  %1 = load i8*, i8** %pcReadFrom, align 4, !dbg !5292, !tbaa !1246
  %add.ptr = getelementptr inbounds i8, i8* %1, i32 %0, !dbg !5292
  store i8* %add.ptr, i8** %pcReadFrom, align 4, !dbg !5292, !tbaa !1246
  %pcTail = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %pxQueue, i32 0, i32 2, i32 0, i32 0, !dbg !5293
  %2 = load i8*, i8** %pcTail, align 4, !dbg !5293, !tbaa !1246
  %cmp7.not = icmp ult i8* %add.ptr, %2, !dbg !5295
  br i1 %cmp7.not, label %if.end, label %if.then8, !dbg !5296

if.then8:                                         ; preds = %if.then
  %pcHead = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %pxQueue, i32 0, i32 0, !dbg !5297
  %3 = load i8*, i8** %pcHead, align 4, !dbg !5297, !tbaa !4068
  store i8* %3, i8** %pcReadFrom, align 4, !dbg !5299, !tbaa !1246
  br label %if.end, !dbg !5300

if.end:                                           ; preds = %if.then8, %if.then
  %4 = load i8*, i8** %pcReadFrom, align 4, !dbg !5301, !tbaa !1246
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 1 %pvBuffer, i8* align 1 %4, i32 %0, i1 false), !dbg !5302
  br label %if.end16, !dbg !5303

if.end16:                                         ; preds = %if.end, %entry
  ret void, !dbg !5304
}

; Function Attrs: nounwind
define dso_local i32 @xQueuePeek(%struct.QueueDefinition* %xQueue, i8* %pvBuffer, i32 %xTicksToWait) local_unnamed_addr #0 section ".csection3" !dbg !5305 {
entry:
  %xTicksToWait.addr = alloca i32, align 4
  %xTimeOut = alloca %struct.xTIME_OUT, align 4
  call void @llvm.dbg.value(metadata %struct.QueueDefinition* %xQueue, metadata !5307, metadata !DIExpression()), !dbg !5319
  call void @llvm.dbg.value(metadata i8* %pvBuffer, metadata !5308, metadata !DIExpression()), !dbg !5319
  call void @llvm.dbg.value(metadata i32 %xTicksToWait, metadata !5309, metadata !DIExpression()), !dbg !5319
  store i32 %xTicksToWait, i32* %xTicksToWait.addr, align 4, !tbaa !1105
  call void @llvm.dbg.value(metadata i32 0, metadata !5310, metadata !DIExpression()), !dbg !5319
  %0 = bitcast %struct.xTIME_OUT* %xTimeOut to i8*, !dbg !5320
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #18, !dbg !5320
  call void @llvm.dbg.declare(metadata %struct.xTIME_OUT* %xTimeOut, metadata !5311, metadata !DIExpression()), !dbg !5321
  call void @llvm.dbg.value(metadata %struct.QueueDefinition* %xQueue, metadata !5313, metadata !DIExpression()), !dbg !5319
  %cmp = icmp eq %struct.QueueDefinition* %xQueue, null, !dbg !5322
  br i1 %cmp, label %if.then, label %if.end, !dbg !5324

if.then:                                          ; preds = %entry
  %1 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #18, !dbg !5325, !srcloc !4057
  call void @llvm.dbg.value(metadata i32 %1, metadata !4054, metadata !DIExpression()) #18, !dbg !5328
  br label %for.cond, !dbg !5329

for.cond:                                         ; preds = %for.cond, %if.then
  br label %for.cond, !dbg !5330, !llvm.loop !5333

if.end:                                           ; preds = %entry
  %cmp1 = icmp eq i8* %pvBuffer, null, !dbg !5335
  br i1 %cmp1, label %land.rhs, label %if.end6, !dbg !5335

land.rhs:                                         ; preds = %if.end
  %uxItemSize = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %xQueue, i32 0, i32 7, !dbg !5335
  %2 = load i32, i32* %uxItemSize, align 4, !dbg !5335, !tbaa !4073
  %cmp2.not = icmp eq i32 %2, 0, !dbg !5335
  br i1 %cmp2.not, label %if.end6, label %if.then4, !dbg !5337

if.then4:                                         ; preds = %land.rhs
  %3 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #18, !dbg !5338, !srcloc !4057
  call void @llvm.dbg.value(metadata i32 %3, metadata !4054, metadata !DIExpression()) #18, !dbg !5341
  br label %for.cond5, !dbg !5342

for.cond5:                                        ; preds = %for.cond5, %if.then4
  br label %for.cond5, !dbg !5343, !llvm.loop !5346

if.end6:                                          ; preds = %land.rhs, %if.end
  %call = call i32 @icall_arg0(i32 0, i32 ()* @xTaskGetSchedulerState), !dbg !5348
  %cmp7 = icmp eq i32 %call, 0, !dbg !5348
  %4 = load i32, i32* %xTicksToWait.addr, align 4, !dbg !5348
  call void @llvm.dbg.value(metadata i32 %4, metadata !5309, metadata !DIExpression()), !dbg !5319
  %cmp9 = icmp ne i32 %4, 0, !dbg !5348
  %cmp13 = and i1 %cmp7, %cmp9, !dbg !5348
  br i1 %cmp13, label %if.then14, label %for.cond17.preheader, !dbg !5351

for.cond17.preheader:                             ; preds = %if.end6
  %uxMessagesWaiting18 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %xQueue, i32 0, i32 5
  %pcReadFrom = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %xQueue, i32 0, i32 2, i32 0, i32 1
  %xTasksWaitingToReceive = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %xQueue, i32 0, i32 4
  %uxNumberOfItems = getelementptr inbounds %struct.xLIST, %struct.xLIST* %xTasksWaitingToReceive, i32 0, i32 0
  %cRxLock = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %xQueue, i32 0, i32 8
  %cTxLock = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %xQueue, i32 0, i32 9
  %xTasksWaitingToReceive64 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %xQueue, i32 0, i32 4
  br label %for.cond17, !dbg !5352

if.then14:                                        ; preds = %if.end6
  %5 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #18, !dbg !5353, !srcloc !4057
  call void @llvm.dbg.value(metadata i32 %5, metadata !4054, metadata !DIExpression()) #18, !dbg !5356
  br label %for.cond15, !dbg !5357

for.cond15:                                       ; preds = %for.cond15, %if.then14
  br label %for.cond15, !dbg !5358, !llvm.loop !5361

for.cond17:                                       ; preds = %if.end82, %for.cond17.preheader
  %xEntryTimeSet.0 = phi i32 [ %xEntryTimeSet.2, %if.end82 ], [ 0, %for.cond17.preheader ], !dbg !5363
  %retval.0 = phi i32 [ %retval.1, %if.end82 ], [ undef, %for.cond17.preheader ]
  call void @llvm.dbg.value(metadata i32 %xEntryTimeSet.0, metadata !5310, metadata !DIExpression()), !dbg !5319
  call void @xcall_arg0(i32 0, void ()* @vPortEnterCritical), !dbg !5364
  %6 = load volatile i32, i32* %uxMessagesWaiting18, align 4, !dbg !5365, !tbaa !4080
  call void @llvm.dbg.value(metadata i32 %6, metadata !5314, metadata !DIExpression()), !dbg !5366
  %cmp19.not = icmp eq i32 %6, 0, !dbg !5367
  br i1 %cmp19.not, label %if.else35, label %if.then20, !dbg !5369

if.then20:                                        ; preds = %for.cond17
  %7 = load i8*, i8** %pcReadFrom, align 4, !dbg !5370, !tbaa !1246
  call void @llvm.dbg.value(metadata i8* %7, metadata !5312, metadata !DIExpression()), !dbg !5319
  call fastcc void @prvCopyDataFromQueue(%struct.QueueDefinition* nonnull %xQueue, i8* %pvBuffer), !dbg !5372
  store i8* %7, i8** %pcReadFrom, align 4, !dbg !5373, !tbaa !1246
  %8 = load volatile i32, i32* %uxNumberOfItems, align 4, !dbg !5374, !tbaa !4334
  %cmp25.not = icmp eq i32 %8, 0, !dbg !5374
  br i1 %cmp25.not, label %if.end34, label %if.then27, !dbg !5376

if.then27:                                        ; preds = %if.then20
  %call29 = call i32 @icall_arg1p(i32 0, i8* bitcast (i32 (%struct.xLIST*)* @xTaskRemoveFromEventList to i8*), i8* %9, i32 ptrtoint (%struct.xLIST* getelementptr (%struct.xLIST, %struct.xLIST* null, i32 1) to i32)), !dbg !5377
  %cmp30.not = icmp eq i32 %call29, 0, !dbg !5380
  br i1 %cmp30.not, label %if.end34, label %if.then31, !dbg !5381
  %9 = bitcast %struct.xLIST* %xTasksWaitingToReceive to i8*

if.then31:                                        ; preds = %if.then27
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !5382, !tbaa !1105
  call void asm sideeffect "dsb", "~{memory}"() #18, !dbg !5382, !srcloc !5385
  call void asm sideeffect "isb", ""() #18, !dbg !5382, !srcloc !5386
  br label %if.end34, !dbg !5387

if.end34:                                         ; preds = %if.then31, %if.then27, %if.then20
  call void @xcall_arg0(i32 0, void ()* @vPortExitCritical), !dbg !5388
  br label %cleanup, !dbg !5389

if.else35:                                        ; preds = %for.cond17
  %10 = load i32, i32* %xTicksToWait.addr, align 4, !dbg !5390, !tbaa !1105
  call void @llvm.dbg.value(metadata i32 %10, metadata !5309, metadata !DIExpression()), !dbg !5319
  %cmp36 = icmp eq i32 %10, 0, !dbg !5393
  br i1 %cmp36, label %if.then37, label %if.else38, !dbg !5394

if.then37:                                        ; preds = %if.else35
  call void @xcall_arg0(i32 0, void ()* @vPortExitCritical), !dbg !5395
  br label %cleanup, !dbg !5397

if.else38:                                        ; preds = %if.else35
  %cmp39 = icmp eq i32 %xEntryTimeSet.0, 0, !dbg !5398
  br i1 %cmp39, label %if.then40, label %cleanup, !dbg !5400

if.then40:                                        ; preds = %if.else38
  call void @xcall_arg1p(i32 0, i8* bitcast (void (%struct.xTIME_OUT*)* @vTaskInternalSetTimeOutState to i8*), i8* %11, i32 mul nuw (i32 ptrtoint (i32* getelementptr (i32, i32* null, i32 1) to i32), i32 2)), !dbg !5401
  call void @llvm.dbg.value(metadata i32 1, metadata !5310, metadata !DIExpression()), !dbg !5319
  br label %cleanup, !dbg !5403
  %11 = bitcast %struct.xTIME_OUT* %xTimeOut to i8*

cleanup:                                          ; preds = %if.then40, %if.else38, %if.then37, %if.end34
  %xEntryTimeSet.2 = phi i32 [ %xEntryTimeSet.0, %if.end34 ], [ %xEntryTimeSet.0, %if.then37 ], [ 1, %if.else38 ], [ 1, %if.then40 ], !dbg !5319
  %retval.1 = phi i32 [ 1, %if.end34 ], [ 0, %if.then37 ], [ %retval.0, %if.else38 ], [ %retval.0, %if.then40 ]
  %cond87 = phi i1 [ false, %if.end34 ], [ false, %if.then37 ], [ true, %if.else38 ], [ true, %if.then40 ]
  call void @llvm.dbg.value(metadata i32 %xEntryTimeSet.2, metadata !5310, metadata !DIExpression()), !dbg !5319
  br i1 %cond87, label %cleanup.cont, label %cleanup83

cleanup.cont:                                     ; preds = %cleanup
  call void @xcall_arg0(i32 0, void ()* @vPortExitCritical), !dbg !5404
  call void @vTaskSuspendAll() #18, !dbg !5405
  call void @xcall_arg0(i32 0, void ()* @vPortEnterCritical), !dbg !5406
  %12 = load volatile i8, i8* %cRxLock, align 4, !dbg !5407, !tbaa !4091
  %cmp45 = icmp eq i8 %12, -1, !dbg !5407
  br i1 %cmp45, label %if.then47, label %if.end49, !dbg !5410

if.then47:                                        ; preds = %cleanup.cont
  store volatile i8 0, i8* %cRxLock, align 4, !dbg !5411, !tbaa !4091
  br label %if.end49, !dbg !5411

if.end49:                                         ; preds = %if.then47, %cleanup.cont
  %13 = load volatile i8, i8* %cTxLock, align 1, !dbg !5413, !tbaa !4094
  %cmp51 = icmp eq i8 %13, -1, !dbg !5413
  br i1 %cmp51, label %if.then53, label %if.end55, !dbg !5410

if.then53:                                        ; preds = %if.end49
  store volatile i8 0, i8* %cTxLock, align 1, !dbg !5415, !tbaa !4094
  br label %if.end55, !dbg !5415

if.end55:                                         ; preds = %if.then53, %if.end49
  call void @xcall_arg0(i32 0, void ()* @vPortExitCritical), !dbg !5406
  call void @llvm.dbg.value(metadata i32* %xTicksToWait.addr, metadata !5309, metadata !DIExpression(DW_OP_deref)), !dbg !5319
  %call56 = call i32 @xTaskCheckForTimeOut(%struct.xTIME_OUT* nonnull %xTimeOut, i32* nonnull %xTicksToWait.addr) #18, !dbg !5417
  %cmp57 = icmp eq i32 %call56, 0, !dbg !5419
  br i1 %cmp57, label %if.then59, label %if.else74, !dbg !5420

if.then59:                                        ; preds = %if.end55
  %call60 = call fastcc i32 @prvIsQueueEmpty(%struct.QueueDefinition* nonnull %xQueue), !dbg !5421
  %cmp61.not = icmp eq i32 %call60, 0, !dbg !5424
  br i1 %cmp61.not, label %if.else71, label %if.then63, !dbg !5425

if.then63:                                        ; preds = %if.then59
  %14 = load i32, i32* %xTicksToWait.addr, align 4, !dbg !5426, !tbaa !1105
  call void @llvm.dbg.value(metadata i32 %14, metadata !5309, metadata !DIExpression()), !dbg !5319
  call void @vTaskPlaceOnEventList(%struct.xLIST* nonnull %xTasksWaitingToReceive64, i32 %14) #18, !dbg !5428
  call fastcc void @prvUnlockQueue(%struct.QueueDefinition* nonnull %xQueue), !dbg !5429
  %call65 = call i32 @icall_arg0(i32 0, i32 ()* @xTaskResumeAll), !dbg !5430
  %cmp66 = icmp eq i32 %call65, 0, !dbg !5432
  br i1 %cmp66, label %if.then68, label %if.end82, !dbg !5433

if.then68:                                        ; preds = %if.then63
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !5434, !tbaa !1105
  call void asm sideeffect "dsb", "~{memory}"() #18, !dbg !5434, !srcloc !5437
  call void asm sideeffect "isb", ""() #18, !dbg !5434, !srcloc !5438
  br label %if.end82, !dbg !5439

if.else71:                                        ; preds = %if.then59
  call fastcc void @prvUnlockQueue(%struct.QueueDefinition* nonnull %xQueue), !dbg !5440
  %call72 = call i32 @icall_arg0(i32 0, i32 ()* @xTaskResumeAll), !dbg !5442
  br label %if.end82

if.else74:                                        ; preds = %if.end55
  call fastcc void @prvUnlockQueue(%struct.QueueDefinition* nonnull %xQueue), !dbg !5443
  %call75 = call i32 @icall_arg0(i32 0, i32 ()* @xTaskResumeAll), !dbg !5445
  %call76 = call fastcc i32 @prvIsQueueEmpty(%struct.QueueDefinition* nonnull %xQueue), !dbg !5446
  %cmp77.not = icmp eq i32 %call76, 0, !dbg !5448
  br i1 %cmp77.not, label %if.end82, label %cleanup83, !dbg !5449

if.end82:                                         ; preds = %if.else74, %if.else71, %if.then68, %if.then63
  br label %for.cond17, !dbg !5450, !llvm.loop !5451

cleanup83:                                        ; preds = %if.else74, %cleanup
  %retval.2 = phi i32 [ %retval.1, %cleanup ], [ 0, %if.else74 ], !dbg !5453
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #18, !dbg !5454
  ret i32 %retval.2, !dbg !5454
}

; Function Attrs: nounwind
define dso_local i32 @xQueueReceiveFromISR(%struct.QueueDefinition* %xQueue, i8* %pvBuffer, i32* %pxHigherPriorityTaskWoken) local_unnamed_addr #0 section ".csection3" !dbg !5455 {
entry:
  call void @llvm.dbg.value(metadata %struct.QueueDefinition* %xQueue, metadata !5459, metadata !DIExpression()), !dbg !5470
  call void @llvm.dbg.value(metadata i8* %pvBuffer, metadata !5460, metadata !DIExpression()), !dbg !5470
  call void @llvm.dbg.value(metadata i32* %pxHigherPriorityTaskWoken, metadata !5461, metadata !DIExpression()), !dbg !5470
  call void @llvm.dbg.value(metadata %struct.QueueDefinition* %xQueue, metadata !5464, metadata !DIExpression()), !dbg !5470
  %cmp = icmp eq %struct.QueueDefinition* %xQueue, null, !dbg !5471
  br i1 %cmp, label %if.then, label %if.end, !dbg !5473

if.then:                                          ; preds = %entry
  %0 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #18, !dbg !5474, !srcloc !4057
  call void @llvm.dbg.value(metadata i32 %0, metadata !4054, metadata !DIExpression()) #18, !dbg !5477
  br label %for.cond, !dbg !5478

for.cond:                                         ; preds = %for.cond, %if.then
  br label %for.cond, !dbg !5479, !llvm.loop !5482

if.end:                                           ; preds = %entry
  %cmp1 = icmp eq i8* %pvBuffer, null, !dbg !5484
  br i1 %cmp1, label %land.rhs, label %if.end6, !dbg !5484

land.rhs:                                         ; preds = %if.end
  %uxItemSize = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %xQueue, i32 0, i32 7, !dbg !5484
  %1 = load i32, i32* %uxItemSize, align 4, !dbg !5484, !tbaa !4073
  %cmp2.not = icmp eq i32 %1, 0, !dbg !5484
  br i1 %cmp2.not, label %if.end6, label %if.then4, !dbg !5486

if.then4:                                         ; preds = %land.rhs
  %2 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #18, !dbg !5487, !srcloc !4057
  call void @llvm.dbg.value(metadata i32 %2, metadata !4054, metadata !DIExpression()) #18, !dbg !5490
  br label %for.cond5, !dbg !5491

for.cond5:                                        ; preds = %for.cond5, %if.then4
  br label %for.cond5, !dbg !5492, !llvm.loop !5495

if.end6:                                          ; preds = %land.rhs, %if.end
  call void @xcall_arg0(i32 0, void ()* @vPortValidateInterruptPriority), !dbg !5497
  %3 = call { i32, i32 } asm sideeffect "\09mrs $0, basepri\09\09\09\09\09\09\09\09\09\09\09\0A\09mov $1, $2\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $1\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,=r,i,~{memory}"(i32 80) #18, !dbg !5498, !srcloc !4975
  call void @llvm.dbg.value(metadata i32 undef, metadata !4972, metadata !DIExpression()) #18, !dbg !5500
  call void @llvm.dbg.value(metadata i32 undef, metadata !4973, metadata !DIExpression()) #18, !dbg !5500
  call void @llvm.dbg.value(metadata i32 undef, metadata !5463, metadata !DIExpression()), !dbg !5470
  %uxMessagesWaiting7 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %xQueue, i32 0, i32 5, !dbg !5501
  %4 = load volatile i32, i32* %uxMessagesWaiting7, align 4, !dbg !5501, !tbaa !4080
  call void @llvm.dbg.value(metadata i32 %4, metadata !5465, metadata !DIExpression()), !dbg !5502
  %cmp8.not = icmp eq i32 %4, 0, !dbg !5503
  br i1 %cmp8.not, label %if.end47, label %if.then9, !dbg !5504

if.then9:                                         ; preds = %if.end6
  %cRxLock10 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %xQueue, i32 0, i32 8, !dbg !5505
  %5 = load volatile i8, i8* %cRxLock10, align 4, !dbg !5505, !tbaa !4091
  call void @llvm.dbg.value(metadata i8 %5, metadata !5467, metadata !DIExpression()), !dbg !5506
  call fastcc void @prvCopyDataFromQueue(%struct.QueueDefinition* nonnull %xQueue, i8* %pvBuffer), !dbg !5507
  %sub = add i32 %4, -1, !dbg !5508
  store volatile i32 %sub, i32* %uxMessagesWaiting7, align 4, !dbg !5509, !tbaa !4080
  switch i8 %5, label %if.end41 [
    i8 -1, label %if.then14
    i8 127, label %if.then39
  ], !dbg !5510

if.then14:                                        ; preds = %if.then9
  %xTasksWaitingToSend = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %xQueue, i32 0, i32 3, !dbg !5511
  %uxNumberOfItems = getelementptr inbounds %struct.xLIST, %struct.xLIST* %xTasksWaitingToSend, i32 0, i32 0, !dbg !5511
  %6 = load volatile i32, i32* %uxNumberOfItems, align 4, !dbg !5511, !tbaa !4101
  %cmp15.not = icmp eq i32 %6, 0, !dbg !5511
  br i1 %cmp15.not, label %if.end47, label %if.then19, !dbg !5515

if.then19:                                        ; preds = %if.then14
  %call21 = call i32 @icall_arg1p(i32 0, i8* bitcast (i32 (%struct.xLIST*)* @xTaskRemoveFromEventList to i8*), i8* %7, i32 ptrtoint (%struct.xLIST* getelementptr (%struct.xLIST, %struct.xLIST* null, i32 1) to i32)), !dbg !5516
  %cmp22 = icmp ne i32 %call21, 0, !dbg !5519
  %cmp25 = icmp ne i32* %pxHigherPriorityTaskWoken, null
  %or.cond = and i1 %cmp25, %cmp22, !dbg !5520
  br i1 %or.cond, label %if.then27, label %if.end47, !dbg !5520
  %7 = bitcast %struct.xLIST* %xTasksWaitingToSend to i8*

if.then27:                                        ; preds = %if.then19
  store i32 1, i32* %pxHigherPriorityTaskWoken, align 4, !dbg !5521, !tbaa !1085
  br label %if.end47, !dbg !5525

if.then39:                                        ; preds = %if.then9
  %8 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #18, !dbg !5526, !srcloc !4057
  call void @llvm.dbg.value(metadata i32 %8, metadata !4054, metadata !DIExpression()) #18, !dbg !5531
  br label %for.cond40, !dbg !5532

for.cond40:                                       ; preds = %for.cond40, %if.then39
  br label %for.cond40, !dbg !5533, !llvm.loop !5536

if.end41:                                         ; preds = %if.then9
  %add = add i8 %5, 1, !dbg !5538
  store volatile i8 %add, i8* %cRxLock10, align 4, !dbg !5539, !tbaa !4091
  br label %if.end47

if.end47:                                         ; preds = %if.end41, %if.then27, %if.then19, %if.then14, %if.end6
  %xReturn.0 = phi i32 [ 1, %if.then19 ], [ 1, %if.then27 ], [ 1, %if.then14 ], [ 1, %if.end41 ], [ 0, %if.end6 ], !dbg !5540
  %asmresult.i = extractvalue { i32, i32 } %3, 0, !dbg !5498
  call void @llvm.dbg.value(metadata i32 %asmresult.i, metadata !5463, metadata !DIExpression()), !dbg !5470
  call void @llvm.dbg.value(metadata i32 %asmresult.i, metadata !4972, metadata !DIExpression()) #18, !dbg !5500
  call void @llvm.dbg.value(metadata i32 %xReturn.0, metadata !5462, metadata !DIExpression()), !dbg !5470
  call void @llvm.dbg.value(metadata i32 undef, metadata !5017, metadata !DIExpression()) #18, !dbg !5541
  call void asm sideeffect "\09msr basepri, $0\09", "r,~{memory}"(i32 %asmresult.i) #18, !dbg !5543, !srcloc !5023
  ret i32 %xReturn.0, !dbg !5544
}

; Function Attrs: nounwind
define dso_local i32 @xQueuePeekFromISR(%struct.QueueDefinition* %xQueue, i8* %pvBuffer) local_unnamed_addr #0 section ".csection3" !dbg !5545 {
entry:
  call void @llvm.dbg.value(metadata %struct.QueueDefinition* %xQueue, metadata !5549, metadata !DIExpression()), !dbg !5555
  call void @llvm.dbg.value(metadata i8* %pvBuffer, metadata !5550, metadata !DIExpression()), !dbg !5555
  call void @llvm.dbg.value(metadata %struct.QueueDefinition* %xQueue, metadata !5554, metadata !DIExpression()), !dbg !5555
  %cmp = icmp eq %struct.QueueDefinition* %xQueue, null, !dbg !5556
  br i1 %cmp, label %if.then, label %if.end, !dbg !5558

if.then:                                          ; preds = %entry
  %0 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #18, !dbg !5559, !srcloc !4057
  call void @llvm.dbg.value(metadata i32 %0, metadata !4054, metadata !DIExpression()) #18, !dbg !5562
  br label %for.cond, !dbg !5563

for.cond:                                         ; preds = %for.cond, %if.then
  br label %for.cond, !dbg !5564, !llvm.loop !5567

if.end:                                           ; preds = %entry
  %cmp1 = icmp eq i8* %pvBuffer, null, !dbg !5569
  br i1 %cmp1, label %land.rhs, label %if.end6, !dbg !5569

land.rhs:                                         ; preds = %if.end
  %uxItemSize = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %xQueue, i32 0, i32 7, !dbg !5569
  %1 = load i32, i32* %uxItemSize, align 4, !dbg !5569, !tbaa !4073
  %cmp2.not = icmp eq i32 %1, 0, !dbg !5569
  br i1 %cmp2.not, label %if.end6, label %if.then4, !dbg !5571

if.then4:                                         ; preds = %land.rhs
  %2 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #18, !dbg !5572, !srcloc !4057
  call void @llvm.dbg.value(metadata i32 %2, metadata !4054, metadata !DIExpression()) #18, !dbg !5575
  br label %for.cond5, !dbg !5576

for.cond5:                                        ; preds = %for.cond5, %if.then4
  br label %for.cond5, !dbg !5577, !llvm.loop !5580

if.end6:                                          ; preds = %land.rhs, %if.end
  %uxItemSize7 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %xQueue, i32 0, i32 7, !dbg !5582
  %3 = load i32, i32* %uxItemSize7, align 4, !dbg !5582, !tbaa !4073
  %cmp8.not = icmp eq i32 %3, 0, !dbg !5582
  br i1 %cmp8.not, label %if.then11, label %if.end13, !dbg !5584

if.then11:                                        ; preds = %if.end6
  %4 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #18, !dbg !5585, !srcloc !4057
  call void @llvm.dbg.value(metadata i32 %4, metadata !4054, metadata !DIExpression()) #18, !dbg !5588
  br label %for.cond12, !dbg !5589

for.cond12:                                       ; preds = %for.cond12, %if.then11
  br label %for.cond12, !dbg !5590, !llvm.loop !5593

if.end13:                                         ; preds = %if.end6
  call void @xcall_arg0(i32 0, void ()* @vPortValidateInterruptPriority), !dbg !5595
  %5 = call { i32, i32 } asm sideeffect "\09mrs $0, basepri\09\09\09\09\09\09\09\09\09\09\09\0A\09mov $1, $2\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $1\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,=r,i,~{memory}"(i32 80) #18, !dbg !5596, !srcloc !4975
  call void @llvm.dbg.value(metadata i32 undef, metadata !4972, metadata !DIExpression()) #18, !dbg !5598
  call void @llvm.dbg.value(metadata i32 undef, metadata !4973, metadata !DIExpression()) #18, !dbg !5598
  call void @llvm.dbg.value(metadata i32 undef, metadata !5552, metadata !DIExpression()), !dbg !5555
  %uxMessagesWaiting = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %xQueue, i32 0, i32 5, !dbg !5599
  %6 = load volatile i32, i32* %uxMessagesWaiting, align 4, !dbg !5599, !tbaa !4080
  %cmp14.not = icmp eq i32 %6, 0, !dbg !5602
  br i1 %cmp14.not, label %if.end21, label %if.then16, !dbg !5603

if.then16:                                        ; preds = %if.end13
  %pcReadFrom = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %xQueue, i32 0, i32 2, i32 0, i32 1, !dbg !5604
  %7 = load i8*, i8** %pcReadFrom, align 4, !dbg !5604, !tbaa !1246
  call void @llvm.dbg.value(metadata i8* %7, metadata !5553, metadata !DIExpression()), !dbg !5555
  call fastcc void @prvCopyDataFromQueue(%struct.QueueDefinition* nonnull %xQueue, i8* %pvBuffer), !dbg !5606
  store i8* %7, i8** %pcReadFrom, align 4, !dbg !5607, !tbaa !1246
  call void @llvm.dbg.value(metadata i32 1, metadata !5551, metadata !DIExpression()), !dbg !5555
  br label %if.end21, !dbg !5608

if.end21:                                         ; preds = %if.then16, %if.end13
  %xReturn.0 = phi i32 [ 1, %if.then16 ], [ 0, %if.end13 ], !dbg !5609
  %asmresult.i = extractvalue { i32, i32 } %5, 0, !dbg !5596
  call void @llvm.dbg.value(metadata i32 %asmresult.i, metadata !5552, metadata !DIExpression()), !dbg !5555
  call void @llvm.dbg.value(metadata i32 %asmresult.i, metadata !4972, metadata !DIExpression()) #18, !dbg !5598
  call void @llvm.dbg.value(metadata i32 %xReturn.0, metadata !5551, metadata !DIExpression()), !dbg !5555
  call void @llvm.dbg.value(metadata i32 undef, metadata !5017, metadata !DIExpression()) #18, !dbg !5610
  call void asm sideeffect "\09msr basepri, $0\09", "r,~{memory}"(i32 %asmresult.i) #18, !dbg !5612, !srcloc !5023
  ret i32 %xReturn.0, !dbg !5613
}

; Function Attrs: nounwind
define dso_local i32 @uxQueueMessagesWaiting(%struct.QueueDefinition* %xQueue) local_unnamed_addr #0 section ".csection3" !dbg !5614 {
entry:
  call void @llvm.dbg.value(metadata %struct.QueueDefinition* %xQueue, metadata !5619, metadata !DIExpression()), !dbg !5621
  %cmp = icmp eq %struct.QueueDefinition* %xQueue, null, !dbg !5622
  br i1 %cmp, label %if.then, label %if.end, !dbg !5624

if.then:                                          ; preds = %entry
  %0 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #18, !dbg !5625, !srcloc !4057
  call void @llvm.dbg.value(metadata i32 %0, metadata !4054, metadata !DIExpression()) #18, !dbg !5628
  br label %for.cond, !dbg !5629

for.cond:                                         ; preds = %for.cond, %if.then
  br label %for.cond, !dbg !5630, !llvm.loop !5633

if.end:                                           ; preds = %entry
  call void @xcall_arg0(i32 0, void ()* @vPortEnterCritical), !dbg !5635
  %uxMessagesWaiting = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %xQueue, i32 0, i32 5, !dbg !5636
  %1 = load volatile i32, i32* %uxMessagesWaiting, align 4, !dbg !5636, !tbaa !4080
  call void @llvm.dbg.value(metadata i32 %1, metadata !5620, metadata !DIExpression()), !dbg !5621
  call void @xcall_arg0(i32 0, void ()* @vPortExitCritical), !dbg !5638
  ret i32 %1, !dbg !5639
}

; Function Attrs: nounwind
define dso_local i32 @uxQueueSpacesAvailable(%struct.QueueDefinition* %xQueue) local_unnamed_addr #0 section ".csection3" !dbg !5640 {
entry:
  call void @llvm.dbg.value(metadata %struct.QueueDefinition* %xQueue, metadata !5642, metadata !DIExpression()), !dbg !5645
  call void @llvm.dbg.value(metadata %struct.QueueDefinition* %xQueue, metadata !5644, metadata !DIExpression()), !dbg !5645
  %cmp = icmp eq %struct.QueueDefinition* %xQueue, null, !dbg !5646
  br i1 %cmp, label %if.then, label %if.end, !dbg !5648

if.then:                                          ; preds = %entry
  %0 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #18, !dbg !5649, !srcloc !4057
  call void @llvm.dbg.value(metadata i32 %0, metadata !4054, metadata !DIExpression()) #18, !dbg !5652
  br label %for.cond, !dbg !5653

for.cond:                                         ; preds = %for.cond, %if.then
  br label %for.cond, !dbg !5654, !llvm.loop !5657

if.end:                                           ; preds = %entry
  call void @xcall_arg0(i32 0, void ()* @vPortEnterCritical), !dbg !5659
  %uxLength = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %xQueue, i32 0, i32 6, !dbg !5660
  %1 = load i32, i32* %uxLength, align 4, !dbg !5660, !tbaa !4071
  %uxMessagesWaiting = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %xQueue, i32 0, i32 5, !dbg !5662
  %2 = load volatile i32, i32* %uxMessagesWaiting, align 4, !dbg !5662, !tbaa !4080
  %sub = sub i32 %1, %2, !dbg !5663
  call void @llvm.dbg.value(metadata i32 %sub, metadata !5643, metadata !DIExpression()), !dbg !5645
  call void @xcall_arg0(i32 0, void ()* @vPortExitCritical), !dbg !5664
  ret i32 %sub, !dbg !5665
}

; Function Attrs: nounwind
define dso_local i32 @uxQueueMessagesWaitingFromISR(%struct.QueueDefinition* %xQueue) local_unnamed_addr #0 section ".csection3" !dbg !5666 {
entry:
  call void @llvm.dbg.value(metadata %struct.QueueDefinition* %xQueue, metadata !5668, metadata !DIExpression()), !dbg !5671
  call void @llvm.dbg.value(metadata %struct.QueueDefinition* %xQueue, metadata !5670, metadata !DIExpression()), !dbg !5671
  %cmp = icmp eq %struct.QueueDefinition* %xQueue, null, !dbg !5672
  br i1 %cmp, label %if.then, label %if.end, !dbg !5674

if.then:                                          ; preds = %entry
  %0 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #18, !dbg !5675, !srcloc !4057
  call void @llvm.dbg.value(metadata i32 %0, metadata !4054, metadata !DIExpression()) #18, !dbg !5678
  br label %for.cond, !dbg !5679

for.cond:                                         ; preds = %for.cond, %if.then
  br label %for.cond, !dbg !5680, !llvm.loop !5683

if.end:                                           ; preds = %entry
  %uxMessagesWaiting = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %xQueue, i32 0, i32 5, !dbg !5685
  %1 = load volatile i32, i32* %uxMessagesWaiting, align 4, !dbg !5685, !tbaa !4080
  call void @llvm.dbg.value(metadata i32 %1, metadata !5669, metadata !DIExpression()), !dbg !5671
  ret i32 %1, !dbg !5686
}

; Function Attrs: nounwind
define dso_local void @vQueueDelete(%struct.QueueDefinition* %xQueue) local_unnamed_addr #0 section ".csection3" !dbg !5687 {
entry:
  call void @llvm.dbg.value(metadata %struct.QueueDefinition* %xQueue, metadata !5691, metadata !DIExpression()), !dbg !5693
  call void @llvm.dbg.value(metadata %struct.QueueDefinition* %xQueue, metadata !5692, metadata !DIExpression()), !dbg !5693
  %cmp = icmp eq %struct.QueueDefinition* %xQueue, null, !dbg !5694
  br i1 %cmp, label %if.then, label %if.end, !dbg !5696

if.then:                                          ; preds = %entry
  %0 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #18, !dbg !5697, !srcloc !4057
  call void @llvm.dbg.value(metadata i32 %0, metadata !4054, metadata !DIExpression()) #18, !dbg !5700
  br label %for.cond, !dbg !5701

for.cond:                                         ; preds = %for.cond, %if.then
  br label %for.cond, !dbg !5702, !llvm.loop !5705

if.end:                                           ; preds = %entry
  call void @vQueueUnregisterQueue(%struct.QueueDefinition* nonnull %xQueue), !dbg !5707
  %1 = bitcast %struct.QueueDefinition* %xQueue to i8*, !dbg !5709
  call void @xcall_arg1p(i32 14, i8* bitcast (void (i8*)* @vPortFree to i8*), i8* %1, i32 ptrtoint (i8* getelementptr (i8, i8* null, i32 1) to i32)), !dbg !5711
  ret void, !dbg !5712
}

; Function Attrs: nounwind
define dso_local void @vQueueUnregisterQueue(%struct.QueueDefinition* readnone %xQueue) local_unnamed_addr #0 section ".csection3" !dbg !5713 {
entry:
  call void @llvm.dbg.value(metadata %struct.QueueDefinition* %xQueue, metadata !5715, metadata !DIExpression()), !dbg !5717
  %cmp = icmp eq %struct.QueueDefinition* %xQueue, null, !dbg !5718
  br i1 %cmp, label %if.then, label %for.body, !dbg !5720

if.then:                                          ; preds = %entry
  %0 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #18, !dbg !5721, !srcloc !4057
  call void @llvm.dbg.value(metadata i32 %0, metadata !4054, metadata !DIExpression()) #18, !dbg !5724
  br label %for.cond, !dbg !5725

for.cond:                                         ; preds = %for.cond, %if.then
  br label %for.cond, !dbg !5726, !llvm.loop !5729

for.body:                                         ; preds = %for.inc, %entry
  %ux.016 = phi i32 [ %inc, %for.inc ], [ 0, %entry ]
  call void @llvm.dbg.value(metadata i32 %ux.016, metadata !5716, metadata !DIExpression()), !dbg !5717
  %xHandle = getelementptr inbounds [8 x %struct.QUEUE_REGISTRY_ITEM], [8 x %struct.QUEUE_REGISTRY_ITEM]* @xQueueRegistry, i32 0, i32 %ux.016, i32 1, !dbg !5731
  %1 = load %struct.QueueDefinition*, %struct.QueueDefinition** %xHandle, align 4, !dbg !5731, !tbaa !5736
  %cmp3 = icmp eq %struct.QueueDefinition* %1, %xQueue, !dbg !5738
  br i1 %cmp3, label %if.then4, label %for.inc, !dbg !5739

if.then4:                                         ; preds = %for.body
  %pcQueueName = getelementptr inbounds [8 x %struct.QUEUE_REGISTRY_ITEM], [8 x %struct.QUEUE_REGISTRY_ITEM]* @xQueueRegistry, i32 0, i32 %ux.016, i32 0, !dbg !5740
  store i8* null, i8** %pcQueueName, align 4, !dbg !5742, !tbaa !5743
  store %struct.QueueDefinition* null, %struct.QueueDefinition** %xHandle, align 4, !dbg !5744, !tbaa !5736
  br label %for.end, !dbg !5745

for.inc:                                          ; preds = %for.body
  %inc = add nuw nsw i32 %ux.016, 1, !dbg !5746
  call void @llvm.dbg.value(metadata i32 %inc, metadata !5716, metadata !DIExpression()), !dbg !5717
  %exitcond.not = icmp eq i32 %inc, 8, !dbg !5747
  br i1 %exitcond.not, label %for.end, label %for.body, !dbg !5748, !llvm.loop !5749

for.end:                                          ; preds = %for.inc, %if.then4
  ret void, !dbg !5751
}

; Function Attrs: norecurse nounwind readonly willreturn
define dso_local i32 @uxQueueGetQueueNumber(%struct.QueueDefinition* nocapture readonly %xQueue) local_unnamed_addr #6 section ".csection3" !dbg !5752 {
entry:
  call void @llvm.dbg.value(metadata %struct.QueueDefinition* %xQueue, metadata !5756, metadata !DIExpression()), !dbg !5757
  %uxQueueNumber = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %xQueue, i32 0, i32 10, !dbg !5758
  %0 = load i32, i32* %uxQueueNumber, align 4, !dbg !5758, !tbaa !5759
  ret i32 %0, !dbg !5760
}

; Function Attrs: nofree norecurse nounwind willreturn writeonly
define dso_local void @vQueueSetQueueNumber(%struct.QueueDefinition* nocapture %xQueue, i32 %uxQueueNumber) local_unnamed_addr #7 section ".csection3" !dbg !5761 {
entry:
  call void @llvm.dbg.value(metadata %struct.QueueDefinition* %xQueue, metadata !5765, metadata !DIExpression()), !dbg !5767
  call void @llvm.dbg.value(metadata i32 %uxQueueNumber, metadata !5766, metadata !DIExpression()), !dbg !5767
  %uxQueueNumber1 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %xQueue, i32 0, i32 10, !dbg !5768
  store i32 %uxQueueNumber, i32* %uxQueueNumber1, align 4, !dbg !5769, !tbaa !5759
  ret void, !dbg !5770
}

; Function Attrs: norecurse nounwind readonly willreturn
define dso_local zeroext i8 @ucQueueGetQueueType(%struct.QueueDefinition* nocapture readonly %xQueue) local_unnamed_addr #6 section ".csection3" !dbg !5771 {
entry:
  call void @llvm.dbg.value(metadata %struct.QueueDefinition* %xQueue, metadata !5775, metadata !DIExpression()), !dbg !5776
  %ucQueueType = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %xQueue, i32 0, i32 11, !dbg !5777
  %0 = load i8, i8* %ucQueueType, align 4, !dbg !5777, !tbaa !4208
  ret i8 %0, !dbg !5778
}

; Function Attrs: nounwind
define dso_local i32 @xQueueIsQueueEmptyFromISR(%struct.QueueDefinition* %xQueue) local_unnamed_addr #0 section ".csection3" !dbg !5779 {
entry:
  call void @llvm.dbg.value(metadata %struct.QueueDefinition* %xQueue, metadata !5783, metadata !DIExpression()), !dbg !5786
  call void @llvm.dbg.value(metadata %struct.QueueDefinition* %xQueue, metadata !5785, metadata !DIExpression()), !dbg !5786
  %cmp = icmp eq %struct.QueueDefinition* %xQueue, null, !dbg !5787
  br i1 %cmp, label %if.then, label %if.end, !dbg !5789

if.then:                                          ; preds = %entry
  %0 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #18, !dbg !5790, !srcloc !4057
  call void @llvm.dbg.value(metadata i32 %0, metadata !4054, metadata !DIExpression()) #18, !dbg !5793
  br label %for.cond, !dbg !5794

for.cond:                                         ; preds = %for.cond, %if.then
  br label %for.cond, !dbg !5795, !llvm.loop !5798

if.end:                                           ; preds = %entry
  %uxMessagesWaiting = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %xQueue, i32 0, i32 5, !dbg !5800
  %1 = load volatile i32, i32* %uxMessagesWaiting, align 4, !dbg !5800, !tbaa !4080
  %cmp1 = icmp eq i32 %1, 0, !dbg !5802
  %xReturn.0 = zext i1 %cmp1 to i32, !dbg !5803
  call void @llvm.dbg.value(metadata i32 %xReturn.0, metadata !5784, metadata !DIExpression()), !dbg !5786
  ret i32 %xReturn.0, !dbg !5804
}

; Function Attrs: nounwind
define dso_local i32 @xQueueIsQueueFullFromISR(%struct.QueueDefinition* %xQueue) local_unnamed_addr #0 section ".csection3" !dbg !5805 {
entry:
  call void @llvm.dbg.value(metadata %struct.QueueDefinition* %xQueue, metadata !5807, metadata !DIExpression()), !dbg !5810
  call void @llvm.dbg.value(metadata %struct.QueueDefinition* %xQueue, metadata !5809, metadata !DIExpression()), !dbg !5810
  %cmp = icmp eq %struct.QueueDefinition* %xQueue, null, !dbg !5811
  br i1 %cmp, label %if.then, label %if.end, !dbg !5813

if.then:                                          ; preds = %entry
  %0 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #18, !dbg !5814, !srcloc !4057
  call void @llvm.dbg.value(metadata i32 %0, metadata !4054, metadata !DIExpression()) #18, !dbg !5817
  br label %for.cond, !dbg !5818

for.cond:                                         ; preds = %for.cond, %if.then
  br label %for.cond, !dbg !5819, !llvm.loop !5822

if.end:                                           ; preds = %entry
  %uxMessagesWaiting = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %xQueue, i32 0, i32 5, !dbg !5824
  %1 = load volatile i32, i32* %uxMessagesWaiting, align 4, !dbg !5824, !tbaa !4080
  %uxLength = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %xQueue, i32 0, i32 6, !dbg !5826
  %2 = load i32, i32* %uxLength, align 4, !dbg !5826, !tbaa !4071
  %cmp1 = icmp eq i32 %1, %2, !dbg !5827
  %xReturn.0 = zext i1 %cmp1 to i32, !dbg !5828
  call void @llvm.dbg.value(metadata i32 %xReturn.0, metadata !5808, metadata !DIExpression()), !dbg !5810
  ret i32 %xReturn.0, !dbg !5829
}

; Function Attrs: nounwind
define dso_local void @vQueueAddToRegistry(%struct.QueueDefinition* %xQueue, i8* %pcQueueName) local_unnamed_addr #0 section ".csection3" !dbg !5830 {
entry:
  call void @llvm.dbg.value(metadata %struct.QueueDefinition* %xQueue, metadata !5834, metadata !DIExpression()), !dbg !5839
  call void @llvm.dbg.value(metadata i8* %pcQueueName, metadata !5835, metadata !DIExpression()), !dbg !5839
  %cmp = icmp eq %struct.QueueDefinition* %xQueue, null, !dbg !5840
  br i1 %cmp, label %if.then, label %if.end, !dbg !5842

if.then:                                          ; preds = %entry
  %0 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #18, !dbg !5843, !srcloc !4057
  call void @llvm.dbg.value(metadata i32 %0, metadata !4054, metadata !DIExpression()) #18, !dbg !5846
  br label %for.cond, !dbg !5847

for.cond:                                         ; preds = %for.cond, %if.then
  br label %for.cond, !dbg !5848, !llvm.loop !5851

if.end:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata %struct.QUEUE_REGISTRY_ITEM* null, metadata !5837, metadata !DIExpression()), !dbg !5839
  %cmp1.not = icmp eq i8* %pcQueueName, null, !dbg !5853
  br i1 %cmp1.not, label %if.end17, label %for.body, !dbg !5855

for.body:                                         ; preds = %for.inc, %if.end
  %pxEntryToWrite.037 = phi %struct.QUEUE_REGISTRY_ITEM* [ %pxEntryToWrite.1, %for.inc ], [ null, %if.end ]
  %ux.036 = phi i32 [ %inc, %for.inc ], [ 0, %if.end ]
  call void @llvm.dbg.value(metadata %struct.QUEUE_REGISTRY_ITEM* %pxEntryToWrite.037, metadata !5837, metadata !DIExpression()), !dbg !5839
  call void @llvm.dbg.value(metadata i32 %ux.036, metadata !5836, metadata !DIExpression()), !dbg !5839
  %arrayidx = getelementptr inbounds [8 x %struct.QUEUE_REGISTRY_ITEM], [8 x %struct.QUEUE_REGISTRY_ITEM]* @xQueueRegistry, i32 0, i32 %ux.036, !dbg !5856
  %xHandle = getelementptr inbounds [8 x %struct.QUEUE_REGISTRY_ITEM], [8 x %struct.QUEUE_REGISTRY_ITEM]* @xQueueRegistry, i32 0, i32 %ux.036, i32 1, !dbg !5862
  %1 = load %struct.QueueDefinition*, %struct.QueueDefinition** %xHandle, align 4, !dbg !5862, !tbaa !5736
  %cmp5 = icmp eq %struct.QueueDefinition* %1, %xQueue, !dbg !5863
  br i1 %cmp5, label %if.end17, label %if.else, !dbg !5864

if.else:                                          ; preds = %for.body
  %cmp8 = icmp eq %struct.QUEUE_REGISTRY_ITEM* %pxEntryToWrite.037, null, !dbg !5865
  br i1 %cmp8, label %land.lhs.true, label %for.inc, !dbg !5867

land.lhs.true:                                    ; preds = %if.else
  %pcQueueName10 = getelementptr inbounds %struct.QUEUE_REGISTRY_ITEM, %struct.QUEUE_REGISTRY_ITEM* %arrayidx, i32 0, i32 0, !dbg !5868
  %2 = load i8*, i8** %pcQueueName10, align 4, !dbg !5868, !tbaa !5743
  %cmp11 = icmp eq i8* %2, null, !dbg !5869
  %spec.select = select i1 %cmp11, %struct.QUEUE_REGISTRY_ITEM* %arrayidx, %struct.QUEUE_REGISTRY_ITEM* null, !dbg !5870
  br label %for.inc, !dbg !5870

for.inc:                                          ; preds = %land.lhs.true, %if.else
  %pxEntryToWrite.1 = phi %struct.QUEUE_REGISTRY_ITEM* [ %pxEntryToWrite.037, %if.else ], [ %spec.select, %land.lhs.true ], !dbg !5839
  call void @llvm.dbg.value(metadata %struct.QUEUE_REGISTRY_ITEM* %pxEntryToWrite.1, metadata !5837, metadata !DIExpression()), !dbg !5839
  %inc = add nuw nsw i32 %ux.036, 1, !dbg !5871
  call void @llvm.dbg.value(metadata i32 %inc, metadata !5836, metadata !DIExpression()), !dbg !5839
  %exitcond.not = icmp eq i32 %inc, 8, !dbg !5872
  br i1 %exitcond.not, label %if.end17, label %for.body, !dbg !5873, !llvm.loop !5874

if.end17:                                         ; preds = %for.inc, %for.body, %if.end
  %pxEntryToWrite.2 = phi %struct.QUEUE_REGISTRY_ITEM* [ null, %if.end ], [ %pxEntryToWrite.1, %for.inc ], [ %arrayidx, %for.body ], !dbg !5839
  call void @llvm.dbg.value(metadata %struct.QUEUE_REGISTRY_ITEM* %pxEntryToWrite.2, metadata !5837, metadata !DIExpression()), !dbg !5839
  %cmp18.not = icmp eq %struct.QUEUE_REGISTRY_ITEM* %pxEntryToWrite.2, null, !dbg !5876
  br i1 %cmp18.not, label %if.end22, label %if.then19, !dbg !5878

if.then19:                                        ; preds = %if.end17
  %pcQueueName20 = getelementptr inbounds %struct.QUEUE_REGISTRY_ITEM, %struct.QUEUE_REGISTRY_ITEM* %pxEntryToWrite.2, i32 0, i32 0, !dbg !5879
  store i8* %pcQueueName, i8** %pcQueueName20, align 4, !dbg !5881, !tbaa !5743
  %xHandle21 = getelementptr inbounds %struct.QUEUE_REGISTRY_ITEM, %struct.QUEUE_REGISTRY_ITEM* %pxEntryToWrite.2, i32 0, i32 1, !dbg !5882
  store %struct.QueueDefinition* %xQueue, %struct.QueueDefinition** %xHandle21, align 4, !dbg !5883, !tbaa !5736
  br label %if.end22, !dbg !5884

if.end22:                                         ; preds = %if.then19, %if.end17
  ret void, !dbg !5885
}

; Function Attrs: nounwind
define dso_local i8* @pcQueueGetName(%struct.QueueDefinition* readnone %xQueue) local_unnamed_addr #0 section ".csection3" !dbg !5886 {
entry:
  call void @llvm.dbg.value(metadata %struct.QueueDefinition* %xQueue, metadata !5890, metadata !DIExpression()), !dbg !5893
  call void @llvm.dbg.value(metadata i8* null, metadata !5892, metadata !DIExpression()), !dbg !5893
  %cmp = icmp eq %struct.QueueDefinition* %xQueue, null, !dbg !5894
  br i1 %cmp, label %if.then, label %for.body, !dbg !5896

if.then:                                          ; preds = %entry
  %0 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #18, !dbg !5897, !srcloc !4057
  call void @llvm.dbg.value(metadata i32 %0, metadata !4054, metadata !DIExpression()) #18, !dbg !5900
  br label %for.cond, !dbg !5901

for.cond:                                         ; preds = %for.cond, %if.then
  br label %for.cond, !dbg !5902, !llvm.loop !5905

for.body:                                         ; preds = %for.inc, %entry
  %ux.014 = phi i32 [ %inc, %for.inc ], [ 0, %entry ]
  call void @llvm.dbg.value(metadata i32 %ux.014, metadata !5891, metadata !DIExpression()), !dbg !5893
  %xHandle = getelementptr inbounds [8 x %struct.QUEUE_REGISTRY_ITEM], [8 x %struct.QUEUE_REGISTRY_ITEM]* @xQueueRegistry, i32 0, i32 %ux.014, i32 1, !dbg !5907
  %1 = load %struct.QueueDefinition*, %struct.QueueDefinition** %xHandle, align 4, !dbg !5907, !tbaa !5736
  %cmp3 = icmp eq %struct.QueueDefinition* %1, %xQueue, !dbg !5912
  br i1 %cmp3, label %if.then4, label %for.inc, !dbg !5913

if.then4:                                         ; preds = %for.body
  %pcQueueName = getelementptr inbounds [8 x %struct.QUEUE_REGISTRY_ITEM], [8 x %struct.QUEUE_REGISTRY_ITEM]* @xQueueRegistry, i32 0, i32 %ux.014, i32 0, !dbg !5914
  %2 = load i8*, i8** %pcQueueName, align 4, !dbg !5914, !tbaa !5743
  call void @llvm.dbg.value(metadata i8* %2, metadata !5892, metadata !DIExpression()), !dbg !5893
  br label %for.end, !dbg !5916

for.inc:                                          ; preds = %for.body
  %inc = add nuw nsw i32 %ux.014, 1, !dbg !5917
  call void @llvm.dbg.value(metadata i32 %inc, metadata !5891, metadata !DIExpression()), !dbg !5893
  %exitcond.not = icmp eq i32 %inc, 8, !dbg !5918
  br i1 %exitcond.not, label %for.end, label %for.body, !dbg !5919, !llvm.loop !5920

for.end:                                          ; preds = %for.inc, %if.then4
  %pcReturn.0 = phi i8* [ %2, %if.then4 ], [ null, %for.inc ], !dbg !5893
  call void @llvm.dbg.value(metadata i8* %pcReturn.0, metadata !5892, metadata !DIExpression()), !dbg !5893
  ret i8* %pcReturn.0, !dbg !5922
}

; Function Attrs: nounwind
define dso_local void @vQueueWaitForMessageRestricted(%struct.QueueDefinition* %xQueue, i32 %xTicksToWait, i32 %xWaitIndefinitely) local_unnamed_addr #0 section ".csection3" !dbg !5923 {
entry:
  call void @llvm.dbg.value(metadata %struct.QueueDefinition* %xQueue, metadata !5927, metadata !DIExpression()), !dbg !5931
  call void @llvm.dbg.value(metadata i32 %xTicksToWait, metadata !5928, metadata !DIExpression()), !dbg !5931
  call void @llvm.dbg.value(metadata i32 %xWaitIndefinitely, metadata !5929, metadata !DIExpression()), !dbg !5931
  call void @llvm.dbg.value(metadata %struct.QueueDefinition* %xQueue, metadata !5930, metadata !DIExpression()), !dbg !5931
  call void @xcall_arg0(i32 0, void ()* @vPortEnterCritical), !dbg !5932
  %cRxLock = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %xQueue, i32 0, i32 8, !dbg !5933
  %0 = load volatile i8, i8* %cRxLock, align 4, !dbg !5933, !tbaa !4091
  %cmp = icmp eq i8 %0, -1, !dbg !5933
  br i1 %cmp, label %if.then, label %if.end, !dbg !5936

if.then:                                          ; preds = %entry
  store volatile i8 0, i8* %cRxLock, align 4, !dbg !5937, !tbaa !4091
  br label %if.end, !dbg !5937

if.end:                                           ; preds = %if.then, %entry
  %cTxLock = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %xQueue, i32 0, i32 9, !dbg !5939
  %1 = load volatile i8, i8* %cTxLock, align 1, !dbg !5939, !tbaa !4094
  %cmp4 = icmp eq i8 %1, -1, !dbg !5939
  br i1 %cmp4, label %if.then6, label %if.end8, !dbg !5936

if.then6:                                         ; preds = %if.end
  store volatile i8 0, i8* %cTxLock, align 1, !dbg !5941, !tbaa !4094
  br label %if.end8, !dbg !5941

if.end8:                                          ; preds = %if.then6, %if.end
  call void @xcall_arg0(i32 0, void ()* @vPortExitCritical), !dbg !5932
  %uxMessagesWaiting = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %xQueue, i32 0, i32 5, !dbg !5943
  %2 = load volatile i32, i32* %uxMessagesWaiting, align 4, !dbg !5943, !tbaa !4080
  %cmp9 = icmp eq i32 %2, 0, !dbg !5945
  br i1 %cmp9, label %if.then11, label %if.end12, !dbg !5946

if.then11:                                        ; preds = %if.end8
  %xTasksWaitingToReceive = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %xQueue, i32 0, i32 4, !dbg !5947
  call void @vTaskPlaceOnEventListRestricted(%struct.xLIST* nonnull %xTasksWaitingToReceive, i32 %xTicksToWait, i32 %xWaitIndefinitely) #18, !dbg !5949
  br label %if.end12, !dbg !5950

if.end12:                                         ; preds = %if.then11, %if.end8
  call fastcc void @prvUnlockQueue(%struct.QueueDefinition* %xQueue), !dbg !5951
  ret void, !dbg !5952
}

; Function Attrs: nounwind
define dso_local i32 @xTimerCreateTimerTask() local_unnamed_addr #0 section ".csection6" !dbg !5953 {
entry:
  call void @llvm.dbg.value(metadata i32 0, metadata !5955, metadata !DIExpression()), !dbg !5956
  call fastcc void @prvCheckForValidListAndQueue(), !dbg !5957
  %0 = load %struct.QueueDefinition*, %struct.QueueDefinition** @xTimerQueue, align 4, !dbg !5958, !tbaa !1096
  %cmp.not = icmp eq %struct.QueueDefinition* %0, null, !dbg !5960
  br i1 %cmp.not, label %if.end, label %if.then, !dbg !5961

if.then:                                          ; preds = %entry
  %1 = getelementptr [8 x i8], [8 x i8]* @.str.21, i32 0, i32 0
  %call = call i32 @xTaskCreate(void (i8*)* nonnull @prvTimerTask, i8* %1, i16 zeroext 260, i8* null, i32 2, %struct.tskTaskControlBlock** nonnull @xTimerTaskHandle) #18, !dbg !5962
  call void @llvm.dbg.value(metadata i32 %call, metadata !5955, metadata !DIExpression()), !dbg !5956
  br label %if.end, !dbg !5965

if.end:                                           ; preds = %if.then, %entry
  %xReturn.0 = phi i32 [ %call, %if.then ], [ 0, %entry ], !dbg !5956
  call void @llvm.dbg.value(metadata i32 %xReturn.0, metadata !5955, metadata !DIExpression()), !dbg !5956
  %cmp1 = icmp eq i32 %xReturn.0, 0, !dbg !5966
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !5968

if.then2:                                         ; preds = %if.end
  %2 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #18, !dbg !5969, !srcloc !5975
  call void @llvm.dbg.value(metadata i32 %2, metadata !5972, metadata !DIExpression()) #18, !dbg !5976
  br label %for.cond, !dbg !5977

for.cond:                                         ; preds = %for.cond, %if.then2
  br label %for.cond, !dbg !5978, !llvm.loop !5981

if.end3:                                          ; preds = %if.end
  ret i32 %xReturn.0, !dbg !5983
}

; Function Attrs: nounwind
define internal fastcc void @prvCheckForValidListAndQueue() unnamed_addr #0 section ".csection6" !dbg !5984 {
entry:
  call void @xcall_arg0(i32 0, void ()* @vPortEnterCritical), !dbg !5985
  %0 = load %struct.QueueDefinition*, %struct.QueueDefinition** @xTimerQueue, align 4, !dbg !5986, !tbaa !1096
  %cmp = icmp eq %struct.QueueDefinition* %0, null, !dbg !5989
  br i1 %cmp, label %if.then, label %if.end4, !dbg !5990

if.then:                                          ; preds = %entry
  call void @xcall_arg1p(i32 4, i8* bitcast (void (%struct.xLIST*)* @vListInitialise to i8*), i8* bitcast (%struct.xLIST* @xActiveTimerList1 to i8*), i32 ptrtoint (%struct.xLIST* getelementptr (%struct.xLIST, %struct.xLIST* null, i32 1) to i32)), !dbg !5991
  call void @vListInitialise(%struct.xLIST* nonnull @xActiveTimerList2) #18, !dbg !5993
  store %struct.xLIST* @xActiveTimerList1, %struct.xLIST** @pxCurrentTimerList, align 4, !dbg !5994, !tbaa !1096
  store %struct.xLIST* @xActiveTimerList2, %struct.xLIST** @pxOverflowTimerList, align 4, !dbg !5995, !tbaa !1096
  %call = call %struct.QueueDefinition* @xQueueGenericCreate(i32 10, i32 12, i8 zeroext 0) #18, !dbg !5996
  store %struct.QueueDefinition* %call, %struct.QueueDefinition** @xTimerQueue, align 4, !dbg !5998, !tbaa !1096
  %cmp1.not = icmp eq %struct.QueueDefinition* %call, null, !dbg !5999
  br i1 %cmp1.not, label %if.end4, label %if.then2, !dbg !6002

if.then2:                                         ; preds = %if.then
  %1 = getelementptr [5 x i8], [5 x i8]* @.str.1, i32 0, i32 0
  call void @vQueueAddToRegistry(%struct.QueueDefinition* nonnull %call, i8* %1) #18, !dbg !6003
  br label %if.end4, !dbg !6005

if.end4:                                          ; preds = %if.then2, %if.then, %entry
  call void @xcall_arg0(i32 0, void ()* @vPortExitCritical), !dbg !6006
  ret void, !dbg !6007
}

; Function Attrs: noreturn nounwind
define internal void @prvTimerTask(i8* nocapture readnone %pvParameters) #4 section ".csection6" !dbg !6008 {
entry:
  %xListWasEmpty = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %pvParameters, metadata !6010, metadata !DIExpression()), !dbg !6013
  %0 = bitcast i32* %xListWasEmpty to i8*, !dbg !6014
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #18, !dbg !6014
  br label %for.cond, !dbg !6015

for.cond:                                         ; preds = %for.cond, %entry
  call void @llvm.dbg.value(metadata i32* %xListWasEmpty, metadata !6012, metadata !DIExpression(DW_OP_deref)), !dbg !6013
  %call = call fastcc i32 @prvGetNextExpireTime(i32* nonnull %xListWasEmpty), !dbg !6016
  call void @llvm.dbg.value(metadata i32 %call, metadata !6011, metadata !DIExpression()), !dbg !6013
  %1 = load i32, i32* %xListWasEmpty, align 4, !dbg !6020, !tbaa !1085
  call void @llvm.dbg.value(metadata i32 %1, metadata !6012, metadata !DIExpression()), !dbg !6013
  call fastcc void @prvProcessTimerOrBlockTask(i32 %call, i32 %1), !dbg !6021
  call fastcc void @prvProcessReceivedCommands(), !dbg !6022
  br label %for.cond, !dbg !6023, !llvm.loop !6024
}

; Function Attrs: nofree norecurse nounwind willreturn
define internal fastcc i32 @prvGetNextExpireTime(i32* nocapture %pxListWasEmpty) unnamed_addr #3 section ".csection6" !dbg !6027 {
entry:
  call void @llvm.dbg.value(metadata i32* %pxListWasEmpty, metadata !6029, metadata !DIExpression()), !dbg !6031
  %0 = load %struct.xLIST*, %struct.xLIST** @pxCurrentTimerList, align 4, !dbg !6032, !tbaa !1096
  %uxNumberOfItems = getelementptr inbounds %struct.xLIST, %struct.xLIST* %0, i32 0, i32 0, !dbg !6032
  %1 = load volatile i32, i32* %uxNumberOfItems, align 4, !dbg !6032, !tbaa !1122
  %cmp = icmp eq i32 %1, 0, !dbg !6032
  %cond = zext i1 %cmp to i32, !dbg !6032
  store i32 %cond, i32* %pxListWasEmpty, align 4, !dbg !6033, !tbaa !1085
  br i1 %cmp, label %if.end, label %if.then, !dbg !6034

if.then:                                          ; preds = %entry
  %pxNext = getelementptr inbounds %struct.xLIST, %struct.xLIST* %0, i32 0, i32 2, i32 1, !dbg !6035
  %2 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %pxNext, align 4, !dbg !6035, !tbaa !1493
  %xItemValue = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %2, i32 0, i32 0, !dbg !6035
  %3 = load i32, i32* %xItemValue, align 4, !dbg !6035, !tbaa !1494
  call void @llvm.dbg.value(metadata i32 %3, metadata !6030, metadata !DIExpression()), !dbg !6031
  br label %if.end, !dbg !6038

if.end:                                           ; preds = %if.then, %entry
  %xNextExpireTime.0 = phi i32 [ %3, %if.then ], [ 0, %entry ], !dbg !6039
  call void @llvm.dbg.value(metadata i32 %xNextExpireTime.0, metadata !6030, metadata !DIExpression()), !dbg !6031
  ret i32 %xNextExpireTime.0, !dbg !6040
}

; Function Attrs: nounwind
define internal fastcc void @prvProcessTimerOrBlockTask(i32 %xNextExpireTime, i32 %xListWasEmpty) unnamed_addr #0 section ".csection6" !dbg !6041 {
entry:
  %xTimerListsWereSwitched = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %xNextExpireTime, metadata !6045, metadata !DIExpression()), !dbg !6049
  call void @llvm.dbg.value(metadata i32 %xListWasEmpty, metadata !6046, metadata !DIExpression()), !dbg !6049
  %0 = bitcast i32* %xTimerListsWereSwitched to i8*, !dbg !6050
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #18, !dbg !6050
  call void @xcall_arg0(i32 0, void ()* @vTaskSuspendAll), !dbg !6051
  call void @llvm.dbg.value(metadata i32* %xTimerListsWereSwitched, metadata !6048, metadata !DIExpression(DW_OP_deref)), !dbg !6049
  %call = call fastcc i32 @prvSampleTimeNow(i32* nonnull %xTimerListsWereSwitched), !dbg !6052
  call void @llvm.dbg.value(metadata i32 %call, metadata !6047, metadata !DIExpression()), !dbg !6049
  %1 = load i32, i32* %xTimerListsWereSwitched, align 4, !dbg !6054, !tbaa !1085
  call void @llvm.dbg.value(metadata i32 %1, metadata !6048, metadata !DIExpression()), !dbg !6049
  %cmp = icmp eq i32 %1, 0, !dbg !6056
  br i1 %cmp, label %if.then, label %if.else14, !dbg !6057

if.then:                                          ; preds = %entry
  %cmp1 = icmp ne i32 %xListWasEmpty, 0, !dbg !6058
  %cmp2.not = icmp ult i32 %call, %xNextExpireTime
  %or.cond = or i1 %cmp1, %cmp2.not, !dbg !6061
  br i1 %or.cond, label %if.else, label %if.then3, !dbg !6061

if.then3:                                         ; preds = %if.then
  %call4 = call i32 @icall_arg0(i32 0, i32 ()* @xTaskResumeAll), !dbg !6062
  call fastcc void @prvProcessExpiredTimer(i32 %xNextExpireTime, i32 %call), !dbg !6064
  br label %if.end16, !dbg !6065

if.else:                                          ; preds = %if.then
  %cmp5.not = icmp eq i32 %xListWasEmpty, 0, !dbg !6066
  br i1 %cmp5.not, label %if.end, label %if.then6, !dbg !6069

if.then6:                                         ; preds = %if.else
  %2 = load %struct.xLIST*, %struct.xLIST** @pxOverflowTimerList, align 4, !dbg !6070, !tbaa !1096
  %uxNumberOfItems = getelementptr inbounds %struct.xLIST, %struct.xLIST* %2, i32 0, i32 0, !dbg !6070
  %3 = load volatile i32, i32* %uxNumberOfItems, align 4, !dbg !6070, !tbaa !1122
  %cmp7 = icmp eq i32 %3, 0, !dbg !6070
  %cond = zext i1 %cmp7 to i32, !dbg !6070
  call void @llvm.dbg.value(metadata i32 %cond, metadata !6046, metadata !DIExpression()), !dbg !6049
  br label %if.end, !dbg !6072

if.end:                                           ; preds = %if.then6, %if.else
  %xListWasEmpty.addr.0 = phi i32 [ %cond, %if.then6 ], [ 0, %if.else ]
  call void @llvm.dbg.value(metadata i32 %xListWasEmpty.addr.0, metadata !6046, metadata !DIExpression()), !dbg !6049
  %4 = load %struct.QueueDefinition*, %struct.QueueDefinition** @xTimerQueue, align 4, !dbg !6073, !tbaa !1096
  %sub = sub i32 %xNextExpireTime, %call, !dbg !6074
  call void @vQueueWaitForMessageRestricted(%struct.QueueDefinition* %4, i32 %sub, i32 %xListWasEmpty.addr.0) #18, !dbg !6075
  %call8 = call i32 @icall_arg0(i32 0, i32 ()* @xTaskResumeAll), !dbg !6076
  %cmp9 = icmp eq i32 %call8, 0, !dbg !6078
  br i1 %cmp9, label %if.then10, label %if.end16, !dbg !6079

if.then10:                                        ; preds = %if.end
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6080, !tbaa !1105
  call void asm sideeffect "dsb", "~{memory}"() #18, !dbg !6080, !srcloc !6083
  call void asm sideeffect "isb", ""() #18, !dbg !6080, !srcloc !6084
  br label %if.end16, !dbg !6085

if.else14:                                        ; preds = %entry
  %call15 = call i32 @icall_arg0(i32 0, i32 ()* @xTaskResumeAll), !dbg !6086
  br label %if.end16

if.end16:                                         ; preds = %if.else14, %if.then10, %if.end, %if.then3
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #18, !dbg !6088
  ret void, !dbg !6088
}

; Function Attrs: nounwind
define internal fastcc void @prvProcessReceivedCommands() unnamed_addr #0 section ".csection6" !dbg !6089 {
entry:
  %xMessage = alloca %struct.tmrTimerQueueMessage, align 4
  %xTimerListsWereSwitched = alloca i32, align 4
  %0 = bitcast %struct.tmrTimerQueueMessage* %xMessage to i8*, !dbg !6108
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %0) #18, !dbg !6108
  call void @llvm.dbg.declare(metadata %struct.tmrTimerQueueMessage* %xMessage, metadata !6091, metadata !DIExpression()), !dbg !6109
  %1 = bitcast i32* %xTimerListsWereSwitched to i8*, !dbg !6110
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1) #18, !dbg !6110
  %xMessageID = getelementptr inbounds %struct.tmrTimerQueueMessage, %struct.tmrTimerQueueMessage* %xMessage, i32 0, i32 0
  %xTimerParameters = getelementptr inbounds %struct.tmrTimerQueueMessage, %struct.tmrTimerQueueMessage* %xMessage, i32 0, i32 1, i32 0
  %pxTimer2 = getelementptr inbounds %struct.tmrTimerQueueMessage, %struct.tmrTimerQueueMessage* %xMessage, i32 0, i32 1, i32 0, i32 1
  %xMessageValue50 = getelementptr inbounds %struct.tmrTimerParameters, %struct.tmrTimerParameters* %xTimerParameters, i32 0, i32 0
  %xMessageValue = getelementptr inbounds %struct.tmrTimerParameters, %struct.tmrTimerParameters* %xTimerParameters, i32 0, i32 0
  br label %while.cond, !dbg !6111

while.cond:                                       ; preds = %if.end75, %entry
  %2 = load %struct.QueueDefinition*, %struct.QueueDefinition** @xTimerQueue, align 4, !dbg !6112, !tbaa !1096
  %call = call i32 @xQueueReceive(%struct.QueueDefinition* %2, i8* nonnull %0, i32 0) #18, !dbg !6113
  %cmp.not = icmp eq i32 %call, 0, !dbg !6114
  br i1 %cmp.not, label %while.end, label %while.body, !dbg !6111

while.body:                                       ; preds = %while.cond
  %3 = load i32, i32* %xMessageID, align 4, !dbg !6115, !tbaa !6118
  %cmp1 = icmp sgt i32 %3, -1, !dbg !6120
  br i1 %cmp1, label %if.then, label %if.end75, !dbg !6121

if.then:                                          ; preds = %while.body
  %4 = load %struct.tmrTimerControl*, %struct.tmrTimerControl** %pxTimer2, align 4, !dbg !6122, !tbaa !1246
  call void @llvm.dbg.value(metadata %struct.tmrTimerControl* %4, metadata !6105, metadata !DIExpression()), !dbg !6124
  %pvContainer = getelementptr inbounds %struct.tmrTimerControl, %struct.tmrTimerControl* %4, i32 0, i32 1, i32 4, !dbg !6125
  %5 = load %struct.xLIST*, %struct.xLIST** %pvContainer, align 4, !dbg !6125, !tbaa !6127
  %cmp3.not = icmp eq %struct.xLIST* %5, null, !dbg !6125
  br i1 %cmp3.not, label %if.end, label %if.then5, !dbg !6129

if.then5:                                         ; preds = %if.then
  %xTimerListItem = getelementptr inbounds %struct.tmrTimerControl, %struct.tmrTimerControl* %4, i32 0, i32 1, !dbg !6125
  %call7 = call i32 @icall_arg1p(i32 4, i8* bitcast (i32 (%struct.xLIST_ITEM*)* @uxListRemove to i8*), i8* %6, i32 ptrtoint (%struct.xLIST_ITEM* getelementptr (%struct.xLIST_ITEM, %struct.xLIST_ITEM* null, i32 1) to i32)), !dbg !6130
  br label %if.end, !dbg !6132
  %6 = bitcast %struct.xLIST_ITEM* %xTimerListItem to i8*

if.end:                                           ; preds = %if.then5, %if.then
  call void @llvm.dbg.value(metadata i32* %xTimerListsWereSwitched, metadata !6106, metadata !DIExpression(DW_OP_deref)), !dbg !6124
  %call8 = call fastcc i32 @prvSampleTimeNow(i32* nonnull %xTimerListsWereSwitched), !dbg !6133
  call void @llvm.dbg.value(metadata i32 %call8, metadata !6107, metadata !DIExpression()), !dbg !6124
  %7 = load i32, i32* %xMessageID, align 4, !dbg !6134, !tbaa !6118
  switch i32 %7, label %if.end75 [
    i32 1, label %sw.bb
    i32 6, label %sw.bb
    i32 2, label %sw.bb
    i32 7, label %sw.bb
    i32 3, label %sw.bb38
    i32 8, label %sw.bb38
    i32 4, label %sw.bb43
    i32 9, label %sw.bb43
    i32 5, label %sw.bb62
  ], !dbg !6135

sw.bb:                                            ; preds = %if.end, %if.end, %if.end, %if.end
  %ucStatus = getelementptr inbounds %struct.tmrTimerControl, %struct.tmrTimerControl* %4, i32 0, i32 6, !dbg !6136
  %8 = load i8, i8* %ucStatus, align 4, !dbg !6138, !tbaa !6139
  %9 = or i8 %8, 1, !dbg !6138
  store i8 %9, i8* %ucStatus, align 4, !dbg !6138, !tbaa !6139
  %10 = load i32, i32* %xMessageValue, align 4, !dbg !6140, !tbaa !1246
  %xTimerPeriodInTicks = getelementptr inbounds %struct.tmrTimerControl, %struct.tmrTimerControl* %4, i32 0, i32 2, !dbg !6142
  %11 = load i32, i32* %xTimerPeriodInTicks, align 4, !dbg !6142, !tbaa !6143
  %add = add i32 %11, %10, !dbg !6144
  %call16 = call fastcc i32 @prvInsertTimerInActiveList(%struct.tmrTimerControl* %4, i32 %add, i32 %call8, i32 %10), !dbg !6145
  %cmp17.not = icmp eq i32 %call16, 0, !dbg !6146
  br i1 %cmp17.not, label %if.end75, label %if.then19, !dbg !6147

if.then19:                                        ; preds = %sw.bb
  %12 = load i8, i8* %ucStatus, align 4, !dbg !6148, !tbaa !6139
  %13 = and i8 %12, 4, !dbg !6151
  %cmp22.not = icmp eq i8 %13, 0, !dbg !6152
  br i1 %cmp22.not, label %if.else30, label %if.then24, !dbg !6153

if.then24:                                        ; preds = %if.then19
  %14 = load i32, i32* %xMessageValue, align 4, !dbg !6154, !tbaa !1246
  %15 = load i32, i32* %xTimerPeriodInTicks, align 4, !dbg !6156, !tbaa !6143
  %add29 = add i32 %15, %14, !dbg !6157
  call fastcc void @prvReloadTimer(%struct.tmrTimerControl* %4, i32 %add29, i32 %call8), !dbg !6158
  br label %if.end35, !dbg !6159

if.else30:                                        ; preds = %if.then19
  %and33 = and i8 %12, -2, !dbg !6160
  store i8 %and33, i8* %ucStatus, align 4, !dbg !6160, !tbaa !6139
  br label %if.end35

if.end35:                                         ; preds = %if.else30, %if.then24
  %pxCallbackFunction = getelementptr inbounds %struct.tmrTimerControl, %struct.tmrTimerControl* %4, i32 0, i32 4, !dbg !6162
  %16 = load void (%struct.tmrTimerControl*)*, void (%struct.tmrTimerControl*)** %pxCallbackFunction, align 4, !dbg !6162, !tbaa !6163
  call void %16(%struct.tmrTimerControl* %4) #18, !dbg !6164
  br label %if.end75, !dbg !6165

sw.bb38:                                          ; preds = %if.end, %if.end
  %ucStatus39 = getelementptr inbounds %struct.tmrTimerControl, %struct.tmrTimerControl* %4, i32 0, i32 6, !dbg !6166
  %17 = load i8, i8* %ucStatus39, align 4, !dbg !6167, !tbaa !6139
  %18 = and i8 %17, -2, !dbg !6167
  store i8 %18, i8* %ucStatus39, align 4, !dbg !6167, !tbaa !6139
  br label %if.end75, !dbg !6168

sw.bb43:                                          ; preds = %if.end, %if.end
  %ucStatus44 = getelementptr inbounds %struct.tmrTimerControl, %struct.tmrTimerControl* %4, i32 0, i32 6, !dbg !6169
  %19 = load i8, i8* %ucStatus44, align 4, !dbg !6170, !tbaa !6139
  %20 = or i8 %19, 1, !dbg !6170
  store i8 %20, i8* %ucStatus44, align 4, !dbg !6170, !tbaa !6139
  %21 = load i32, i32* %xMessageValue50, align 4, !dbg !6171, !tbaa !1246
  %xTimerPeriodInTicks51 = getelementptr inbounds %struct.tmrTimerControl, %struct.tmrTimerControl* %4, i32 0, i32 2, !dbg !6172
  store i32 %21, i32* %xTimerPeriodInTicks51, align 4, !dbg !6173, !tbaa !6143
  %cmp53.not = icmp eq i32 %21, 0, !dbg !6174
  br i1 %cmp53.not, label %if.then57, label %if.end58, !dbg !6176

if.then57:                                        ; preds = %sw.bb43
  %22 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #18, !dbg !6177, !srcloc !5975
  call void @llvm.dbg.value(metadata i32 %22, metadata !5972, metadata !DIExpression()) #18, !dbg !6180
  br label %for.cond, !dbg !6181

for.cond:                                         ; preds = %for.cond, %if.then57
  br label %for.cond, !dbg !6182, !llvm.loop !6185

if.end58:                                         ; preds = %sw.bb43
  %add60 = add i32 %21, %call8, !dbg !6187
  %call61 = call fastcc i32 @prvInsertTimerInActiveList(%struct.tmrTimerControl* %4, i32 %add60, i32 %call8, i32 %call8), !dbg !6188
  br label %if.end75, !dbg !6189

sw.bb62:                                          ; preds = %if.end
  %ucStatus63 = getelementptr inbounds %struct.tmrTimerControl, %struct.tmrTimerControl* %4, i32 0, i32 6, !dbg !6190
  %23 = load i8, i8* %ucStatus63, align 4, !dbg !6190, !tbaa !6139
  %24 = and i8 %23, 2, !dbg !6193
  %cmp66 = icmp eq i8 %24, 0, !dbg !6194
  br i1 %cmp66, label %if.then68, label %if.else69, !dbg !6195

if.then68:                                        ; preds = %sw.bb62
  %25 = bitcast %struct.tmrTimerControl* %4 to i8*, !dbg !6196
  call void @xcall_arg1p(i32 14, i8* bitcast (void (i8*)* @vPortFree to i8*), i8* %25, i32 ptrtoint (i8* getelementptr (i8, i8* null, i32 1) to i32)), !dbg !6198
  br label %if.end75, !dbg !6199

if.else69:                                        ; preds = %sw.bb62
  %and72 = and i8 %23, -2, !dbg !6200
  store i8 %and72, i8* %ucStatus63, align 4, !dbg !6200, !tbaa !6139
  br label %if.end75

if.end75:                                         ; preds = %if.else69, %if.then68, %if.end58, %sw.bb38, %if.end35, %sw.bb, %if.end, %while.body
  br label %while.cond, !dbg !6111, !llvm.loop !6202

while.end:                                        ; preds = %while.cond
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1) #18, !dbg !6204
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %0) #18, !dbg !6204
  ret void, !dbg !6204
}

; Function Attrs: nounwind
define internal fastcc i32 @prvSampleTimeNow(i32* nocapture %pxTimerListsWereSwitched) unnamed_addr #0 section ".csection6" !dbg !455 {
entry:
  call void @llvm.dbg.value(metadata i32* %pxTimerListsWereSwitched, metadata !461, metadata !DIExpression()), !dbg !6205
  %call = call i32 @icall_arg0(i32 0, i32 ()* @xTaskGetTickCount), !dbg !6206
  call void @llvm.dbg.value(metadata i32 %call, metadata !462, metadata !DIExpression()), !dbg !6205
  %0 = load i32, i32* @prvSampleTimeNow.xLastTime, align 4, !dbg !6207, !tbaa !1105
  %cmp = icmp ult i32 %call, %0, !dbg !6209
  br i1 %cmp, label %if.then, label %if.end, !dbg !6210

if.then:                                          ; preds = %entry
  call fastcc void @prvSwitchTimerLists(), !dbg !6211
  br label %if.end, !dbg !6213

if.end:                                           ; preds = %if.then, %entry
  %storemerge = phi i32 [ 1, %if.then ], [ 0, %entry ], !dbg !6214
  store i32 %storemerge, i32* %pxTimerListsWereSwitched, align 4, !dbg !6214, !tbaa !1085
  store i32 %call, i32* @prvSampleTimeNow.xLastTime, align 4, !dbg !6215, !tbaa !1105
  ret i32 %call, !dbg !6216
}

; Function Attrs: nounwind
define internal fastcc i32 @prvInsertTimerInActiveList(%struct.tmrTimerControl* %pxTimer, i32 %xNextExpiryTime, i32 %xTimeNow, i32 %xCommandTime) unnamed_addr #0 section ".csection6" !dbg !6217 {
entry:
  call void @llvm.dbg.value(metadata %struct.tmrTimerControl* %pxTimer, metadata !6222, metadata !DIExpression()), !dbg !6227
  call void @llvm.dbg.value(metadata i32 %xNextExpiryTime, metadata !6223, metadata !DIExpression()), !dbg !6227
  call void @llvm.dbg.value(metadata i32 %xTimeNow, metadata !6224, metadata !DIExpression()), !dbg !6227
  call void @llvm.dbg.value(metadata i32 %xCommandTime, metadata !6225, metadata !DIExpression()), !dbg !6227
  call void @llvm.dbg.value(metadata i32 0, metadata !6226, metadata !DIExpression()), !dbg !6227
  %xTimerListItem = getelementptr inbounds %struct.tmrTimerControl, %struct.tmrTimerControl* %pxTimer, i32 0, i32 1, !dbg !6228
  %xItemValue = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %xTimerListItem, i32 0, i32 0, !dbg !6228
  store i32 %xNextExpiryTime, i32* %xItemValue, align 4, !dbg !6228, !tbaa !6229
  %pvOwner = getelementptr inbounds %struct.tmrTimerControl, %struct.tmrTimerControl* %pxTimer, i32 0, i32 1, i32 3, !dbg !6230
  %0 = bitcast i8** %pvOwner to %struct.tmrTimerControl**, !dbg !6230
  store %struct.tmrTimerControl* %pxTimer, %struct.tmrTimerControl** %0, align 4, !dbg !6230, !tbaa !6231
  %cmp.not = icmp ugt i32 %xNextExpiryTime, %xTimeNow, !dbg !6232
  br i1 %cmp.not, label %if.else5, label %if.then, !dbg !6234

if.then:                                          ; preds = %entry
  %sub = sub i32 %xTimeNow, %xCommandTime, !dbg !6235
  %xTimerPeriodInTicks = getelementptr inbounds %struct.tmrTimerControl, %struct.tmrTimerControl* %pxTimer, i32 0, i32 2, !dbg !6238
  %1 = load i32, i32* %xTimerPeriodInTicks, align 4, !dbg !6238, !tbaa !6143
  %cmp2.not = icmp ult i32 %sub, %1, !dbg !6239
  br i1 %cmp2.not, label %if.else, label %if.end12, !dbg !6240

if.else:                                          ; preds = %if.then
  %2 = load %struct.xLIST*, %struct.xLIST** @pxOverflowTimerList, align 4, !dbg !6241, !tbaa !1096
  call void @vListInsert(%struct.xLIST* %2, %struct.xLIST_ITEM* nonnull %xTimerListItem) #18, !dbg !6243
  br label %if.end12

if.else5:                                         ; preds = %entry
  %cmp6 = icmp uge i32 %xTimeNow, %xCommandTime, !dbg !6244
  %cmp7.not = icmp ult i32 %xNextExpiryTime, %xCommandTime
  %or.cond = or i1 %cmp6, %cmp7.not, !dbg !6247
  br i1 %or.cond, label %if.else9, label %if.end12, !dbg !6247

if.else9:                                         ; preds = %if.else5
  %3 = load %struct.xLIST*, %struct.xLIST** @pxCurrentTimerList, align 4, !dbg !6248, !tbaa !1096
  call void @vListInsert(%struct.xLIST* %3, %struct.xLIST_ITEM* nonnull %xTimerListItem) #18, !dbg !6250
  br label %if.end12

if.end12:                                         ; preds = %if.else9, %if.else5, %if.else, %if.then
  %xProcessTimerNow.0 = phi i32 [ 0, %if.else ], [ 0, %if.else9 ], [ 1, %if.then ], [ 1, %if.else5 ], !dbg !6227
  call void @llvm.dbg.value(metadata i32 %xProcessTimerNow.0, metadata !6226, metadata !DIExpression()), !dbg !6227
  ret i32 %xProcessTimerNow.0, !dbg !6251
}

; Function Attrs: nounwind
define internal fastcc void @prvReloadTimer(%struct.tmrTimerControl* %pxTimer, i32 %xExpiredTime, i32 %xTimeNow) unnamed_addr #0 section ".csection6" !dbg !6252 {
entry:
  call void @llvm.dbg.value(metadata %struct.tmrTimerControl* %pxTimer, metadata !6256, metadata !DIExpression()), !dbg !6259
  call void @llvm.dbg.value(metadata i32 %xExpiredTime, metadata !6257, metadata !DIExpression()), !dbg !6259
  call void @llvm.dbg.value(metadata i32 %xTimeNow, metadata !6258, metadata !DIExpression()), !dbg !6259
  %xTimerPeriodInTicks = getelementptr inbounds %struct.tmrTimerControl, %struct.tmrTimerControl* %pxTimer, i32 0, i32 2
  %pxCallbackFunction = getelementptr inbounds %struct.tmrTimerControl, %struct.tmrTimerControl* %pxTimer, i32 0, i32 4
  br label %while.cond, !dbg !6260

while.cond:                                       ; preds = %while.body, %entry
  %xExpiredTime.addr.0 = phi i32 [ %xExpiredTime, %entry ], [ %add2, %while.body ]
  call void @llvm.dbg.value(metadata i32 %xExpiredTime.addr.0, metadata !6257, metadata !DIExpression()), !dbg !6259
  %0 = load i32, i32* %xTimerPeriodInTicks, align 4, !dbg !6261, !tbaa !6143
  %add = add i32 %0, %xExpiredTime.addr.0, !dbg !6262
  %call = call fastcc i32 @prvInsertTimerInActiveList(%struct.tmrTimerControl* %pxTimer, i32 %add, i32 %xTimeNow, i32 %xExpiredTime.addr.0), !dbg !6263
  %cmp.not = icmp eq i32 %call, 0, !dbg !6264
  br i1 %cmp.not, label %while.end, label %while.body, !dbg !6260

while.body:                                       ; preds = %while.cond
  %1 = load i32, i32* %xTimerPeriodInTicks, align 4, !dbg !6265, !tbaa !6143
  %add2 = add i32 %1, %xExpiredTime.addr.0, !dbg !6267
  call void @llvm.dbg.value(metadata i32 %add2, metadata !6257, metadata !DIExpression()), !dbg !6259
  %2 = load void (%struct.tmrTimerControl*)*, void (%struct.tmrTimerControl*)** %pxCallbackFunction, align 4, !dbg !6268, !tbaa !6163
  call void %2(%struct.tmrTimerControl* %pxTimer) #18, !dbg !6269
  br label %while.cond, !dbg !6260, !llvm.loop !6270

while.end:                                        ; preds = %while.cond
  ret void, !dbg !6272
}

; Function Attrs: nounwind
define internal fastcc void @prvSwitchTimerLists() unnamed_addr #0 section ".csection6" !dbg !6273 {
entry:
  %0 = load %struct.xLIST*, %struct.xLIST** @pxCurrentTimerList, align 4, !dbg !6277, !tbaa !1096
  %uxNumberOfItems4 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %0, i32 0, i32 0, !dbg !6277
  %1 = load volatile i32, i32* %uxNumberOfItems4, align 4, !dbg !6277, !tbaa !1122
  %cmp.not5 = icmp eq i32 %1, 0, !dbg !6277
  br i1 %cmp.not5, label %while.end, label %while.body, !dbg !6278

while.body:                                       ; preds = %while.body, %entry
  %2 = phi %struct.xLIST* [ %5, %while.body ], [ %0, %entry ]
  %pxNext = getelementptr inbounds %struct.xLIST, %struct.xLIST* %2, i32 0, i32 2, i32 1, !dbg !6279
  %3 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %pxNext, align 4, !dbg !6279, !tbaa !1493
  %xItemValue = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %3, i32 0, i32 0, !dbg !6279
  %4 = load i32, i32* %xItemValue, align 4, !dbg !6279, !tbaa !1494
  call void @llvm.dbg.value(metadata i32 %4, metadata !6275, metadata !DIExpression()), !dbg !6281
  call fastcc void @prvProcessExpiredTimer(i32 %4, i32 -1), !dbg !6282
  %5 = load %struct.xLIST*, %struct.xLIST** @pxCurrentTimerList, align 4, !dbg !6277, !tbaa !1096
  %uxNumberOfItems = getelementptr inbounds %struct.xLIST, %struct.xLIST* %5, i32 0, i32 0, !dbg !6277
  %6 = load volatile i32, i32* %uxNumberOfItems, align 4, !dbg !6277, !tbaa !1122
  %cmp.not = icmp eq i32 %6, 0, !dbg !6277
  br i1 %cmp.not, label %while.end, label %while.body, !dbg !6278, !llvm.loop !6283

while.end:                                        ; preds = %while.body, %entry
  %.lcssa = phi %struct.xLIST* [ %0, %entry ], [ %5, %while.body ], !dbg !6277
  call void @llvm.dbg.value(metadata %struct.xLIST* %.lcssa, metadata !6276, metadata !DIExpression()), !dbg !6281
  %7 = load %struct.xLIST*, %struct.xLIST** @pxOverflowTimerList, align 4, !dbg !6285, !tbaa !1096
  store %struct.xLIST* %7, %struct.xLIST** @pxCurrentTimerList, align 4, !dbg !6286, !tbaa !1096
  store %struct.xLIST* %.lcssa, %struct.xLIST** @pxOverflowTimerList, align 4, !dbg !6287, !tbaa !1096
  ret void, !dbg !6288
}

; Function Attrs: nounwind
define internal fastcc void @prvProcessExpiredTimer(i32 %xNextExpireTime, i32 %xTimeNow) unnamed_addr #0 section ".csection6" !dbg !6289 {
entry:
  call void @llvm.dbg.value(metadata i32 %xNextExpireTime, metadata !6293, metadata !DIExpression()), !dbg !6296
  call void @llvm.dbg.value(metadata i32 %xTimeNow, metadata !6294, metadata !DIExpression()), !dbg !6296
  %0 = load %struct.xLIST*, %struct.xLIST** @pxCurrentTimerList, align 4, !dbg !6297, !tbaa !1096
  %pxNext = getelementptr inbounds %struct.xLIST, %struct.xLIST* %0, i32 0, i32 2, i32 1, !dbg !6297
  %1 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %pxNext, align 4, !dbg !6297, !tbaa !1493
  %pvOwner = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %1, i32 0, i32 3, !dbg !6297
  %2 = bitcast i8** %pvOwner to %struct.tmrTimerControl**, !dbg !6297
  %3 = load %struct.tmrTimerControl*, %struct.tmrTimerControl** %2, align 4, !dbg !6297, !tbaa !1148
  call void @llvm.dbg.value(metadata %struct.tmrTimerControl* %3, metadata !6295, metadata !DIExpression()), !dbg !6296
  %xTimerListItem = getelementptr inbounds %struct.tmrTimerControl, %struct.tmrTimerControl* %3, i32 0, i32 1, !dbg !6298
  %call = call i32 @icall_arg1p(i32 4, i8* bitcast (i32 (%struct.xLIST_ITEM*)* @uxListRemove to i8*), i8* %6, i32 ptrtoint (%struct.xLIST_ITEM* getelementptr (%struct.xLIST_ITEM, %struct.xLIST_ITEM* null, i32 1) to i32)), !dbg !6299
  %ucStatus = getelementptr inbounds %struct.tmrTimerControl, %struct.tmrTimerControl* %3, i32 0, i32 6, !dbg !6300
  %4 = load i8, i8* %ucStatus, align 4, !dbg !6300, !tbaa !6139
  %5 = and i8 %4, 4, !dbg !6302
  %cmp.not = icmp eq i8 %5, 0, !dbg !6303
  br i1 %cmp.not, label %if.else, label %if.then, !dbg !6304
  %6 = bitcast %struct.xLIST_ITEM* %xTimerListItem to i8*

if.then:                                          ; preds = %entry
  call fastcc void @prvReloadTimer(%struct.tmrTimerControl* %3, i32 %xNextExpireTime, i32 %xTimeNow), !dbg !6305
  br label %if.end, !dbg !6307

if.else:                                          ; preds = %entry
  %and4 = and i8 %4, -2, !dbg !6308
  store i8 %and4, i8* %ucStatus, align 4, !dbg !6308, !tbaa !6139
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %pxCallbackFunction = getelementptr inbounds %struct.tmrTimerControl, %struct.tmrTimerControl* %3, i32 0, i32 4, !dbg !6310
  %7 = load void (%struct.tmrTimerControl*)*, void (%struct.tmrTimerControl*)** %pxCallbackFunction, align 4, !dbg !6310, !tbaa !6163
  call void %7(%struct.tmrTimerControl* %3) #18, !dbg !6311
  ret void, !dbg !6312
}

; Function Attrs: nounwind
define dso_local %struct.tmrTimerControl* @xTimerCreate(i8* %pcTimerName, i32 %xTimerPeriodInTicks, i32 %uxAutoReload, i8* %pvTimerID, void (%struct.tmrTimerControl*)* %pxCallbackFunction) local_unnamed_addr #0 section ".csection6" !dbg !6313 {
entry:
  call void @llvm.dbg.value(metadata i8* %pcTimerName, metadata !6317, metadata !DIExpression()), !dbg !6323
  call void @llvm.dbg.value(metadata i32 %xTimerPeriodInTicks, metadata !6318, metadata !DIExpression()), !dbg !6323
  call void @llvm.dbg.value(metadata i32 %uxAutoReload, metadata !6319, metadata !DIExpression()), !dbg !6323
  call void @llvm.dbg.value(metadata i8* %pvTimerID, metadata !6320, metadata !DIExpression()), !dbg !6323
  call void @llvm.dbg.value(metadata void (%struct.tmrTimerControl*)* %pxCallbackFunction, metadata !6321, metadata !DIExpression()), !dbg !6323
  %call = call i8* @pvPortMalloc(i32 44) #18, !dbg !6324
  %0 = bitcast i8* %call to %struct.tmrTimerControl*, !dbg !6325
  call void @llvm.dbg.value(metadata %struct.tmrTimerControl* %0, metadata !6322, metadata !DIExpression()), !dbg !6323
  %cmp.not = icmp eq i8* %call, null, !dbg !6326
  br i1 %cmp.not, label %if.end, label %if.then, !dbg !6328

if.then:                                          ; preds = %entry
  %1 = getelementptr inbounds i8, i8* %call, i32 40, !dbg !6329
  store i8 0, i8* %1, align 4, !dbg !6331, !tbaa !6139
  call fastcc void @prvInitialiseNewTimer(i8* %pcTimerName, i32 %xTimerPeriodInTicks, i32 %uxAutoReload, i8* %pvTimerID, void (%struct.tmrTimerControl*)* %pxCallbackFunction, %struct.tmrTimerControl* nonnull %0), !dbg !6332
  br label %if.end, !dbg !6333

if.end:                                           ; preds = %if.then, %entry
  ret %struct.tmrTimerControl* %0, !dbg !6334
}

; Function Attrs: nounwind
define internal fastcc void @prvInitialiseNewTimer(i8* %pcTimerName, i32 %xTimerPeriodInTicks, i32 %uxAutoReload, i8* %pvTimerID, void (%struct.tmrTimerControl*)* %pxCallbackFunction, %struct.tmrTimerControl* %pxNewTimer) unnamed_addr #0 section ".csection6" !dbg !6335 {
entry:
  call void @llvm.dbg.value(metadata i8* %pcTimerName, metadata !6339, metadata !DIExpression()), !dbg !6345
  call void @llvm.dbg.value(metadata i32 %xTimerPeriodInTicks, metadata !6340, metadata !DIExpression()), !dbg !6345
  call void @llvm.dbg.value(metadata i32 %uxAutoReload, metadata !6341, metadata !DIExpression()), !dbg !6345
  call void @llvm.dbg.value(metadata i8* %pvTimerID, metadata !6342, metadata !DIExpression()), !dbg !6345
  call void @llvm.dbg.value(metadata void (%struct.tmrTimerControl*)* %pxCallbackFunction, metadata !6343, metadata !DIExpression()), !dbg !6345
  call void @llvm.dbg.value(metadata %struct.tmrTimerControl* %pxNewTimer, metadata !6344, metadata !DIExpression()), !dbg !6345
  %cmp.not = icmp eq i32 %xTimerPeriodInTicks, 0, !dbg !6346
  br i1 %cmp.not, label %if.then, label %if.end, !dbg !6348

if.then:                                          ; preds = %entry
  %0 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #18, !dbg !6349, !srcloc !5975
  call void @llvm.dbg.value(metadata i32 %0, metadata !5972, metadata !DIExpression()) #18, !dbg !6352
  br label %for.cond, !dbg !6353

for.cond:                                         ; preds = %for.cond, %if.then
  br label %for.cond, !dbg !6354, !llvm.loop !6357

if.end:                                           ; preds = %entry
  call fastcc void @prvCheckForValidListAndQueue(), !dbg !6359
  %pcTimerName3 = getelementptr inbounds %struct.tmrTimerControl, %struct.tmrTimerControl* %pxNewTimer, i32 0, i32 0, !dbg !6360
  store i8* %pcTimerName, i8** %pcTimerName3, align 4, !dbg !6361, !tbaa !6362
  %xTimerPeriodInTicks4 = getelementptr inbounds %struct.tmrTimerControl, %struct.tmrTimerControl* %pxNewTimer, i32 0, i32 2, !dbg !6363
  store i32 %xTimerPeriodInTicks, i32* %xTimerPeriodInTicks4, align 4, !dbg !6364, !tbaa !6143
  %pvTimerID5 = getelementptr inbounds %struct.tmrTimerControl, %struct.tmrTimerControl* %pxNewTimer, i32 0, i32 3, !dbg !6365
  store i8* %pvTimerID, i8** %pvTimerID5, align 4, !dbg !6366, !tbaa !6367
  %pxCallbackFunction6 = getelementptr inbounds %struct.tmrTimerControl, %struct.tmrTimerControl* %pxNewTimer, i32 0, i32 4, !dbg !6368
  store void (%struct.tmrTimerControl*)* %pxCallbackFunction, void (%struct.tmrTimerControl*)** %pxCallbackFunction6, align 4, !dbg !6369, !tbaa !6163
  %xTimerListItem = getelementptr inbounds %struct.tmrTimerControl, %struct.tmrTimerControl* %pxNewTimer, i32 0, i32 1, !dbg !6370
  call void @xcall_arg1p(i32 4, i8* bitcast (void (%struct.xLIST_ITEM*)* @vListInitialiseItem to i8*), i8* %1, i32 ptrtoint (%struct.xLIST_ITEM* getelementptr (%struct.xLIST_ITEM, %struct.xLIST_ITEM* null, i32 1) to i32)), !dbg !6371
  %cmp7.not = icmp eq i32 %uxAutoReload, 0, !dbg !6372
  br i1 %cmp7.not, label %if.end12, label %if.then9, !dbg !6374
  %1 = bitcast %struct.xLIST_ITEM* %xTimerListItem to i8*

if.then9:                                         ; preds = %if.end
  %ucStatus = getelementptr inbounds %struct.tmrTimerControl, %struct.tmrTimerControl* %pxNewTimer, i32 0, i32 6, !dbg !6375
  %2 = load i8, i8* %ucStatus, align 4, !dbg !6377, !tbaa !6139
  %3 = or i8 %2, 4, !dbg !6377
  store i8 %3, i8* %ucStatus, align 4, !dbg !6377, !tbaa !6139
  br label %if.end12, !dbg !6378

if.end12:                                         ; preds = %if.then9, %if.end
  ret void, !dbg !6379
}

; Function Attrs: nounwind
define dso_local i32 @xTimerGenericCommand(%struct.tmrTimerControl* %xTimer, i32 %xCommandID, i32 %xOptionalValue, i32* %pxHigherPriorityTaskWoken, i32 %xTicksToWait) local_unnamed_addr #0 section ".csection6" !dbg !6380 {
entry:
  %xMessage = alloca %struct.tmrTimerQueueMessage, align 4
  call void @llvm.dbg.value(metadata %struct.tmrTimerControl* %xTimer, metadata !6384, metadata !DIExpression()), !dbg !6391
  call void @llvm.dbg.value(metadata i32 %xCommandID, metadata !6385, metadata !DIExpression()), !dbg !6391
  call void @llvm.dbg.value(metadata i32 %xOptionalValue, metadata !6386, metadata !DIExpression()), !dbg !6391
  call void @llvm.dbg.value(metadata i32* %pxHigherPriorityTaskWoken, metadata !6387, metadata !DIExpression()), !dbg !6391
  call void @llvm.dbg.value(metadata i32 %xTicksToWait, metadata !6388, metadata !DIExpression()), !dbg !6391
  call void @llvm.dbg.value(metadata i32 0, metadata !6389, metadata !DIExpression()), !dbg !6391
  %0 = bitcast %struct.tmrTimerQueueMessage* %xMessage to i8*, !dbg !6392
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %0) #18, !dbg !6392
  call void @llvm.dbg.declare(metadata %struct.tmrTimerQueueMessage* %xMessage, metadata !6390, metadata !DIExpression()), !dbg !6393
  %cmp = icmp eq %struct.tmrTimerControl* %xTimer, null, !dbg !6394
  br i1 %cmp, label %if.then, label %if.end, !dbg !6396

if.then:                                          ; preds = %entry
  %1 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #18, !dbg !6397, !srcloc !5975
  call void @llvm.dbg.value(metadata i32 %1, metadata !5972, metadata !DIExpression()) #18, !dbg !6400
  br label %for.cond, !dbg !6401

for.cond:                                         ; preds = %for.cond, %if.then
  br label %for.cond, !dbg !6402, !llvm.loop !6405

if.end:                                           ; preds = %entry
  %2 = load %struct.QueueDefinition*, %struct.QueueDefinition** @xTimerQueue, align 4, !dbg !6407, !tbaa !1096
  %cmp1.not = icmp eq %struct.QueueDefinition* %2, null, !dbg !6409
  br i1 %cmp1.not, label %if.end16, label %if.then2, !dbg !6410

if.then2:                                         ; preds = %if.end
  %xMessageID = getelementptr inbounds %struct.tmrTimerQueueMessage, %struct.tmrTimerQueueMessage* %xMessage, i32 0, i32 0, !dbg !6411
  store i32 %xCommandID, i32* %xMessageID, align 4, !dbg !6413, !tbaa !6118
  %xMessageValue = getelementptr inbounds %struct.tmrTimerQueueMessage, %struct.tmrTimerQueueMessage* %xMessage, i32 0, i32 1, i32 0, i32 0, !dbg !6414
  store i32 %xOptionalValue, i32* %xMessageValue, align 4, !dbg !6415, !tbaa !1246
  %pxTimer = getelementptr inbounds %struct.tmrTimerQueueMessage, %struct.tmrTimerQueueMessage* %xMessage, i32 0, i32 1, i32 0, i32 1, !dbg !6416
  store %struct.tmrTimerControl* %xTimer, %struct.tmrTimerControl** %pxTimer, align 4, !dbg !6417, !tbaa !1246
  %cmp5 = icmp slt i32 %xCommandID, 6, !dbg !6418
  br i1 %cmp5, label %if.then6, label %if.else12, !dbg !6420

if.then6:                                         ; preds = %if.then2
  %call = call i32 @icall_arg0(i32 0, i32 ()* @xTaskGetSchedulerState), !dbg !6421
  %cmp7 = icmp eq i32 %call, 2, !dbg !6424
  br i1 %cmp7, label %if.then8, label %if.else, !dbg !6425

if.then8:                                         ; preds = %if.then6
  %3 = load %struct.QueueDefinition*, %struct.QueueDefinition** @xTimerQueue, align 4, !dbg !6426, !tbaa !1096
  %call9 = call i32 @xQueueGenericSend(%struct.QueueDefinition* %3, i8* nonnull %0, i32 %xTicksToWait, i32 0) #18, !dbg !6426
  call void @llvm.dbg.value(metadata i32 %call9, metadata !6389, metadata !DIExpression()), !dbg !6391
  br label %if.end16, !dbg !6428

if.else:                                          ; preds = %if.then6
  %4 = load %struct.QueueDefinition*, %struct.QueueDefinition** @xTimerQueue, align 4, !dbg !6429, !tbaa !1096
  %call10 = call i32 @xQueueGenericSend(%struct.QueueDefinition* %4, i8* nonnull %0, i32 0, i32 0) #18, !dbg !6429
  call void @llvm.dbg.value(metadata i32 %call10, metadata !6389, metadata !DIExpression()), !dbg !6391
  br label %if.end16

if.else12:                                        ; preds = %if.then2
  %call13 = call i32 @xQueueGenericSendFromISR(%struct.QueueDefinition* nonnull %2, i8* nonnull %0, i32* %pxHigherPriorityTaskWoken, i32 0) #18, !dbg !6431
  call void @llvm.dbg.value(metadata i32 %call13, metadata !6389, metadata !DIExpression()), !dbg !6391
  br label %if.end16

if.end16:                                         ; preds = %if.else12, %if.else, %if.then8, %if.end
  %xReturn.0 = phi i32 [ %call9, %if.then8 ], [ %call10, %if.else ], [ %call13, %if.else12 ], [ 0, %if.end ], !dbg !6391
  call void @llvm.dbg.value(metadata i32 %xReturn.0, metadata !6389, metadata !DIExpression()), !dbg !6391
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %0) #18, !dbg !6433
  ret i32 %xReturn.0, !dbg !6434
}

; Function Attrs: nounwind
define dso_local %struct.tskTaskControlBlock* @xTimerGetTimerDaemonTaskHandle() local_unnamed_addr #0 section ".csection6" !dbg !6435 {
entry:
  %0 = load %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @xTimerTaskHandle, align 4, !dbg !6438, !tbaa !1096
  %cmp.not = icmp eq %struct.tskTaskControlBlock* %0, null, !dbg !6438
  br i1 %cmp.not, label %if.then, label %if.end, !dbg !6440

if.then:                                          ; preds = %entry
  %1 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #18, !dbg !6441, !srcloc !5975
  call void @llvm.dbg.value(metadata i32 %1, metadata !5972, metadata !DIExpression()) #18, !dbg !6444
  br label %for.cond, !dbg !6445

for.cond:                                         ; preds = %for.cond, %if.then
  br label %for.cond, !dbg !6446, !llvm.loop !6449

if.end:                                           ; preds = %entry
  ret %struct.tskTaskControlBlock* %0, !dbg !6451
}

; Function Attrs: nounwind
define dso_local i32 @xTimerGetPeriod(%struct.tmrTimerControl* readonly %xTimer) local_unnamed_addr #0 section ".csection6" !dbg !6452 {
entry:
  call void @llvm.dbg.value(metadata %struct.tmrTimerControl* %xTimer, metadata !6456, metadata !DIExpression()), !dbg !6458
  call void @llvm.dbg.value(metadata %struct.tmrTimerControl* %xTimer, metadata !6457, metadata !DIExpression()), !dbg !6458
  %cmp = icmp eq %struct.tmrTimerControl* %xTimer, null, !dbg !6459
  br i1 %cmp, label %if.then, label %if.end, !dbg !6461

if.then:                                          ; preds = %entry
  %0 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #18, !dbg !6462, !srcloc !5975
  call void @llvm.dbg.value(metadata i32 %0, metadata !5972, metadata !DIExpression()) #18, !dbg !6465
  br label %for.cond, !dbg !6466

for.cond:                                         ; preds = %for.cond, %if.then
  br label %for.cond, !dbg !6467, !llvm.loop !6470

if.end:                                           ; preds = %entry
  %xTimerPeriodInTicks = getelementptr inbounds %struct.tmrTimerControl, %struct.tmrTimerControl* %xTimer, i32 0, i32 2, !dbg !6472
  %1 = load i32, i32* %xTimerPeriodInTicks, align 4, !dbg !6472, !tbaa !6143
  ret i32 %1, !dbg !6473
}

; Function Attrs: nounwind
define dso_local void @vTimerSetReloadMode(%struct.tmrTimerControl* %xTimer, i32 %uxAutoReload) local_unnamed_addr #0 section ".csection6" !dbg !6474 {
entry:
  call void @llvm.dbg.value(metadata %struct.tmrTimerControl* %xTimer, metadata !6478, metadata !DIExpression()), !dbg !6481
  call void @llvm.dbg.value(metadata i32 %uxAutoReload, metadata !6479, metadata !DIExpression()), !dbg !6481
  call void @llvm.dbg.value(metadata %struct.tmrTimerControl* %xTimer, metadata !6480, metadata !DIExpression()), !dbg !6481
  %cmp = icmp eq %struct.tmrTimerControl* %xTimer, null, !dbg !6482
  br i1 %cmp, label %if.then, label %if.end, !dbg !6484

if.then:                                          ; preds = %entry
  %0 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #18, !dbg !6485, !srcloc !5975
  call void @llvm.dbg.value(metadata i32 %0, metadata !5972, metadata !DIExpression()) #18, !dbg !6488
  br label %for.cond, !dbg !6489

for.cond:                                         ; preds = %for.cond, %if.then
  br label %for.cond, !dbg !6490, !llvm.loop !6493

if.end:                                           ; preds = %entry
  call void @xcall_arg0(i32 0, void ()* @vPortEnterCritical), !dbg !6495
  %cmp1.not = icmp eq i32 %uxAutoReload, 0, !dbg !6496
  br i1 %cmp1.not, label %if.else, label %if.then2, !dbg !6499

if.then2:                                         ; preds = %if.end
  %ucStatus = getelementptr inbounds %struct.tmrTimerControl, %struct.tmrTimerControl* %xTimer, i32 0, i32 6, !dbg !6500
  %1 = load i8, i8* %ucStatus, align 4, !dbg !6502, !tbaa !6139
  %2 = or i8 %1, 4, !dbg !6502
  store i8 %2, i8* %ucStatus, align 4, !dbg !6502, !tbaa !6139
  br label %if.end7, !dbg !6503

if.else:                                          ; preds = %if.end
  %ucStatus4 = getelementptr inbounds %struct.tmrTimerControl, %struct.tmrTimerControl* %xTimer, i32 0, i32 6, !dbg !6504
  %3 = load i8, i8* %ucStatus4, align 4, !dbg !6506, !tbaa !6139
  %4 = and i8 %3, -5, !dbg !6506
  store i8 %4, i8* %ucStatus4, align 4, !dbg !6506, !tbaa !6139
  br label %if.end7

if.end7:                                          ; preds = %if.else, %if.then2
  call void @xcall_arg0(i32 0, void ()* @vPortExitCritical), !dbg !6507
  ret void, !dbg !6508
}

; Function Attrs: nounwind
define dso_local i32 @uxTimerGetReloadMode(%struct.tmrTimerControl* readonly %xTimer) local_unnamed_addr #0 section ".csection6" !dbg !6509 {
entry:
  call void @llvm.dbg.value(metadata %struct.tmrTimerControl* %xTimer, metadata !6513, metadata !DIExpression()), !dbg !6516
  call void @llvm.dbg.value(metadata %struct.tmrTimerControl* %xTimer, metadata !6514, metadata !DIExpression()), !dbg !6516
  %cmp = icmp eq %struct.tmrTimerControl* %xTimer, null, !dbg !6517
  br i1 %cmp, label %if.then, label %if.end, !dbg !6519

if.then:                                          ; preds = %entry
  %0 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #18, !dbg !6520, !srcloc !5975
  call void @llvm.dbg.value(metadata i32 %0, metadata !5972, metadata !DIExpression()) #18, !dbg !6523
  br label %for.cond, !dbg !6524

for.cond:                                         ; preds = %for.cond, %if.then
  br label %for.cond, !dbg !6525, !llvm.loop !6528

if.end:                                           ; preds = %entry
  call void @xcall_arg0(i32 0, void ()* @vPortEnterCritical), !dbg !6530
  %ucStatus = getelementptr inbounds %struct.tmrTimerControl, %struct.tmrTimerControl* %xTimer, i32 0, i32 6, !dbg !6531
  %1 = load i8, i8* %ucStatus, align 4, !dbg !6531, !tbaa !6139
  %2 = lshr i8 %1, 2, !dbg !6534
  %.lobit = and i8 %2, 1, !dbg !6534
  %3 = zext i8 %.lobit to i32, !dbg !6534
  call void @llvm.dbg.value(metadata i32 %3, metadata !6515, metadata !DIExpression()), !dbg !6516
  call void @xcall_arg0(i32 0, void ()* @vPortExitCritical), !dbg !6535
  ret i32 %3, !dbg !6536
}

; Function Attrs: nounwind
define dso_local i32 @xTimerGetExpiryTime(%struct.tmrTimerControl* readonly %xTimer) local_unnamed_addr #0 section ".csection6" !dbg !6537 {
entry:
  call void @llvm.dbg.value(metadata %struct.tmrTimerControl* %xTimer, metadata !6539, metadata !DIExpression()), !dbg !6542
  call void @llvm.dbg.value(metadata %struct.tmrTimerControl* %xTimer, metadata !6540, metadata !DIExpression()), !dbg !6542
  %cmp = icmp eq %struct.tmrTimerControl* %xTimer, null, !dbg !6543
  br i1 %cmp, label %if.then, label %if.end, !dbg !6545

if.then:                                          ; preds = %entry
  %0 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #18, !dbg !6546, !srcloc !5975
  call void @llvm.dbg.value(metadata i32 %0, metadata !5972, metadata !DIExpression()) #18, !dbg !6549
  br label %for.cond, !dbg !6550

for.cond:                                         ; preds = %for.cond, %if.then
  br label %for.cond, !dbg !6551, !llvm.loop !6554

if.end:                                           ; preds = %entry
  %xItemValue = getelementptr inbounds %struct.tmrTimerControl, %struct.tmrTimerControl* %xTimer, i32 0, i32 1, i32 0, !dbg !6556
  %1 = load i32, i32* %xItemValue, align 4, !dbg !6556, !tbaa !6229
  call void @llvm.dbg.value(metadata i32 %1, metadata !6541, metadata !DIExpression()), !dbg !6542
  ret i32 %1, !dbg !6557
}

; Function Attrs: nounwind
define dso_local i8* @pcTimerGetName(%struct.tmrTimerControl* readonly %xTimer) local_unnamed_addr #0 section ".csection6" !dbg !6558 {
entry:
  call void @llvm.dbg.value(metadata %struct.tmrTimerControl* %xTimer, metadata !6562, metadata !DIExpression()), !dbg !6564
  call void @llvm.dbg.value(metadata %struct.tmrTimerControl* %xTimer, metadata !6563, metadata !DIExpression()), !dbg !6564
  %cmp = icmp eq %struct.tmrTimerControl* %xTimer, null, !dbg !6565
  br i1 %cmp, label %if.then, label %if.end, !dbg !6567

if.then:                                          ; preds = %entry
  %0 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #18, !dbg !6568, !srcloc !5975
  call void @llvm.dbg.value(metadata i32 %0, metadata !5972, metadata !DIExpression()) #18, !dbg !6571
  br label %for.cond, !dbg !6572

for.cond:                                         ; preds = %for.cond, %if.then
  br label %for.cond, !dbg !6573, !llvm.loop !6576

if.end:                                           ; preds = %entry
  %pcTimerName = getelementptr inbounds %struct.tmrTimerControl, %struct.tmrTimerControl* %xTimer, i32 0, i32 0, !dbg !6578
  %1 = load i8*, i8** %pcTimerName, align 4, !dbg !6578, !tbaa !6362
  ret i8* %1, !dbg !6579
}

; Function Attrs: nounwind
define dso_local i32 @xTimerIsTimerActive(%struct.tmrTimerControl* readonly %xTimer) local_unnamed_addr #0 section ".csection6" !dbg !6580 {
entry:
  call void @llvm.dbg.value(metadata %struct.tmrTimerControl* %xTimer, metadata !6584, metadata !DIExpression()), !dbg !6587
  call void @llvm.dbg.value(metadata %struct.tmrTimerControl* %xTimer, metadata !6586, metadata !DIExpression()), !dbg !6587
  %cmp = icmp eq %struct.tmrTimerControl* %xTimer, null, !dbg !6588
  br i1 %cmp, label %if.then, label %if.end, !dbg !6590

if.then:                                          ; preds = %entry
  %0 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #18, !dbg !6591, !srcloc !5975
  call void @llvm.dbg.value(metadata i32 %0, metadata !5972, metadata !DIExpression()) #18, !dbg !6594
  br label %for.cond, !dbg !6595

for.cond:                                         ; preds = %for.cond, %if.then
  br label %for.cond, !dbg !6596, !llvm.loop !6599

if.end:                                           ; preds = %entry
  call void @xcall_arg0(i32 0, void ()* @vPortEnterCritical), !dbg !6601
  %ucStatus = getelementptr inbounds %struct.tmrTimerControl, %struct.tmrTimerControl* %xTimer, i32 0, i32 6, !dbg !6602
  %1 = load i8, i8* %ucStatus, align 4, !dbg !6602, !tbaa !6139
  %2 = and i8 %1, 1, !dbg !6605
  %3 = zext i8 %2 to i32, !dbg !6606
  call void @llvm.dbg.value(metadata i32 %3, metadata !6585, metadata !DIExpression()), !dbg !6587
  call void @xcall_arg0(i32 0, void ()* @vPortExitCritical), !dbg !6607
  ret i32 %3, !dbg !6608
}

; Function Attrs: nounwind
define dso_local i8* @pvTimerGetTimerID(%struct.tmrTimerControl* readonly %xTimer) local_unnamed_addr #0 section ".csection6" !dbg !6609 {
entry:
  call void @llvm.dbg.value(metadata %struct.tmrTimerControl* %xTimer, metadata !6614, metadata !DIExpression()), !dbg !6617
  call void @llvm.dbg.value(metadata %struct.tmrTimerControl* %xTimer, metadata !6615, metadata !DIExpression()), !dbg !6617
  %cmp = icmp eq %struct.tmrTimerControl* %xTimer, null, !dbg !6618
  br i1 %cmp, label %if.then, label %if.end, !dbg !6620

if.then:                                          ; preds = %entry
  %0 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #18, !dbg !6621, !srcloc !5975
  call void @llvm.dbg.value(metadata i32 %0, metadata !5972, metadata !DIExpression()) #18, !dbg !6624
  br label %for.cond, !dbg !6625

for.cond:                                         ; preds = %for.cond, %if.then
  br label %for.cond, !dbg !6626, !llvm.loop !6629

if.end:                                           ; preds = %entry
  call void @xcall_arg0(i32 0, void ()* @vPortEnterCritical), !dbg !6631
  %pvTimerID = getelementptr inbounds %struct.tmrTimerControl, %struct.tmrTimerControl* %xTimer, i32 0, i32 3, !dbg !6632
  %1 = load i8*, i8** %pvTimerID, align 4, !dbg !6632, !tbaa !6367
  call void @llvm.dbg.value(metadata i8* %1, metadata !6616, metadata !DIExpression()), !dbg !6617
  call void @xcall_arg0(i32 0, void ()* @vPortExitCritical), !dbg !6634
  ret i8* %1, !dbg !6635
}

; Function Attrs: nounwind
define dso_local void @vTimerSetTimerID(%struct.tmrTimerControl* %xTimer, i8* %pvNewID) local_unnamed_addr #0 section ".csection6" !dbg !6636 {
entry:
  call void @llvm.dbg.value(metadata %struct.tmrTimerControl* %xTimer, metadata !6640, metadata !DIExpression()), !dbg !6643
  call void @llvm.dbg.value(metadata i8* %pvNewID, metadata !6641, metadata !DIExpression()), !dbg !6643
  call void @llvm.dbg.value(metadata %struct.tmrTimerControl* %xTimer, metadata !6642, metadata !DIExpression()), !dbg !6643
  %cmp = icmp eq %struct.tmrTimerControl* %xTimer, null, !dbg !6644
  br i1 %cmp, label %if.then, label %if.end, !dbg !6646

if.then:                                          ; preds = %entry
  %0 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #18, !dbg !6647, !srcloc !5975
  call void @llvm.dbg.value(metadata i32 %0, metadata !5972, metadata !DIExpression()) #18, !dbg !6650
  br label %for.cond, !dbg !6651

for.cond:                                         ; preds = %for.cond, %if.then
  br label %for.cond, !dbg !6652, !llvm.loop !6655

if.end:                                           ; preds = %entry
  call void @xcall_arg0(i32 0, void ()* @vPortEnterCritical), !dbg !6657
  %pvTimerID = getelementptr inbounds %struct.tmrTimerControl, %struct.tmrTimerControl* %xTimer, i32 0, i32 3, !dbg !6658
  store i8* %pvNewID, i8** %pvTimerID, align 4, !dbg !6660, !tbaa !6367
  call void @xcall_arg0(i32 0, void ()* @vPortExitCritical), !dbg !6661
  ret void, !dbg !6662
}

; Function Attrs: norecurse nounwind readonly willreturn
define dso_local i32 @uxTimerGetTimerNumber(%struct.tmrTimerControl* nocapture readonly %xTimer) local_unnamed_addr #6 section ".csection6" !dbg !6663 {
entry:
  call void @llvm.dbg.value(metadata %struct.tmrTimerControl* %xTimer, metadata !6665, metadata !DIExpression()), !dbg !6666
  %uxTimerNumber = getelementptr inbounds %struct.tmrTimerControl, %struct.tmrTimerControl* %xTimer, i32 0, i32 5, !dbg !6667
  %0 = load i32, i32* %uxTimerNumber, align 4, !dbg !6667, !tbaa !6668
  ret i32 %0, !dbg !6669
}

; Function Attrs: nofree norecurse nounwind willreturn writeonly
define dso_local void @vTimerSetTimerNumber(%struct.tmrTimerControl* nocapture %xTimer, i32 %uxTimerNumber) local_unnamed_addr #7 section ".csection6" !dbg !6670 {
entry:
  call void @llvm.dbg.value(metadata %struct.tmrTimerControl* %xTimer, metadata !6674, metadata !DIExpression()), !dbg !6676
  call void @llvm.dbg.value(metadata i32 %uxTimerNumber, metadata !6675, metadata !DIExpression()), !dbg !6676
  %uxTimerNumber1 = getelementptr inbounds %struct.tmrTimerControl, %struct.tmrTimerControl* %xTimer, i32 0, i32 5, !dbg !6677
  store i32 %uxTimerNumber, i32* %uxTimerNumber1, align 4, !dbg !6678, !tbaa !6668
  ret void, !dbg !6679
}

; Function Attrs: nounwind
define dso_local %struct.EventGroupDef_t* @xEventGroupCreate() local_unnamed_addr #0 section ".csection18" !dbg !6680 {
entry:
  %call = call i8* @pvPortMalloc(i32 28) #18, !dbg !6687
  call void @llvm.dbg.value(metadata i8* %call, metadata !6686, metadata !DIExpression()), !dbg !6688
  %cmp.not = icmp eq i8* %call, null, !dbg !6689
  br i1 %cmp.not, label %if.end, label %if.then, !dbg !6691

if.then:                                          ; preds = %entry
  %uxEventBits = bitcast i8* %call to i32*, !dbg !6692
  store i32 0, i32* %uxEventBits, align 4, !dbg !6694, !tbaa !6695
  %xTasksWaitingForBits = getelementptr inbounds i8, i8* %call, i32 4, !dbg !6697
  %0 = bitcast i8* %xTasksWaitingForBits to %struct.xLIST*, !dbg !6697
  call void @xcall_arg1p(i32 4, i8* bitcast (void (%struct.xLIST*)* @vListInitialise to i8*), i8* %1, i32 ptrtoint (%struct.xLIST* getelementptr (%struct.xLIST, %struct.xLIST* null, i32 1) to i32)), !dbg !6698
  br label %if.end, !dbg !6699
  %1 = bitcast %struct.xLIST* %0 to i8*

if.end:                                           ; preds = %if.then, %entry
  %2 = bitcast i8* %call to %struct.EventGroupDef_t*, !dbg !6700
  call void @llvm.dbg.value(metadata %struct.EventGroupDef_t* %2, metadata !6686, metadata !DIExpression()), !dbg !6688
  ret %struct.EventGroupDef_t* %2, !dbg !6701
}

; Function Attrs: nounwind
define dso_local i32 @xEventGroupSync(%struct.EventGroupDef_t* %xEventGroup, i32 %uxBitsToSet, i32 %uxBitsToWaitFor, i32 %xTicksToWait) local_unnamed_addr #0 section ".csection18" !dbg !6702 {
entry:
  call void @llvm.dbg.value(metadata %struct.EventGroupDef_t* %xEventGroup, metadata !6707, metadata !DIExpression()), !dbg !6716
  call void @llvm.dbg.value(metadata i32 %uxBitsToSet, metadata !6708, metadata !DIExpression()), !dbg !6716
  call void @llvm.dbg.value(metadata i32 %uxBitsToWaitFor, metadata !6709, metadata !DIExpression()), !dbg !6716
  call void @llvm.dbg.value(metadata i32 %xTicksToWait, metadata !6710, metadata !DIExpression()), !dbg !6716
  call void @llvm.dbg.value(metadata %struct.EventGroupDef_t* %xEventGroup, metadata !6713, metadata !DIExpression()), !dbg !6716
  call void @llvm.dbg.value(metadata i32 0, metadata !6715, metadata !DIExpression()), !dbg !6716
  %cmp = icmp ugt i32 %uxBitsToWaitFor, 16777215, !dbg !6717
  br i1 %cmp, label %if.then, label %if.end, !dbg !6719

if.then:                                          ; preds = %entry
  %0 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #18, !dbg !6720, !srcloc !6726
  call void @llvm.dbg.value(metadata i32 %0, metadata !6723, metadata !DIExpression()) #18, !dbg !6727
  br label %for.cond, !dbg !6728

for.cond:                                         ; preds = %for.cond, %if.then
  br label %for.cond, !dbg !6729, !llvm.loop !6732

if.end:                                           ; preds = %entry
  %cmp3.not = icmp eq i32 %uxBitsToWaitFor, 0, !dbg !6734
  br i1 %cmp3.not, label %if.then7, label %if.end9, !dbg !6736

if.then7:                                         ; preds = %if.end
  %1 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #18, !dbg !6737, !srcloc !6726
  call void @llvm.dbg.value(metadata i32 %1, metadata !6723, metadata !DIExpression()) #18, !dbg !6740
  br label %for.cond8, !dbg !6741

for.cond8:                                        ; preds = %for.cond8, %if.then7
  br label %for.cond8, !dbg !6742, !llvm.loop !6745

if.end9:                                          ; preds = %if.end
  %call = call i32 @icall_arg0(i32 0, i32 ()* @xTaskGetSchedulerState), !dbg !6747
  %cmp10 = icmp eq i32 %call, 0, !dbg !6747
  %cmp12 = icmp ne i32 %xTicksToWait, 0, !dbg !6747
  %2 = and i1 %cmp12, %cmp10, !dbg !6747
  br i1 %2, label %if.then16, label %if.end18, !dbg !6750

if.then16:                                        ; preds = %if.end9
  %3 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #18, !dbg !6751, !srcloc !6726
  call void @llvm.dbg.value(metadata i32 %3, metadata !6723, metadata !DIExpression()) #18, !dbg !6754
  br label %for.cond17, !dbg !6755

for.cond17:                                       ; preds = %for.cond17, %if.then16
  br label %for.cond17, !dbg !6756, !llvm.loop !6759

if.end18:                                         ; preds = %if.end9
  call void @xcall_arg0(i32 0, void ()* @vTaskSuspendAll), !dbg !6761
  %uxEventBits = getelementptr inbounds %struct.EventGroupDef_t, %struct.EventGroupDef_t* %xEventGroup, i32 0, i32 0, !dbg !6762
  %4 = load i32, i32* %uxEventBits, align 4, !dbg !6762, !tbaa !6695
  call void @llvm.dbg.value(metadata i32 %4, metadata !6711, metadata !DIExpression()), !dbg !6716
  %call19 = call i32 @xEventGroupSetBits(%struct.EventGroupDef_t* %xEventGroup, i32 %uxBitsToSet), !dbg !6764
  %or = or i32 %4, %uxBitsToSet, !dbg !6765
  %and20 = and i32 %or, %uxBitsToWaitFor, !dbg !6767
  %cmp21 = icmp eq i32 %and20, %uxBitsToWaitFor, !dbg !6768
  br i1 %cmp21, label %if.then23, label %if.else, !dbg !6769

if.then23:                                        ; preds = %if.end18
  call void @llvm.dbg.value(metadata i32 %or, metadata !6712, metadata !DIExpression()), !dbg !6716
  %neg = xor i32 %uxBitsToWaitFor, -1, !dbg !6770
  %5 = load i32, i32* %uxEventBits, align 4, !dbg !6772, !tbaa !6695
  %and26 = and i32 %5, %neg, !dbg !6772
  store i32 %and26, i32* %uxEventBits, align 4, !dbg !6772, !tbaa !6695
  call void @llvm.dbg.value(metadata i32 0, metadata !6710, metadata !DIExpression()), !dbg !6716
  br label %if.end35, !dbg !6773

if.else:                                          ; preds = %if.end18
  br i1 %cmp12, label %if.then29, label %if.else32, !dbg !6774

if.then29:                                        ; preds = %if.else
  %xTasksWaitingForBits = getelementptr inbounds %struct.EventGroupDef_t, %struct.EventGroupDef_t* %xEventGroup, i32 0, i32 1, !dbg !6776
  %or31 = or i32 %uxBitsToWaitFor, 83886080, !dbg !6779
  call void @vTaskPlaceOnUnorderedEventList(%struct.xLIST* nonnull %xTasksWaitingForBits, i32 %or31, i32 %xTicksToWait) #18, !dbg !6780
  call void @llvm.dbg.value(metadata i32 0, metadata !6712, metadata !DIExpression()), !dbg !6716
  br label %if.end35, !dbg !6781

if.else32:                                        ; preds = %if.else
  %6 = load i32, i32* %uxEventBits, align 4, !dbg !6782, !tbaa !6695
  call void @llvm.dbg.value(metadata i32 %6, metadata !6712, metadata !DIExpression()), !dbg !6716
  call void @llvm.dbg.value(metadata i32 1, metadata !6715, metadata !DIExpression()), !dbg !6716
  br label %if.end35

if.end35:                                         ; preds = %if.else32, %if.then29, %if.then23
  %uxReturn.0 = phi i32 [ %or, %if.then23 ], [ 0, %if.then29 ], [ %6, %if.else32 ], !dbg !6784
  %cmp37.not = phi i1 [ true, %if.then23 ], [ false, %if.then29 ], [ true, %if.else32 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !6715, metadata !DIExpression()), !dbg !6716
  call void @llvm.dbg.value(metadata i32 undef, metadata !6710, metadata !DIExpression()), !dbg !6716
  call void @llvm.dbg.value(metadata i32 %uxReturn.0, metadata !6712, metadata !DIExpression()), !dbg !6716
  %call36 = call i32 @icall_arg0(i32 0, i32 ()* @xTaskResumeAll), !dbg !6785
  call void @llvm.dbg.value(metadata i32 %call36, metadata !6714, metadata !DIExpression()), !dbg !6716
  br i1 %cmp37.not, label %if.end63, label %if.then39, !dbg !6786

if.then39:                                        ; preds = %if.end35
  %cmp40 = icmp eq i32 %call36, 0, !dbg !6787
  br i1 %cmp40, label %if.then42, label %if.end44, !dbg !6791

if.then42:                                        ; preds = %if.then39
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6792, !tbaa !1105
  call void asm sideeffect "dsb", "~{memory}"() #18, !dbg !6792, !srcloc !6795
  call void asm sideeffect "isb", ""() #18, !dbg !6792, !srcloc !6796
  br label %if.end44, !dbg !6797

if.end44:                                         ; preds = %if.then42, %if.then39
  %call45 = call i32 @icall_arg0(i32 0, i32 ()* @uxTaskResetEventItemValue), !dbg !6798
  call void @llvm.dbg.value(metadata i32 %call45, metadata !6712, metadata !DIExpression()), !dbg !6716
  %and46 = and i32 %call45, 33554432, !dbg !6799
  %cmp47 = icmp eq i32 %and46, 0, !dbg !6801
  br i1 %cmp47, label %if.then49, label %if.end61, !dbg !6802

if.then49:                                        ; preds = %if.end44
  call void @xcall_arg0(i32 0, void ()* @vPortEnterCritical), !dbg !6803
  %7 = load i32, i32* %uxEventBits, align 4, !dbg !6805, !tbaa !6695
  call void @llvm.dbg.value(metadata i32 %7, metadata !6712, metadata !DIExpression()), !dbg !6716
  %and51 = and i32 %7, %uxBitsToWaitFor, !dbg !6807
  %cmp52 = icmp eq i32 %and51, %uxBitsToWaitFor, !dbg !6809
  br i1 %cmp52, label %if.then54, label %if.end59, !dbg !6810

if.then54:                                        ; preds = %if.then49
  %neg55 = xor i32 %uxBitsToWaitFor, -1, !dbg !6811
  %and57 = and i32 %7, %neg55, !dbg !6813
  store i32 %and57, i32* %uxEventBits, align 4, !dbg !6813, !tbaa !6695
  br label %if.end59, !dbg !6814

if.end59:                                         ; preds = %if.then54, %if.then49
  call void @xcall_arg0(i32 0, void ()* @vPortExitCritical), !dbg !6815
  call void @llvm.dbg.value(metadata i32 1, metadata !6715, metadata !DIExpression()), !dbg !6716
  br label %if.end61, !dbg !6816

if.end61:                                         ; preds = %if.end59, %if.end44
  %uxReturn.1 = phi i32 [ %7, %if.end59 ], [ %call45, %if.end44 ], !dbg !6817
  call void @llvm.dbg.value(metadata i32 undef, metadata !6715, metadata !DIExpression()), !dbg !6716
  call void @llvm.dbg.value(metadata i32 %uxReturn.1, metadata !6712, metadata !DIExpression()), !dbg !6716
  %and62 = and i32 %uxReturn.1, 16777215, !dbg !6818
  call void @llvm.dbg.value(metadata i32 %and62, metadata !6712, metadata !DIExpression()), !dbg !6716
  br label %if.end63, !dbg !6819

if.end63:                                         ; preds = %if.end61, %if.end35
  %uxReturn.2 = phi i32 [ %and62, %if.end61 ], [ %uxReturn.0, %if.end35 ], !dbg !6716
  call void @llvm.dbg.value(metadata i32 undef, metadata !6715, metadata !DIExpression()), !dbg !6716
  call void @llvm.dbg.value(metadata i32 %uxReturn.2, metadata !6712, metadata !DIExpression()), !dbg !6716
  ret i32 %uxReturn.2, !dbg !6820
}

; Function Attrs: nounwind
define dso_local i32 @xEventGroupSetBits(%struct.EventGroupDef_t* %xEventGroup, i32 %uxBitsToSet) local_unnamed_addr #0 section ".csection18" !dbg !6821 {
entry:
  call void @llvm.dbg.value(metadata %struct.EventGroupDef_t* %xEventGroup, metadata !6825, metadata !DIExpression()), !dbg !6838
  call void @llvm.dbg.value(metadata i32 %uxBitsToSet, metadata !6826, metadata !DIExpression()), !dbg !6838
  call void @llvm.dbg.value(metadata i32 0, metadata !6833, metadata !DIExpression()), !dbg !6838
  call void @llvm.dbg.value(metadata %struct.EventGroupDef_t* %xEventGroup, metadata !6836, metadata !DIExpression()), !dbg !6838
  call void @llvm.dbg.value(metadata i32 0, metadata !6837, metadata !DIExpression()), !dbg !6838
  %cmp = icmp eq %struct.EventGroupDef_t* %xEventGroup, null, !dbg !6839
  br i1 %cmp, label %if.then, label %if.end, !dbg !6841

if.then:                                          ; preds = %entry
  %0 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #18, !dbg !6842, !srcloc !6726
  call void @llvm.dbg.value(metadata i32 %0, metadata !6723, metadata !DIExpression()) #18, !dbg !6845
  br label %for.cond, !dbg !6846

for.cond:                                         ; preds = %for.cond, %if.then
  br label %for.cond, !dbg !6847, !llvm.loop !6850

if.end:                                           ; preds = %entry
  %cmp1 = icmp ugt i32 %uxBitsToSet, 16777215, !dbg !6852
  br i1 %cmp1, label %if.then4, label %if.end6, !dbg !6854

if.then4:                                         ; preds = %if.end
  %1 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #18, !dbg !6855, !srcloc !6726
  call void @llvm.dbg.value(metadata i32 %1, metadata !6723, metadata !DIExpression()) #18, !dbg !6858
  br label %for.cond5, !dbg !6859

for.cond5:                                        ; preds = %for.cond5, %if.then4
  br label %for.cond5, !dbg !6860, !llvm.loop !6863

if.end6:                                          ; preds = %if.end
  call void @llvm.dbg.value(metadata %struct.EventGroupDef_t* %xEventGroup, metadata !6830, metadata !DIExpression(DW_OP_plus_uconst, 4, DW_OP_stack_value)), !dbg !6838
  %xListEnd = getelementptr inbounds %struct.EventGroupDef_t, %struct.EventGroupDef_t* %xEventGroup, i32 0, i32 1, i32 2, !dbg !6865
  %2 = bitcast %struct.xMINI_LIST_ITEM* %xListEnd to %struct.xLIST_ITEM*, !dbg !6865
  call void @llvm.dbg.value(metadata %struct.xLIST_ITEM* %2, metadata !6829, metadata !DIExpression()), !dbg !6838
  call void @xcall_arg0(i32 0, void ()* @vTaskSuspendAll), !dbg !6866
  %pxNext8 = getelementptr inbounds %struct.EventGroupDef_t, %struct.EventGroupDef_t* %xEventGroup, i32 0, i32 1, i32 2, i32 1, !dbg !6867
  %3 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %pxNext8, align 4, !dbg !6867, !tbaa !1493
  call void @llvm.dbg.value(metadata %struct.xLIST_ITEM* %3, metadata !6827, metadata !DIExpression()), !dbg !6838
  %uxEventBits = getelementptr inbounds %struct.EventGroupDef_t, %struct.EventGroupDef_t* %xEventGroup, i32 0, i32 0, !dbg !6869
  %4 = load i32, i32* %uxEventBits, align 4, !dbg !6870, !tbaa !6695
  %or = or i32 %4, %uxBitsToSet, !dbg !6870
  store i32 %or, i32* %uxEventBits, align 4, !dbg !6870, !tbaa !6695
  call void @llvm.dbg.value(metadata %struct.xLIST_ITEM* %3, metadata !6827, metadata !DIExpression()), !dbg !6838
  call void @llvm.dbg.value(metadata i32 0, metadata !6833, metadata !DIExpression()), !dbg !6838
  %cmp9.not79 = icmp eq %struct.xLIST_ITEM* %3, %2, !dbg !6871
  br i1 %cmp9.not79, label %while.end, label %while.body, !dbg !6872

while.body:                                       ; preds = %if.end45, %if.end6
  %pxListItem.081 = phi %struct.xLIST_ITEM* [ %5, %if.end45 ], [ %3, %if.end6 ]
  %uxBitsToClear.080 = phi i32 [ %uxBitsToClear.2, %if.end45 ], [ 0, %if.end6 ]
  call void @llvm.dbg.value(metadata %struct.xLIST_ITEM* %pxListItem.081, metadata !6827, metadata !DIExpression()), !dbg !6838
  call void @llvm.dbg.value(metadata i32 %uxBitsToClear.080, metadata !6833, metadata !DIExpression()), !dbg !6838
  %pxNext11 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %pxListItem.081, i32 0, i32 1, !dbg !6873
  %5 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %pxNext11, align 4, !dbg !6873, !tbaa !1143
  call void @llvm.dbg.value(metadata %struct.xLIST_ITEM* %5, metadata !6828, metadata !DIExpression()), !dbg !6838
  %xItemValue = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %pxListItem.081, i32 0, i32 0, !dbg !6875
  %6 = load i32, i32* %xItemValue, align 4, !dbg !6875, !tbaa !1494
  call void @llvm.dbg.value(metadata i32 %6, metadata !6834, metadata !DIExpression()), !dbg !6838
  call void @llvm.dbg.value(metadata i32 0, metadata !6837, metadata !DIExpression()), !dbg !6838
  call void @llvm.dbg.value(metadata i32 %6, metadata !6835, metadata !DIExpression(DW_OP_constu, 18446744073692774400, DW_OP_and, DW_OP_stack_value)), !dbg !6838
  %and13 = and i32 %6, 16777215, !dbg !6876
  call void @llvm.dbg.value(metadata i32 %and13, metadata !6834, metadata !DIExpression()), !dbg !6838
  %and14 = and i32 %6, 67108864, !dbg !6877
  %cmp15 = icmp eq i32 %and14, 0, !dbg !6879
  br i1 %cmp15, label %if.then17, label %if.else24, !dbg !6880

if.then17:                                        ; preds = %while.body
  %7 = load i32, i32* %uxEventBits, align 4, !dbg !6881, !tbaa !6695
  %and19 = and i32 %7, %and13, !dbg !6884
  %cmp20.not = icmp eq i32 %and19, 0, !dbg !6885
  br label %if.end32, !dbg !6886

if.else24:                                        ; preds = %while.body
  %8 = load i32, i32* %uxEventBits, align 4, !dbg !6887, !tbaa !6695
  %and26 = and i32 %8, %and13, !dbg !6889
  %cmp27 = icmp ne i32 %and26, %and13, !dbg !6890
  br label %if.end32, !dbg !6891

if.end32:                                         ; preds = %if.else24, %if.then17
  %cmp33.not = phi i1 [ %cmp20.not, %if.then17 ], [ %cmp27, %if.else24 ], !dbg !6892
  call void @llvm.dbg.value(metadata i32 undef, metadata !6837, metadata !DIExpression()), !dbg !6838
  br i1 %cmp33.not, label %if.end45, label %if.then35, !dbg !6893

if.then35:                                        ; preds = %if.end32
  %and36 = and i32 %6, 16777216, !dbg !6894
  %cmp37.not = icmp eq i32 %and36, 0, !dbg !6898
  %or40 = select i1 %cmp37.not, i32 0, i32 %and13, !dbg !6899
  %spec.select78 = or i32 %or40, %uxBitsToClear.080, !dbg !6899
  call void @llvm.dbg.value(metadata i32 %spec.select78, metadata !6833, metadata !DIExpression()), !dbg !6838
  %9 = load i32, i32* %uxEventBits, align 4, !dbg !6900, !tbaa !6695
  %or44 = or i32 %9, 33554432, !dbg !6901
  call void @vTaskRemoveFromUnorderedEventList(%struct.xLIST_ITEM* %pxListItem.081, i32 %or44) #18, !dbg !6902
  br label %if.end45, !dbg !6903

if.end45:                                         ; preds = %if.then35, %if.end32
  %uxBitsToClear.2 = phi i32 [ %spec.select78, %if.then35 ], [ %uxBitsToClear.080, %if.end32 ], !dbg !6838
  call void @llvm.dbg.value(metadata %struct.xLIST_ITEM* %5, metadata !6827, metadata !DIExpression()), !dbg !6838
  call void @llvm.dbg.value(metadata i32 %uxBitsToClear.2, metadata !6833, metadata !DIExpression()), !dbg !6838
  %cmp9.not = icmp eq %struct.xLIST_ITEM* %5, %2, !dbg !6871
  br i1 %cmp9.not, label %while.end, label %while.body, !dbg !6872, !llvm.loop !6904

while.end:                                        ; preds = %if.end45, %if.end6
  %uxBitsToClear.0.lcssa = phi i32 [ 0, %if.end6 ], [ %uxBitsToClear.2, %if.end45 ], !dbg !6838
  %neg = xor i32 %uxBitsToClear.0.lcssa, -1, !dbg !6906
  %10 = load i32, i32* %uxEventBits, align 4, !dbg !6907, !tbaa !6695
  %and47 = and i32 %10, %neg, !dbg !6907
  store i32 %and47, i32* %uxEventBits, align 4, !dbg !6907, !tbaa !6695
  %call = call i32 @icall_arg0(i32 0, i32 ()* @xTaskResumeAll), !dbg !6908
  %11 = load i32, i32* %uxEventBits, align 4, !dbg !6909, !tbaa !6695
  ret i32 %11, !dbg !6910
}

; Function Attrs: nounwind
define dso_local i32 @xEventGroupWaitBits(%struct.EventGroupDef_t* %xEventGroup, i32 %uxBitsToWaitFor, i32 %xClearOnExit, i32 %xWaitForAllBits, i32 %xTicksToWait) local_unnamed_addr #0 section ".csection18" !dbg !6911 {
entry:
  call void @llvm.dbg.value(metadata %struct.EventGroupDef_t* %xEventGroup, metadata !6915, metadata !DIExpression()), !dbg !6928
  call void @llvm.dbg.value(metadata i32 %uxBitsToWaitFor, metadata !6916, metadata !DIExpression()), !dbg !6928
  call void @llvm.dbg.value(metadata i32 %xClearOnExit, metadata !6917, metadata !DIExpression()), !dbg !6928
  call void @llvm.dbg.value(metadata i32 %xWaitForAllBits, metadata !6918, metadata !DIExpression()), !dbg !6928
  call void @llvm.dbg.value(metadata i32 %xTicksToWait, metadata !6919, metadata !DIExpression()), !dbg !6928
  call void @llvm.dbg.value(metadata %struct.EventGroupDef_t* %xEventGroup, metadata !6920, metadata !DIExpression()), !dbg !6928
  call void @llvm.dbg.value(metadata i32 0, metadata !6922, metadata !DIExpression()), !dbg !6928
  call void @llvm.dbg.value(metadata i32 0, metadata !6925, metadata !DIExpression()), !dbg !6928
  %cmp = icmp eq %struct.EventGroupDef_t* %xEventGroup, null, !dbg !6929
  br i1 %cmp, label %if.then, label %if.end, !dbg !6931

if.then:                                          ; preds = %entry
  %0 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #18, !dbg !6932, !srcloc !6726
  call void @llvm.dbg.value(metadata i32 %0, metadata !6723, metadata !DIExpression()) #18, !dbg !6935
  br label %for.cond, !dbg !6936

for.cond:                                         ; preds = %for.cond, %if.then
  br label %for.cond, !dbg !6937, !llvm.loop !6940

if.end:                                           ; preds = %entry
  %cmp1 = icmp ugt i32 %uxBitsToWaitFor, 16777215, !dbg !6942
  br i1 %cmp1, label %if.then4, label %if.end6, !dbg !6944

if.then4:                                         ; preds = %if.end
  %1 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #18, !dbg !6945, !srcloc !6726
  call void @llvm.dbg.value(metadata i32 %1, metadata !6723, metadata !DIExpression()) #18, !dbg !6948
  br label %for.cond5, !dbg !6949

for.cond5:                                        ; preds = %for.cond5, %if.then4
  br label %for.cond5, !dbg !6950, !llvm.loop !6953

if.end6:                                          ; preds = %if.end
  %cmp7.not = icmp eq i32 %uxBitsToWaitFor, 0, !dbg !6955
  br i1 %cmp7.not, label %if.then11, label %if.end13, !dbg !6957

if.then11:                                        ; preds = %if.end6
  %2 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #18, !dbg !6958, !srcloc !6726
  call void @llvm.dbg.value(metadata i32 %2, metadata !6723, metadata !DIExpression()) #18, !dbg !6961
  br label %for.cond12, !dbg !6962

for.cond12:                                       ; preds = %for.cond12, %if.then11
  br label %for.cond12, !dbg !6963, !llvm.loop !6966

if.end13:                                         ; preds = %if.end6
  %call = call i32 @icall_arg0(i32 0, i32 ()* @xTaskGetSchedulerState), !dbg !6968
  %cmp14 = icmp eq i32 %call, 0, !dbg !6968
  %cmp16 = icmp ne i32 %xTicksToWait, 0, !dbg !6968
  %cmp18 = and i1 %cmp16, %cmp14, !dbg !6968
  br i1 %cmp18, label %if.then20, label %if.end22, !dbg !6971

if.then20:                                        ; preds = %if.end13
  %3 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #18, !dbg !6972, !srcloc !6726
  call void @llvm.dbg.value(metadata i32 %3, metadata !6723, metadata !DIExpression()) #18, !dbg !6975
  br label %for.cond21, !dbg !6976

for.cond21:                                       ; preds = %for.cond21, %if.then20
  br label %for.cond21, !dbg !6977, !llvm.loop !6980

if.end22:                                         ; preds = %if.end13
  call void @xcall_arg0(i32 0, void ()* @vTaskSuspendAll), !dbg !6982
  %uxEventBits = getelementptr inbounds %struct.EventGroupDef_t, %struct.EventGroupDef_t* %xEventGroup, i32 0, i32 0, !dbg !6983
  %4 = load i32, i32* %uxEventBits, align 4, !dbg !6983, !tbaa !6695
  call void @llvm.dbg.value(metadata i32 %4, metadata !6926, metadata !DIExpression()), !dbg !6984
  %call23 = call fastcc i32 @prvTestWaitCondition(i32 %4, i32 %uxBitsToWaitFor, i32 %xWaitForAllBits), !dbg !6985
  call void @llvm.dbg.value(metadata i32 %call23, metadata !6923, metadata !DIExpression()), !dbg !6928
  %cmp24.not = icmp eq i32 %call23, 0, !dbg !6986
  br i1 %cmp24.not, label %if.else33, label %if.then26, !dbg !6988

if.then26:                                        ; preds = %if.end22
  call void @llvm.dbg.value(metadata i32 %4, metadata !6921, metadata !DIExpression()), !dbg !6928
  call void @llvm.dbg.value(metadata i32 0, metadata !6919, metadata !DIExpression()), !dbg !6928
  %cmp27.not = icmp eq i32 %xClearOnExit, 0, !dbg !6989
  br i1 %cmp27.not, label %if.end51, label %if.then29, !dbg !6992

if.then29:                                        ; preds = %if.then26
  %neg = xor i32 %uxBitsToWaitFor, -1, !dbg !6993
  %and31 = and i32 %4, %neg, !dbg !6995
  store i32 %and31, i32* %uxEventBits, align 4, !dbg !6995, !tbaa !6695
  br label %if.end51, !dbg !6996

if.else33:                                        ; preds = %if.end22
  %cmp34 = icmp eq i32 %xTicksToWait, 0, !dbg !6997
  br i1 %cmp34, label %if.end51, label %if.else37, !dbg !6999

if.else37:                                        ; preds = %if.else33
  %cmp38.not = icmp eq i32 %xClearOnExit, 0, !dbg !7000
  %spec.select = select i1 %cmp38.not, i32 0, i32 16777216, !dbg !7003
  call void @llvm.dbg.value(metadata i32 %spec.select, metadata !6922, metadata !DIExpression()), !dbg !6928
  %cmp43.not = icmp eq i32 %xWaitForAllBits, 0, !dbg !7004
  %or46 = or i32 %spec.select, 67108864, !dbg !7006
  %uxControlBits.1 = select i1 %cmp43.not, i32 %spec.select, i32 %or46, !dbg !7006
  call void @llvm.dbg.value(metadata i32 %uxControlBits.1, metadata !6922, metadata !DIExpression()), !dbg !6928
  %xTasksWaitingForBits = getelementptr inbounds %struct.EventGroupDef_t, %struct.EventGroupDef_t* %xEventGroup, i32 0, i32 1, !dbg !7007
  %or49 = or i32 %uxControlBits.1, %uxBitsToWaitFor, !dbg !7008
  call void @vTaskPlaceOnUnorderedEventList(%struct.xLIST* nonnull %xTasksWaitingForBits, i32 %or49, i32 %xTicksToWait) #18, !dbg !7009
  call void @llvm.dbg.value(metadata i32 0, metadata !6921, metadata !DIExpression()), !dbg !6928
  br label %if.end51

if.end51:                                         ; preds = %if.else37, %if.else33, %if.then29, %if.then26
  %uxReturn.0 = phi i32 [ %4, %if.then29 ], [ %4, %if.then26 ], [ 0, %if.else37 ], [ %4, %if.else33 ], !dbg !7010
  %cmp53.not = phi i1 [ true, %if.then29 ], [ true, %if.then26 ], [ false, %if.else37 ], [ true, %if.else33 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !6919, metadata !DIExpression()), !dbg !6928
  call void @llvm.dbg.value(metadata i32 undef, metadata !6925, metadata !DIExpression()), !dbg !6928
  call void @llvm.dbg.value(metadata i32 %uxReturn.0, metadata !6921, metadata !DIExpression()), !dbg !6928
  %call52 = call i32 @icall_arg0(i32 0, i32 ()* @xTaskResumeAll), !dbg !7011
  call void @llvm.dbg.value(metadata i32 %call52, metadata !6924, metadata !DIExpression()), !dbg !6928
  br i1 %cmp53.not, label %if.end84, label %if.then55, !dbg !7012

if.then55:                                        ; preds = %if.end51
  %cmp56 = icmp eq i32 %call52, 0, !dbg !7013
  br i1 %cmp56, label %if.then58, label %if.end60, !dbg !7017

if.then58:                                        ; preds = %if.then55
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7018, !tbaa !1105
  call void asm sideeffect "dsb", "~{memory}"() #18, !dbg !7018, !srcloc !7021
  call void asm sideeffect "isb", ""() #18, !dbg !7018, !srcloc !7022
  br label %if.end60, !dbg !7023

if.end60:                                         ; preds = %if.then58, %if.then55
  %call61 = call i32 @icall_arg0(i32 0, i32 ()* @uxTaskResetEventItemValue), !dbg !7024
  call void @llvm.dbg.value(metadata i32 %call61, metadata !6921, metadata !DIExpression()), !dbg !6928
  %and62 = and i32 %call61, 33554432, !dbg !7025
  %cmp63 = icmp eq i32 %and62, 0, !dbg !7027
  br i1 %cmp63, label %if.then65, label %if.end82, !dbg !7028

if.then65:                                        ; preds = %if.end60
  call void @xcall_arg0(i32 0, void ()* @vPortEnterCritical), !dbg !7029
  %5 = load i32, i32* %uxEventBits, align 4, !dbg !7031, !tbaa !6695
  call void @llvm.dbg.value(metadata i32 %5, metadata !6921, metadata !DIExpression()), !dbg !6928
  %call67 = call fastcc i32 @prvTestWaitCondition(i32 %5, i32 %uxBitsToWaitFor, i32 %xWaitForAllBits), !dbg !7033
  %cmp68 = icmp ne i32 %call67, 0, !dbg !7035
  %cmp71 = icmp ne i32 %xClearOnExit, 0
  %or.cond = and i1 %cmp71, %cmp68, !dbg !7036
  br i1 %or.cond, label %if.then73, label %if.end80, !dbg !7036

if.then73:                                        ; preds = %if.then65
  %neg74 = xor i32 %uxBitsToWaitFor, -1, !dbg !7037
  %and76 = and i32 %5, %neg74, !dbg !7041
  store i32 %and76, i32* %uxEventBits, align 4, !dbg !7041, !tbaa !6695
  br label %if.end80, !dbg !7042

if.end80:                                         ; preds = %if.then73, %if.then65
  call void @llvm.dbg.value(metadata i32 1, metadata !6925, metadata !DIExpression()), !dbg !6928
  call void @xcall_arg0(i32 0, void ()* @vPortExitCritical), !dbg !7043
  br label %if.end82, !dbg !7044

if.end82:                                         ; preds = %if.end80, %if.end60
  %uxReturn.1 = phi i32 [ %5, %if.end80 ], [ %call61, %if.end60 ], !dbg !7045
  call void @llvm.dbg.value(metadata i32 undef, metadata !6925, metadata !DIExpression()), !dbg !6928
  call void @llvm.dbg.value(metadata i32 %uxReturn.1, metadata !6921, metadata !DIExpression()), !dbg !6928
  %and83 = and i32 %uxReturn.1, 16777215, !dbg !7046
  call void @llvm.dbg.value(metadata i32 %and83, metadata !6921, metadata !DIExpression()), !dbg !6928
  br label %if.end84, !dbg !7047

if.end84:                                         ; preds = %if.end82, %if.end51
  %uxReturn.2 = phi i32 [ %and83, %if.end82 ], [ %uxReturn.0, %if.end51 ], !dbg !6928
  call void @llvm.dbg.value(metadata i32 undef, metadata !6925, metadata !DIExpression()), !dbg !6928
  call void @llvm.dbg.value(metadata i32 %uxReturn.2, metadata !6921, metadata !DIExpression()), !dbg !6928
  ret i32 %uxReturn.2, !dbg !7048
}

; Function Attrs: norecurse nounwind readnone willreturn
define internal fastcc i32 @prvTestWaitCondition(i32 %uxCurrentEventBits, i32 %uxBitsToWaitFor, i32 %xWaitForAllBits) unnamed_addr #8 section ".csection18" !dbg !7049 {
entry:
  call void @llvm.dbg.value(metadata i32 %uxCurrentEventBits, metadata !7053, metadata !DIExpression()), !dbg !7057
  call void @llvm.dbg.value(metadata i32 %uxBitsToWaitFor, metadata !7054, metadata !DIExpression()), !dbg !7057
  call void @llvm.dbg.value(metadata i32 %xWaitForAllBits, metadata !7055, metadata !DIExpression()), !dbg !7057
  call void @llvm.dbg.value(metadata i32 0, metadata !7056, metadata !DIExpression()), !dbg !7057
  %cmp = icmp eq i32 %xWaitForAllBits, 0, !dbg !7058
  br i1 %cmp, label %if.then, label %if.else3, !dbg !7060

if.then:                                          ; preds = %entry
  %and = and i32 %uxBitsToWaitFor, %uxCurrentEventBits, !dbg !7061
  %cmp1.not = icmp ne i32 %and, 0, !dbg !7064
  %spec.select = zext i1 %cmp1.not to i32, !dbg !7065
  br label %UnifiedReturnBlock

if.else3:                                         ; preds = %entry
  %and4 = and i32 %uxBitsToWaitFor, %uxCurrentEventBits, !dbg !7066
  %cmp5 = icmp eq i32 %and4, %uxBitsToWaitFor, !dbg !7069
  %spec.select14 = zext i1 %cmp5 to i32, !dbg !7070
  call void @llvm.dbg.value(metadata i32 %spec.select14, metadata !7056, metadata !DIExpression()), !dbg !7057
  br label %UnifiedReturnBlock

UnifiedReturnBlock:                               ; preds = %if.else3, %if.then
  %UnifiedRetVal = phi i32 [ %spec.select, %if.then ], [ %spec.select14, %if.else3 ]
  ret i32 %UnifiedRetVal
}

; Function Attrs: nounwind
define dso_local i32 @xEventGroupClearBits(%struct.EventGroupDef_t* %xEventGroup, i32 %uxBitsToClear) local_unnamed_addr #0 section ".csection18" !dbg !7071 {
entry:
  call void @llvm.dbg.value(metadata %struct.EventGroupDef_t* %xEventGroup, metadata !7073, metadata !DIExpression()), !dbg !7077
  call void @llvm.dbg.value(metadata i32 %uxBitsToClear, metadata !7074, metadata !DIExpression()), !dbg !7077
  call void @llvm.dbg.value(metadata %struct.EventGroupDef_t* %xEventGroup, metadata !7075, metadata !DIExpression()), !dbg !7077
  %cmp = icmp eq %struct.EventGroupDef_t* %xEventGroup, null, !dbg !7078
  br i1 %cmp, label %if.then, label %if.end, !dbg !7080

if.then:                                          ; preds = %entry
  %0 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #18, !dbg !7081, !srcloc !6726
  call void @llvm.dbg.value(metadata i32 %0, metadata !6723, metadata !DIExpression()) #18, !dbg !7084
  br label %for.cond, !dbg !7085

for.cond:                                         ; preds = %for.cond, %if.then
  br label %for.cond, !dbg !7086, !llvm.loop !7089

if.end:                                           ; preds = %entry
  %cmp1 = icmp ugt i32 %uxBitsToClear, 16777215, !dbg !7091
  br i1 %cmp1, label %if.then4, label %if.end6, !dbg !7093

if.then4:                                         ; preds = %if.end
  %1 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #18, !dbg !7094, !srcloc !6726
  call void @llvm.dbg.value(metadata i32 %1, metadata !6723, metadata !DIExpression()) #18, !dbg !7097
  br label %for.cond5, !dbg !7098

for.cond5:                                        ; preds = %for.cond5, %if.then4
  br label %for.cond5, !dbg !7099, !llvm.loop !7102

if.end6:                                          ; preds = %if.end
  call void @xcall_arg0(i32 0, void ()* @vPortEnterCritical), !dbg !7104
  %uxEventBits = getelementptr inbounds %struct.EventGroupDef_t, %struct.EventGroupDef_t* %xEventGroup, i32 0, i32 0, !dbg !7105
  %2 = load i32, i32* %uxEventBits, align 4, !dbg !7105, !tbaa !6695
  call void @llvm.dbg.value(metadata i32 %2, metadata !7076, metadata !DIExpression()), !dbg !7077
  %neg = xor i32 %uxBitsToClear, -1, !dbg !7107
  %and8 = and i32 %2, %neg, !dbg !7108
  store i32 %and8, i32* %uxEventBits, align 4, !dbg !7108, !tbaa !6695
  call void @xcall_arg0(i32 0, void ()* @vPortExitCritical), !dbg !7109
  ret i32 %2, !dbg !7110
}

; Function Attrs: nounwind
define dso_local i32 @xEventGroupGetBitsFromISR(%struct.EventGroupDef_t* nocapture readonly %xEventGroup) local_unnamed_addr #0 section ".csection18" !dbg !7111 {
entry:
  call void @llvm.dbg.value(metadata %struct.EventGroupDef_t* %xEventGroup, metadata !7115, metadata !DIExpression()), !dbg !7122
  call void @llvm.dbg.value(metadata %struct.EventGroupDef_t* %xEventGroup, metadata !7117, metadata !DIExpression()), !dbg !7122
  %0 = call { i32, i32 } asm sideeffect "\09mrs $0, basepri\09\09\09\09\09\09\09\09\09\09\09\0A\09mov $1, $2\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $1\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,=r,i,~{memory}"(i32 80) #18, !dbg !7123, !srcloc !7129
  %asmresult.i = extractvalue { i32, i32 } %0, 0, !dbg !7123
  call void @llvm.dbg.value(metadata i32 %asmresult.i, metadata !7126, metadata !DIExpression()) #18, !dbg !7130
  call void @llvm.dbg.value(metadata i32 undef, metadata !7127, metadata !DIExpression()) #18, !dbg !7130
  call void @llvm.dbg.value(metadata i32 %asmresult.i, metadata !7116, metadata !DIExpression()), !dbg !7122
  %uxEventBits = getelementptr inbounds %struct.EventGroupDef_t, %struct.EventGroupDef_t* %xEventGroup, i32 0, i32 0, !dbg !7131
  %1 = load i32, i32* %uxEventBits, align 4, !dbg !7131, !tbaa !6695
  call void @llvm.dbg.value(metadata i32 %1, metadata !7121, metadata !DIExpression()), !dbg !7122
  call void @llvm.dbg.value(metadata i32 %asmresult.i, metadata !7133, metadata !DIExpression()) #18, !dbg !7136
  call void asm sideeffect "\09msr basepri, $0\09", "r,~{memory}"(i32 %asmresult.i) #18, !dbg !7138, !srcloc !7139
  ret i32 %1, !dbg !7140
}

; Function Attrs: nounwind
define dso_local void @vEventGroupDelete(%struct.EventGroupDef_t* %xEventGroup) local_unnamed_addr #0 section ".csection18" !dbg !7141 {
entry:
  call void @llvm.dbg.value(metadata %struct.EventGroupDef_t* %xEventGroup, metadata !7145, metadata !DIExpression()), !dbg !7148
  %cmp = icmp eq %struct.EventGroupDef_t* %xEventGroup, null, !dbg !7149
  br i1 %cmp, label %if.then, label %if.end, !dbg !7151

if.then:                                          ; preds = %entry
  %0 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #18, !dbg !7152, !srcloc !6726
  call void @llvm.dbg.value(metadata i32 %0, metadata !6723, metadata !DIExpression()) #18, !dbg !7155
  br label %for.cond, !dbg !7156

for.cond:                                         ; preds = %for.cond, %if.then
  br label %for.cond, !dbg !7157, !llvm.loop !7160

if.end:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata %struct.EventGroupDef_t* %xEventGroup, metadata !7146, metadata !DIExpression()), !dbg !7148
  call void @llvm.dbg.value(metadata %struct.EventGroupDef_t* %xEventGroup, metadata !7147, metadata !DIExpression(DW_OP_plus_uconst, 4, DW_OP_stack_value)), !dbg !7148
  call void @xcall_arg0(i32 0, void ()* @vTaskSuspendAll), !dbg !7162
  %uxNumberOfItems = getelementptr inbounds %struct.EventGroupDef_t, %struct.EventGroupDef_t* %xEventGroup, i32 0, i32 1, i32 0, !dbg !7163
  %1 = load volatile i32, i32* %uxNumberOfItems, align 4, !dbg !7163, !tbaa !1122
  %cmp1.not18 = icmp eq i32 %1, 0, !dbg !7165
  br i1 %cmp1.not18, label %while.end, label %while.body.lr.ph, !dbg !7166

while.body.lr.ph:                                 ; preds = %if.end
  %xListEnd = getelementptr inbounds %struct.EventGroupDef_t, %struct.EventGroupDef_t* %xEventGroup, i32 0, i32 1, i32 2
  %pxNext = getelementptr inbounds %struct.EventGroupDef_t, %struct.EventGroupDef_t* %xEventGroup, i32 0, i32 1, i32 2, i32 1
  %2 = bitcast %struct.xMINI_LIST_ITEM* %xListEnd to %struct.xLIST_ITEM*
  br label %while.body, !dbg !7166

while.body:                                       ; preds = %if.end8, %while.body.lr.ph
  %3 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %pxNext, align 4, !dbg !7167, !tbaa !1493
  %cmp3.not = icmp eq %struct.xLIST_ITEM* %3, %2, !dbg !7167
  br i1 %cmp3.not, label %if.then6, label %if.end8, !dbg !7170

if.then6:                                         ; preds = %while.body
  %4 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #18, !dbg !7171, !srcloc !6726
  call void @llvm.dbg.value(metadata i32 %4, metadata !6723, metadata !DIExpression()) #18, !dbg !7174
  br label %for.cond7, !dbg !7175

for.cond7:                                        ; preds = %for.cond7, %if.then6
  br label %for.cond7, !dbg !7176, !llvm.loop !7179

if.end8:                                          ; preds = %while.body
  call void @vTaskRemoveFromUnorderedEventList(%struct.xLIST_ITEM* %3, i32 33554432) #18, !dbg !7181
  %5 = load volatile i32, i32* %uxNumberOfItems, align 4, !dbg !7163, !tbaa !1122
  %cmp1.not = icmp eq i32 %5, 0, !dbg !7165
  br i1 %cmp1.not, label %while.end, label %while.body, !dbg !7166, !llvm.loop !7182

while.end:                                        ; preds = %if.end8, %if.end
  %6 = bitcast %struct.EventGroupDef_t* %xEventGroup to i8*, !dbg !7184
  call void @xcall_arg1p(i32 14, i8* bitcast (void (i8*)* @vPortFree to i8*), i8* %6, i32 ptrtoint (i8* getelementptr (i8, i8* null, i32 1) to i32)), !dbg !7186
  %call = call i32 @xTaskResumeAll() #18, !dbg !7187
  ret void, !dbg !7188
}

; Function Attrs: nounwind
define dso_local void @vEventGroupSetBitsCallback(i8* %pvEventGroup, i32 %ulBitsToSet) local_unnamed_addr #0 section ".csection18" !dbg !7189 {
entry:
  call void @llvm.dbg.value(metadata i8* %pvEventGroup, metadata !7193, metadata !DIExpression()), !dbg !7195
  call void @llvm.dbg.value(metadata i32 %ulBitsToSet, metadata !7194, metadata !DIExpression()), !dbg !7195
  %0 = bitcast i8* %pvEventGroup to %struct.EventGroupDef_t*, !dbg !7196
  %call = call i32 @xEventGroupSetBits(%struct.EventGroupDef_t* %0, i32 %ulBitsToSet), !dbg !7197
  ret void, !dbg !7198
}

; Function Attrs: nounwind
define dso_local void @vEventGroupClearBitsCallback(i8* %pvEventGroup, i32 %ulBitsToClear) local_unnamed_addr #0 section ".csection18" !dbg !7199 {
entry:
  call void @llvm.dbg.value(metadata i8* %pvEventGroup, metadata !7201, metadata !DIExpression()), !dbg !7203
  call void @llvm.dbg.value(metadata i32 %ulBitsToClear, metadata !7202, metadata !DIExpression()), !dbg !7203
  %0 = bitcast i8* %pvEventGroup to %struct.EventGroupDef_t*, !dbg !7204
  %call = call i32 @xEventGroupClearBits(%struct.EventGroupDef_t* %0, i32 %ulBitsToClear), !dbg !7205
  ret void, !dbg !7206
}

; Function Attrs: norecurse nounwind readonly willreturn
define dso_local i32 @uxEventGroupGetNumber(i8* readonly %xEventGroup) local_unnamed_addr #6 section ".csection18" !dbg !7207 {
entry:
  call void @llvm.dbg.value(metadata i8* %xEventGroup, metadata !7211, metadata !DIExpression()), !dbg !7214
  call void @llvm.dbg.value(metadata i8* %xEventGroup, metadata !7213, metadata !DIExpression()), !dbg !7214
  %cmp = icmp eq i8* %xEventGroup, null, !dbg !7215
  br i1 %cmp, label %if.end, label %if.else, !dbg !7217

if.else:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata i8* %xEventGroup, metadata !7213, metadata !DIExpression()), !dbg !7214
  %uxEventGroupNumber = getelementptr inbounds i8, i8* %xEventGroup, i32 24, !dbg !7218
  %0 = bitcast i8* %uxEventGroupNumber to i32*, !dbg !7218
  %1 = load i32, i32* %0, align 4, !dbg !7218, !tbaa !7220
  call void @llvm.dbg.value(metadata i32 %1, metadata !7212, metadata !DIExpression()), !dbg !7214
  br label %if.end

if.end:                                           ; preds = %if.else, %entry
  %xReturn.0 = phi i32 [ %1, %if.else ], [ 0, %entry ], !dbg !7221
  call void @llvm.dbg.value(metadata i32 %xReturn.0, metadata !7212, metadata !DIExpression()), !dbg !7214
  ret i32 %xReturn.0, !dbg !7222
}

; Function Attrs: nofree norecurse nounwind willreturn writeonly
define dso_local void @vEventGroupSetNumber(i8* nocapture %xEventGroup, i32 %uxEventGroupNumber) local_unnamed_addr #7 section ".csection18" !dbg !7223 {
entry:
  call void @llvm.dbg.value(metadata i8* %xEventGroup, metadata !7227, metadata !DIExpression()), !dbg !7229
  call void @llvm.dbg.value(metadata i32 %uxEventGroupNumber, metadata !7228, metadata !DIExpression()), !dbg !7229
  %uxEventGroupNumber1 = getelementptr inbounds i8, i8* %xEventGroup, i32 24, !dbg !7230
  %0 = bitcast i8* %uxEventGroupNumber1 to i32*, !dbg !7230
  store i32 %uxEventGroupNumber, i32* %0, align 4, !dbg !7231, !tbaa !7220
  ret void, !dbg !7232
}

; Function Attrs: nofree norecurse nounwind willreturn writeonly
define dso_local nonnull i32* @pxPortInitialiseStack(i32* %pxTopOfStack, void (i8*)* %pxCode, i8* %pvParameters) local_unnamed_addr #7 section ".csection0" !dbg !7233 {
entry:
  call void @llvm.dbg.value(metadata i32* %pxTopOfStack, metadata !7237, metadata !DIExpression()), !dbg !7240
  call void @llvm.dbg.value(metadata void (i8*)* %pxCode, metadata !7238, metadata !DIExpression()), !dbg !7240
  call void @llvm.dbg.value(metadata i8* %pvParameters, metadata !7239, metadata !DIExpression()), !dbg !7240
  %incdec.ptr = getelementptr inbounds i32, i32* %pxTopOfStack, i32 -1, !dbg !7241
  call void @llvm.dbg.value(metadata i32* %incdec.ptr, metadata !7237, metadata !DIExpression()), !dbg !7240
  store i32 16777216, i32* %incdec.ptr, align 4, !dbg !7242, !tbaa !1105
  %incdec.ptr1 = getelementptr inbounds i32, i32* %pxTopOfStack, i32 -2, !dbg !7243
  call void @llvm.dbg.value(metadata i32* %incdec.ptr1, metadata !7237, metadata !DIExpression()), !dbg !7240
  %0 = ptrtoint void (i8*)* %pxCode to i32, !dbg !7244
  %and = and i32 %0, -2, !dbg !7245
  store i32 %and, i32* %incdec.ptr1, align 4, !dbg !7246, !tbaa !1105
  %incdec.ptr2 = getelementptr inbounds i32, i32* %pxTopOfStack, i32 -3, !dbg !7247
  call void @llvm.dbg.value(metadata i32* %incdec.ptr2, metadata !7237, metadata !DIExpression()), !dbg !7240
  store i32 ptrtoint (void ()* @prvTaskExitError to i32), i32* %incdec.ptr2, align 4, !dbg !7248, !tbaa !1105
  %add.ptr = getelementptr inbounds i32, i32* %pxTopOfStack, i32 -8, !dbg !7249
  call void @llvm.dbg.value(metadata i32* %add.ptr, metadata !7237, metadata !DIExpression()), !dbg !7240
  %1 = ptrtoint i8* %pvParameters to i32, !dbg !7250
  store i32 %1, i32* %add.ptr, align 4, !dbg !7251, !tbaa !1105
  %incdec.ptr3 = getelementptr inbounds i32, i32* %pxTopOfStack, i32 -9, !dbg !7252
  call void @llvm.dbg.value(metadata i32* %incdec.ptr3, metadata !7237, metadata !DIExpression()), !dbg !7240
  store i32 -3, i32* %incdec.ptr3, align 4, !dbg !7253, !tbaa !1105
  %add.ptr4 = getelementptr inbounds i32, i32* %pxTopOfStack, i32 -17, !dbg !7254
  call void @llvm.dbg.value(metadata i32* %add.ptr4, metadata !7237, metadata !DIExpression()), !dbg !7240
  ret i32* %add.ptr4, !dbg !7255
}

; Function Attrs: nounwind
define internal void @prvTaskExitError() #0 section ".csection0" !dbg !7256 {
entry:
  %ulDummy = alloca i32, align 4
  %ulDummy.0.ulDummy.0.ulDummy.0..sroa_cast = bitcast i32* %ulDummy to i8*, !dbg !7259
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %ulDummy.0.ulDummy.0.ulDummy.0..sroa_cast), !dbg !7259
  call void @llvm.dbg.declare(metadata i32* %ulDummy, metadata !7258, metadata !DIExpression()), !dbg !7260
  store volatile i32 0, i32* %ulDummy, align 4, !dbg !7260, !tbaa !1105
  %0 = load i32, i32* @uxCriticalNesting, align 4, !dbg !7261, !tbaa !1085
  %cmp.not = icmp eq i32 %0, -1, !dbg !7261
  br i1 %cmp.not, label %if.end, label %if.then, !dbg !7263

if.then:                                          ; preds = %entry
  %1 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #18, !dbg !7264, !srcloc !7270
  call void @llvm.dbg.value(metadata i32 %1, metadata !7267, metadata !DIExpression()) #18, !dbg !7271
  br label %for.cond, !dbg !7272

for.cond:                                         ; preds = %for.cond, %if.then
  br label %for.cond, !dbg !7273, !llvm.loop !7276

if.end:                                           ; preds = %entry
  %2 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #18, !dbg !7278, !srcloc !7270
  call void @llvm.dbg.value(metadata i32 %2, metadata !7267, metadata !DIExpression()) #18, !dbg !7280
  br label %while.cond, !dbg !7281

while.cond:                                       ; preds = %while.cond, %if.end
  %ulDummy.0.ulDummy.0.ulDummy.0. = load volatile i32, i32* %ulDummy, align 4, !dbg !7282, !tbaa !1105
  %cmp3 = icmp eq i32 %ulDummy.0.ulDummy.0.ulDummy.0., 0, !dbg !7283
  br i1 %cmp3, label %while.cond, label %while.end, !dbg !7281, !llvm.loop !7284

while.end:                                        ; preds = %while.cond
  %ulDummy.0.ulDummy.0.ulDummy.0..sroa_cast7 = bitcast i32* %ulDummy to i8*, !dbg !7286
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %ulDummy.0.ulDummy.0.ulDummy.0..sroa_cast7), !dbg !7286
  ret void, !dbg !7286
}

; Function Attrs: naked noinline nounwind
define dso_local void @SVC_Handler() #14 section ".csection0" !dbg !7287 {
entry:
  call void asm sideeffect "\09ldr\09r3, pxCurrentTCBConst2\09\09\0A\09ldr r1, [r3]\09\09\09\09\09\0A\09ldr r0, [r1]\09\09\09\09\09\0A\09ldmia r0!, {r4-r11, r14}\09\09\0A\09msr psp, r0\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\0A\09mov r0, #0 \09\09\09\09\09\09\0A\09msr\09basepri, r0\09\09\09\09\09\0A\09bx r14\09\09\09\09\09\09\09\0A\09\09\09\09\09\09\09\09\09\0A\09.align 4\09\09\09\09\09\09\0ApxCurrentTCBConst2: .word pxCurrentTCB\09\09\09\09\0A", ""() #18, !dbg !7288, !srcloc !7289
  unreachable, !dbg !7290
}

; Function Attrs: nounwind
define dso_local i32 @xPortStartScheduler() local_unnamed_addr #0 section ".csection0" !dbg !7291 {
entry:
  %ulOriginalPriority = alloca i32, align 4
  %ucMaxPriorityValue = alloca i8, align 1
  %0 = load volatile i32, i32* inttoptr (i32 -536810240 to i32*), align 256, !dbg !7298, !tbaa !1105
  %cmp.not = icmp eq i32 %0, 1091551857, !dbg !7298
  br i1 %cmp.not, label %if.then, label %if.end, !dbg !7300

if.then:                                          ; preds = %entry
  %1 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #18, !dbg !7301, !srcloc !7270
  call void @llvm.dbg.value(metadata i32 %1, metadata !7267, metadata !DIExpression()) #18, !dbg !7304
  br label %for.cond, !dbg !7305

for.cond:                                         ; preds = %for.cond, %if.then
  br label %for.cond, !dbg !7306, !llvm.loop !7309

if.end:                                           ; preds = %entry
  %2 = load volatile i32, i32* inttoptr (i32 -536810240 to i32*), align 256, !dbg !7311, !tbaa !1105
  %cmp3.not = icmp eq i32 %2, 1091551856, !dbg !7311
  br i1 %cmp3.not, label %if.then7, label %if.end9, !dbg !7313

if.then7:                                         ; preds = %if.end
  %3 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #18, !dbg !7314, !srcloc !7270
  call void @llvm.dbg.value(metadata i32 %3, metadata !7267, metadata !DIExpression()) #18, !dbg !7317
  br label %for.cond8, !dbg !7318

for.cond8:                                        ; preds = %for.cond8, %if.then7
  br label %for.cond8, !dbg !7319, !llvm.loop !7322

if.end9:                                          ; preds = %if.end
  %ulOriginalPriority.0.ulOriginalPriority.0.ulOriginalPriority.0..sroa_cast = bitcast i32* %ulOriginalPriority to i8*, !dbg !7324
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %ulOriginalPriority.0.ulOriginalPriority.0.ulOriginalPriority.0..sroa_cast), !dbg !7324
  call void @llvm.dbg.declare(metadata i32* %ulOriginalPriority, metadata !7293, metadata !DIExpression()), !dbg !7325
  call void @llvm.dbg.value(metadata i8* inttoptr (i32 -536812544 to i8*), metadata !7295, metadata !DIExpression()), !dbg !7326
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %ucMaxPriorityValue), !dbg !7327
  call void @llvm.dbg.declare(metadata i8* %ucMaxPriorityValue, metadata !7297, metadata !DIExpression()), !dbg !7328
  %4 = load volatile i8, i8* inttoptr (i32 -536812544 to i8*), align 1024, !dbg !7329, !tbaa !1246
  %conv10 = zext i8 %4 to i32, !dbg !7329
  store volatile i32 %conv10, i32* %ulOriginalPriority, align 4, !dbg !7330, !tbaa !1105
  store volatile i8 -1, i8* inttoptr (i32 -536812544 to i8*), align 1024, !dbg !7331, !tbaa !1246
  %5 = load volatile i8, i8* inttoptr (i32 -536812544 to i8*), align 1024, !dbg !7332, !tbaa !1246
  store volatile i8 %5, i8* %ucMaxPriorityValue, align 1, !dbg !7333, !tbaa !1246
  %ucMaxPriorityValue.0.ucMaxPriorityValue.0.ucMaxPriorityValue.0. = load volatile i8, i8* %ucMaxPriorityValue, align 1, !dbg !7334, !tbaa !1246
  %6 = and i8 %ucMaxPriorityValue.0.ucMaxPriorityValue.0.ucMaxPriorityValue.0., 80, !dbg !7335
  store i8 %6, i8* @ucMaxSysCallPriority, align 1, !dbg !7336, !tbaa !1246
  store i32 7, i32* @ulMaxPRIGROUPValue, align 4, !dbg !7337, !tbaa !1105
  %ucMaxPriorityValue.0.ucMaxPriorityValue.0.ucMaxPriorityValue.0.3136 = load volatile i8, i8* %ucMaxPriorityValue, align 1, !dbg !7338, !tbaa !1246
  %cmp1537 = icmp slt i8 %ucMaxPriorityValue.0.ucMaxPriorityValue.0.ucMaxPriorityValue.0.3136, 0, !dbg !7339
  br i1 %cmp1537, label %while.body.lr.ph, label %while.end, !dbg !7340

while.body.lr.ph:                                 ; preds = %if.end9
  %ulMaxPRIGROUPValue.promoted = load i32, i32* @ulMaxPRIGROUPValue, align 4, !tbaa !1105
  br label %while.body, !dbg !7340

while.body:                                       ; preds = %while.body, %while.body.lr.ph
  %dec38 = phi i32 [ %ulMaxPRIGROUPValue.promoted, %while.body.lr.ph ], [ %dec, %while.body ], !dbg !7341
  %dec = add i32 %dec38, -1, !dbg !7341
  %ucMaxPriorityValue.0.ucMaxPriorityValue.0.ucMaxPriorityValue.0.32 = load volatile i8, i8* %ucMaxPriorityValue, align 1, !dbg !7343, !tbaa !1246
  %shl = shl i8 %ucMaxPriorityValue.0.ucMaxPriorityValue.0.ucMaxPriorityValue.0.32, 1, !dbg !7343
  store volatile i8 %shl, i8* %ucMaxPriorityValue, align 1, !dbg !7343, !tbaa !1246
  %ucMaxPriorityValue.0.ucMaxPriorityValue.0.ucMaxPriorityValue.0.31 = load volatile i8, i8* %ucMaxPriorityValue, align 1, !dbg !7338, !tbaa !1246
  %cmp15 = icmp slt i8 %ucMaxPriorityValue.0.ucMaxPriorityValue.0.ucMaxPriorityValue.0.31, 0, !dbg !7339
  br i1 %cmp15, label %while.body, label %while.cond.while.end_crit_edge, !dbg !7340, !llvm.loop !7344

while.cond.while.end_crit_edge:                   ; preds = %while.body
  store i32 %dec, i32* @ulMaxPRIGROUPValue, align 4, !dbg !7341, !tbaa !1105
  br label %while.end, !dbg !7340

while.end:                                        ; preds = %while.cond.while.end_crit_edge, %if.end9
  %7 = load i32, i32* @ulMaxPRIGROUPValue, align 4, !dbg !7346, !tbaa !1105
  %cmp19.not = icmp eq i32 %7, 3, !dbg !7346
  br i1 %cmp19.not, label %if.end25, label %if.then23, !dbg !7349

if.then23:                                        ; preds = %while.end
  %8 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #18, !dbg !7350, !srcloc !7270
  call void @llvm.dbg.value(metadata i32 %8, metadata !7267, metadata !DIExpression()) #18, !dbg !7353
  br label %for.cond24, !dbg !7354

for.cond24:                                       ; preds = %for.cond24, %if.then23
  br label %for.cond24, !dbg !7355, !llvm.loop !7358

if.end25:                                         ; preds = %while.end
  %shl26 = shl i32 %7, 8, !dbg !7360
  %and27 = and i32 %shl26, 1792, !dbg !7361
  store i32 %and27, i32* @ulMaxPRIGROUPValue, align 4, !dbg !7361, !tbaa !1105
  %ulOriginalPriority.0.ulOriginalPriority.0.ulOriginalPriority.0. = load volatile i32, i32* %ulOriginalPriority, align 4, !dbg !7362, !tbaa !1105
  %conv28 = trunc i32 %ulOriginalPriority.0.ulOriginalPriority.0.ulOriginalPriority.0. to i8, !dbg !7362
  store volatile i8 %conv28, i8* inttoptr (i32 -536812544 to i8*), align 1024, !dbg !7363, !tbaa !1246
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %ucMaxPriorityValue), !dbg !7364
  %ulOriginalPriority.0.ulOriginalPriority.0.ulOriginalPriority.0..sroa_cast39 = bitcast i32* %ulOriginalPriority to i8*, !dbg !7364
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %ulOriginalPriority.0.ulOriginalPriority.0.ulOriginalPriority.0..sroa_cast39), !dbg !7364
  %9 = load volatile i32, i32* inttoptr (i32 -536810208 to i32*), align 32, !dbg !7365, !tbaa !1105
  %or = or i32 %9, 15728640, !dbg !7365
  store volatile i32 %or, i32* inttoptr (i32 -536810208 to i32*), align 32, !dbg !7365, !tbaa !1105
  %10 = load volatile i32, i32* inttoptr (i32 -536810208 to i32*), align 32, !dbg !7366, !tbaa !1105
  %or29 = or i32 %10, -268435456, !dbg !7366
  store volatile i32 %or29, i32* inttoptr (i32 -536810208 to i32*), align 32, !dbg !7366, !tbaa !1105
  call void @vPortSetupTimerInterrupt(), !dbg !7367
  store i32 0, i32* @uxCriticalNesting, align 4, !dbg !7368, !tbaa !1085
  call void @vPortEnableVFP(), !dbg !7369
  %11 = load volatile i32, i32* inttoptr (i32 -536809676 to i32*), align 4, !dbg !7370, !tbaa !1105
  %or30 = or i32 %11, -1073741824, !dbg !7370
  store volatile i32 %or30, i32* inttoptr (i32 -536809676 to i32*), align 4, !dbg !7370, !tbaa !1105
  call void @prvPortStartFirstTask(), !dbg !7371
  call void @vTaskSwitchContext() #18, !dbg !7372
  call void @prvTaskExitError(), !dbg !7373
  ret i32 0, !dbg !7374
}

; Function Attrs: nounwind willreturn
define weak dso_local void @vPortSetupTimerInterrupt() local_unnamed_addr #15 section ".csection0" !dbg !7375 {
entry:
  store volatile i32 0, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !7376, !tbaa !1105
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !7377, !tbaa !1105
  %0 = load i32, i32* @SystemCoreClock, align 4, !dbg !7378, !tbaa !1105
  %div = udiv i32 %0, 1000, !dbg !7379
  %sub = add nsw i32 %div, -1, !dbg !7380
  store volatile i32 %sub, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !7381, !tbaa !1105
  store volatile i32 7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !7382, !tbaa !1105
  ret void, !dbg !7383
}

; Function Attrs: naked noinline nounwind
define internal void @vPortEnableVFP() #14 section ".csection0" !dbg !7384 {
entry:
  call void asm sideeffect "\09ldr.w r0, =0xE000ED88\09\09\0A\09ldr r1, [r0]\09\09\09\09\0A\09\09\09\09\09\09\09\09\0A\09orr r1, r1, #( 0xf << 20 )\09\0A\09str r1, [r0]\09\09\09\09\0A\09bx r14\09\09\09\09\09\09\0A\09.ltorg\09\09\09\09\09\09\0A", ""() #18, !dbg !7385, !srcloc !7386
  unreachable, !dbg !7387
}

; Function Attrs: naked noinline nounwind
define internal void @prvPortStartFirstTask() #14 section ".csection0" !dbg !7388 {
entry:
  call void asm sideeffect " ldr r0, =0xE000ED08 \09\0A ldr r0, [r0] \09\09\09\0A ldr r0, [r0] \09\09\09\0A msr msp, r0\09\09\09\0A mov r0, #0\09\09\09\0A msr control, r0\09\09\0A cpsie i\09\09\09\09\0A cpsie f\09\09\09\09\0A dsb\09\09\09\09\09\0A isb\09\09\09\09\09\0A svc 0\09\09\09\09\09\0A nop\09\09\09\09\09\0A .ltorg\09\09\09\09\0A", ""() #18, !dbg !7389, !srcloc !7390
  unreachable, !dbg !7391
}

; Function Attrs: nounwind
define dso_local void @vPortEndScheduler() local_unnamed_addr #0 section ".csection0" !dbg !7392 {
entry:
  %0 = load i32, i32* @uxCriticalNesting, align 4, !dbg !7393, !tbaa !1085
  %cmp.not = icmp eq i32 %0, 1000, !dbg !7393
  br i1 %cmp.not, label %if.end, label %if.then, !dbg !7395

if.then:                                          ; preds = %entry
  %1 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #18, !dbg !7396, !srcloc !7270
  call void @llvm.dbg.value(metadata i32 %1, metadata !7267, metadata !DIExpression()) #18, !dbg !7399
  br label %for.cond, !dbg !7400

for.cond:                                         ; preds = %for.cond, %if.then
  br label %for.cond, !dbg !7401, !llvm.loop !7404

if.end:                                           ; preds = %entry
  ret void, !dbg !7406
}

; Function Attrs: nounwind
define dso_local void @vPortEnterCritical() local_unnamed_addr #0 section ".csection0" !dbg !7407 {
entry:
  %0 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #18, !dbg !7408, !srcloc !7270
  call void @llvm.dbg.value(metadata i32 %0, metadata !7267, metadata !DIExpression()) #18, !dbg !7410
  %1 = load i32, i32* @uxCriticalNesting, align 4, !dbg !7411, !tbaa !1085
  %inc = add i32 %1, 1, !dbg !7411
  store i32 %inc, i32* @uxCriticalNesting, align 4, !dbg !7411, !tbaa !1085
  %cmp = icmp eq i32 %1, 0, !dbg !7412
  br i1 %cmp, label %if.then, label %if.end5, !dbg !7414

if.then:                                          ; preds = %entry
  %2 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7415, !tbaa !1105
  %and = and i32 %2, 255, !dbg !7415
  %cmp1.not = icmp eq i32 %and, 0, !dbg !7415
  br i1 %cmp1.not, label %if.end5, label %if.then4, !dbg !7418

if.then4:                                         ; preds = %if.then
  %3 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #18, !dbg !7419, !srcloc !7270
  call void @llvm.dbg.value(metadata i32 %3, metadata !7267, metadata !DIExpression()) #18, !dbg !7422
  br label %for.cond, !dbg !7423

for.cond:                                         ; preds = %for.cond, %if.then4
  br label %for.cond, !dbg !7424, !llvm.loop !7427

if.end5:                                          ; preds = %if.then, %entry
  ret void, !dbg !7429
}

; Function Attrs: nounwind
define dso_local void @vPortExitCritical() local_unnamed_addr #0 section ".csection0" !dbg !7430 {
entry:
  %0 = load i32, i32* @uxCriticalNesting, align 4, !dbg !7431, !tbaa !1085
  %cmp = icmp eq i32 %0, 0, !dbg !7431
  br i1 %cmp, label %if.then, label %if.end, !dbg !7433

if.then:                                          ; preds = %entry
  %1 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #18, !dbg !7434, !srcloc !7270
  call void @llvm.dbg.value(metadata i32 %1, metadata !7267, metadata !DIExpression()) #18, !dbg !7437
  br label %for.cond, !dbg !7438

for.cond:                                         ; preds = %for.cond, %if.then
  br label %for.cond, !dbg !7439, !llvm.loop !7442

if.end:                                           ; preds = %entry
  %dec = add i32 %0, -1, !dbg !7444
  store i32 %dec, i32* @uxCriticalNesting, align 4, !dbg !7444, !tbaa !1085
  %cmp1 = icmp eq i32 %dec, 0, !dbg !7445
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !7447

if.then2:                                         ; preds = %if.end
  call void @llvm.dbg.value(metadata i32 0, metadata !7448, metadata !DIExpression()) #18, !dbg !7451
  call void asm sideeffect "\09msr basepri, $0\09", "r,~{memory}"(i32 0) #18, !dbg !7454, !srcloc !7455
  br label %if.end3, !dbg !7456

if.end3:                                          ; preds = %if.then2, %if.end
  ret void, !dbg !7457
}

; Function Attrs: naked noinline nounwind
define dso_local void @PendSV_Handler() #14 section ".csection0" !dbg !7458 {
entry:
  call void asm sideeffect "\09mrs r0, psp\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\0A\09\09\09\09\09\09\09\09\09\09\0A\09ldr\09r3, pxCurrentTCBConst\09\09\09\0A\09ldr\09r2, [r3]\09\09\09\09\09\09\0A\09\09\09\09\09\09\09\09\09\09\0A\09tst r14, #0x10\09\09\09\09\09\09\0A\09it eq\09\09\09\09\09\09\09\09\0A\09vstmdbeq r0!, {s16-s31}\09\09\09\09\0A\09\09\09\09\09\09\09\09\09\09\0A\09stmdb r0!, {r4-r11, r14}\09\09\09\0A\09str r0, [r2]\09\09\09\09\09\09\0A\09\09\09\09\09\09\09\09\09\09\0A\09stmdb sp!, {r0, r3}\09\09\09\09\09\0A\09mov r0, $0 \09\09\09\09\09\09\09\0A\09msr basepri, r0\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\0A\09bl vTaskSwitchContext\09\09\09\09\0A\09mov r0, #0\09\09\09\09\09\09\09\0A\09msr basepri, r0\09\09\09\09\09\09\0A\09ldmia sp!, {r0, r3}\09\09\09\09\09\0A\09\09\09\09\09\09\09\09\09\09\0A\09ldr r1, [r3]\09\09\09\09\09\09\0A\09ldr r0, [r1]\09\09\09\09\09\09\0A\09\09\09\09\09\09\09\09\09\09\0A\09ldmia r0!, {r4-r11, r14}\09\09\09\0A\09\09\09\09\09\09\09\09\09\09\0A\09tst r14, #0x10\09\09\09\09\09\09\0A\09it eq\09\09\09\09\09\09\09\09\0A\09vldmiaeq r0!, {s16-s31}\09\09\09\09\0A\09\09\09\09\09\09\09\09\09\09\0A\09msr psp, r0\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\0A\09\09\09\09\09\09\09\09\09\09\0A\09\09\09\09\09\09\09\09\09\09\0A\09bx r14\09\09\09\09\09\09\09\09\0A\09\09\09\09\09\09\09\09\09\09\0A\09.align 4\09\09\09\09\09\09\09\0ApxCurrentTCBConst: .word pxCurrentTCB\09\0A", "i"(i32 80) #18, !dbg !7459, !srcloc !7460
  unreachable, !dbg !7461
}

; Function Attrs: nounwind
define dso_local void @SysTick_Handler() local_unnamed_addr #0 section ".csection0" !dbg !7462 {
entry:
  %0 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #18, !dbg !7463, !srcloc !7270
  call void @llvm.dbg.value(metadata i32 %0, metadata !7267, metadata !DIExpression()) #18, !dbg !7465
  %call = call i32 @xTaskIncrementTick() #18, !dbg !7466
  %cmp.not = icmp eq i32 %call, 0, !dbg !7469
  br i1 %cmp.not, label %if.end, label %if.then, !dbg !7470

if.then:                                          ; preds = %entry
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7471, !tbaa !1105
  br label %if.end, !dbg !7473

if.end:                                           ; preds = %if.then, %entry
  call void @llvm.dbg.value(metadata i32 0, metadata !7448, metadata !DIExpression()) #18, !dbg !7474
  call void asm sideeffect "\09msr basepri, $0\09", "r,~{memory}"(i32 0) #18, !dbg !7476, !srcloc !7455
  ret void, !dbg !7477
}

; Function Attrs: nounwind
define dso_local void @vPortValidateInterruptPriority() local_unnamed_addr #0 section ".csection0" !dbg !7478 {
entry:
  %0 = call i32 asm sideeffect "mrs $0, ipsr", "=r,~{memory}"() #18, !dbg !7482, !srcloc !7483
  call void @llvm.dbg.value(metadata i32 %0, metadata !7480, metadata !DIExpression()), !dbg !7484
  %cmp = icmp ugt i32 %0, 15, !dbg !7485
  br i1 %cmp, label %if.then, label %if.end7, !dbg !7487

if.then:                                          ; preds = %entry
  %arrayidx = getelementptr inbounds i8, i8* inttoptr (i32 -536812560 to i8*), i32 %0, !dbg !7488
  %1 = load volatile i8, i8* %arrayidx, align 1, !dbg !7488, !tbaa !1246
  call void @llvm.dbg.value(metadata i8 %1, metadata !7481, metadata !DIExpression()), !dbg !7484
  %2 = load i8, i8* @ucMaxSysCallPriority, align 1, !dbg !7490, !tbaa !1246
  %cmp2.not = icmp ult i8 %1, %2, !dbg !7490
  br i1 %cmp2.not, label %if.then6, label %if.end7, !dbg !7492

if.then6:                                         ; preds = %if.then
  %3 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #18, !dbg !7493, !srcloc !7270
  call void @llvm.dbg.value(metadata i32 %3, metadata !7267, metadata !DIExpression()) #18, !dbg !7496
  br label %for.cond, !dbg !7497

for.cond:                                         ; preds = %for.cond, %if.then6
  br label %for.cond, !dbg !7498, !llvm.loop !7501

if.end7:                                          ; preds = %if.then, %entry
  %4 = load volatile i32, i32* inttoptr (i32 -536810228 to i32*), align 4, !dbg !7503, !tbaa !1105
  %and = and i32 %4, 1792, !dbg !7503
  %5 = load i32, i32* @ulMaxPRIGROUPValue, align 4, !dbg !7503, !tbaa !1105
  %cmp8.not = icmp ugt i32 %and, %5, !dbg !7503
  br i1 %cmp8.not, label %if.then12, label %if.end14, !dbg !7505

if.then12:                                        ; preds = %if.end7
  %6 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #18, !dbg !7506, !srcloc !7270
  call void @llvm.dbg.value(metadata i32 %6, metadata !7267, metadata !DIExpression()) #18, !dbg !7509
  br label %for.cond13, !dbg !7510

for.cond13:                                       ; preds = %for.cond13, %if.then12
  br label %for.cond13, !dbg !7511, !llvm.loop !7514

if.end14:                                         ; preds = %if.end7
  ret void, !dbg !7516
}

; Function Attrs: nounwind
define dso_local i8* @pvPortMalloc(i32 %xWantedSize) local_unnamed_addr #0 section ".csection14" !dbg !488 {
entry:
  call void @llvm.dbg.value(metadata i32 %xWantedSize, metadata !504, metadata !DIExpression()), !dbg !7517
  call void @llvm.dbg.value(metadata i8* null, metadata !505, metadata !DIExpression()), !dbg !7517
  %and = and i32 %xWantedSize, 7, !dbg !7518
  %tobool.not = icmp eq i32 %and, 0, !dbg !7518
  %sub = sub nuw nsw i32 8, %and, !dbg !7521
  %add = add i32 %sub, %xWantedSize, !dbg !7521
  %cmp = icmp ugt i32 %add, %xWantedSize, !dbg !7521
  %spec.select = select i1 %cmp, i32 %add, i32 0, !dbg !7521
  %xWantedSize.addr.0 = select i1 %tobool.not, i32 %xWantedSize, i32 %spec.select, !dbg !7521
  call void @llvm.dbg.value(metadata i32 %xWantedSize.addr.0, metadata !504, metadata !DIExpression()), !dbg !7517
  call void @xcall_arg0(i32 0, void ()* @vTaskSuspendAll), !dbg !7522
  %0 = load i8*, i8** @pvPortMalloc.pucAlignedHeap, align 4, !dbg !7523, !tbaa !1096
  %cmp7 = icmp eq i8* %0, null, !dbg !7526
  br i1 %cmp7, label %if.then8, label %if.end9, !dbg !7527

if.then8:                                         ; preds = %entry
  %1 = getelementptr [76800 x i8], [76800 x i8]* @ucHeap, i32 0, i32 8
  %2 = ptrtoint i8* %1 to i32
  %3 = and i32 %2, -8
  %4 = inttoptr i32 %3 to i8*
  store i8* %4, i8** @pvPortMalloc.pucAlignedHeap, align 4, !dbg !7528, !tbaa !1096
  br label %if.end9, !dbg !7530

if.end9:                                          ; preds = %if.then8, %entry
  %cmp10.not = icmp eq i32 %xWantedSize.addr.0, 0, !dbg !7531
  br i1 %cmp10.not, label %if.end18, label %land.lhs.true, !dbg !7533

land.lhs.true:                                    ; preds = %if.end9
  %5 = load i32, i32* @xNextFreeByte, align 4, !dbg !7534, !tbaa !1105
  %add11 = add i32 %5, %xWantedSize.addr.0, !dbg !7535
  %cmp12 = icmp ult i32 %add11, 76792, !dbg !7536
  %cmp15 = icmp ugt i32 %add11, %5
  %or.cond = and i1 %cmp12, %cmp15, !dbg !7537
  br i1 %or.cond, label %if.then16, label %if.end18, !dbg !7537

if.then16:                                        ; preds = %land.lhs.true
  %6 = load i8*, i8** @pvPortMalloc.pucAlignedHeap, align 4, !dbg !7538, !tbaa !1096
  %add.ptr = getelementptr inbounds i8, i8* %6, i32 %5, !dbg !7540
  call void @llvm.dbg.value(metadata i8* %add.ptr, metadata !505, metadata !DIExpression()), !dbg !7517
  store i32 %add11, i32* @xNextFreeByte, align 4, !dbg !7541, !tbaa !1105
  br label %if.end18, !dbg !7542

if.end18:                                         ; preds = %if.then16, %land.lhs.true, %if.end9
  %pvReturn.0 = phi i8* [ %add.ptr, %if.then16 ], [ null, %land.lhs.true ], [ null, %if.end9 ], !dbg !7517
  call void @llvm.dbg.value(metadata i8* %pvReturn.0, metadata !505, metadata !DIExpression()), !dbg !7517
  %call = call i32 @icall_arg0(i32 0, i32 ()* @xTaskResumeAll), !dbg !7543
  %cmp19 = icmp eq i8* %pvReturn.0, null, !dbg !7544
  br i1 %cmp19, label %if.then20, label %if.end21, !dbg !7547

if.then20:                                        ; preds = %if.end18
  call void @xcall_arg0(i32 0, void ()* @vApplicationMallocFailedHook), !dbg !7548
  br label %if.end21, !dbg !7550

if.end21:                                         ; preds = %if.then20, %if.end18
  ret i8* %pvReturn.0, !dbg !7551
}

; Function Attrs: norecurse nounwind readnone willreturn
define dso_local void @vPortFree(i8* nocapture %pv) local_unnamed_addr #8 section ".csection14" !dbg !7552 {
entry:
  call void @llvm.dbg.value(metadata i8* %pv, metadata !7554, metadata !DIExpression()), !dbg !7555
  ret void, !dbg !7556
}

; Function Attrs: nofree norecurse nounwind willreturn writeonly
define dso_local void @vPortInitialiseBlocks() local_unnamed_addr #7 section ".csection14" !dbg !7557 {
entry:
  store i32 0, i32* @xNextFreeByte, align 4, !dbg !7558, !tbaa !1105
  ret void, !dbg !7559
}

; Function Attrs: norecurse nounwind readonly willreturn
define dso_local i32 @xPortGetFreeHeapSize() local_unnamed_addr #6 section ".csection14" !dbg !7560 {
entry:
  %0 = load i32, i32* @xNextFreeByte, align 4, !dbg !7563, !tbaa !1105
  %sub = sub i32 76792, %0, !dbg !7564
  ret i32 %sub, !dbg !7565
}

; Function Attrs: nofree norecurse nounwind willreturn
define dso_local void @NVIC_PriorityGroupConfig(i32 %NVIC_PriorityGroup) local_unnamed_addr #3 section ".csection1" !dbg !7566 {
entry:
  call void @llvm.dbg.value(metadata i32 %NVIC_PriorityGroup, metadata !7568, metadata !DIExpression()), !dbg !7569
  %or = or i32 %NVIC_PriorityGroup, 100270080, !dbg !7570
  store volatile i32 %or, i32* inttoptr (i32 -536810228 to i32*), align 4, !dbg !7571, !tbaa !7572
  ret void, !dbg !7574
}

; Function Attrs: nofree norecurse nounwind willreturn
define dso_local void @NVIC_Init(%struct.NVIC_InitTypeDef* nocapture readonly %NVIC_InitStruct) local_unnamed_addr #3 section ".csection1" !dbg !7575 {
entry:
  call void @llvm.dbg.value(metadata %struct.NVIC_InitTypeDef* %NVIC_InitStruct, metadata !7587, metadata !DIExpression()), !dbg !7591
  call void @llvm.dbg.value(metadata i8 0, metadata !7588, metadata !DIExpression()), !dbg !7591
  call void @llvm.dbg.value(metadata i8 0, metadata !7589, metadata !DIExpression()), !dbg !7591
  call void @llvm.dbg.value(metadata i8 15, metadata !7590, metadata !DIExpression()), !dbg !7591
  %NVIC_IRQChannelCmd = getelementptr inbounds %struct.NVIC_InitTypeDef, %struct.NVIC_InitTypeDef* %NVIC_InitStruct, i32 0, i32 3, !dbg !7592
  %0 = load i32, i32* %NVIC_IRQChannelCmd, align 4, !dbg !7592, !tbaa !7594
  %cmp.not = icmp eq i32 %0, 0, !dbg !7596
  br i1 %cmp.not, label %if.else, label %if.then, !dbg !7597

if.then:                                          ; preds = %entry
  %1 = load volatile i32, i32* inttoptr (i32 -536810228 to i32*), align 4, !dbg !7598, !tbaa !7572
  %.not = lshr i32 %1, 8, !dbg !7600
  %2 = and i32 %.not, 7, !dbg !7601
  %conv = xor i32 %2, 7, !dbg !7601
  call void @llvm.dbg.value(metadata i32 %conv, metadata !7588, metadata !DIExpression()), !dbg !7591
  %conv3 = sub nsw i32 4, %conv, !dbg !7602
  call void @llvm.dbg.value(metadata i8 undef, metadata !7589, metadata !DIExpression()), !dbg !7591
  %shr6 = lshr i32 15, %conv, !dbg !7603
  call void @llvm.dbg.value(metadata i32 %shr6, metadata !7590, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7591
  %NVIC_IRQChannelPreemptionPriority = getelementptr inbounds %struct.NVIC_InitTypeDef, %struct.NVIC_InitTypeDef* %NVIC_InitStruct, i32 0, i32 1, !dbg !7604
  %3 = load i8, i8* %NVIC_IRQChannelPreemptionPriority, align 1, !dbg !7604, !tbaa !7605
  %conv8 = zext i8 %3 to i32, !dbg !7606
  %conv9 = and i32 %conv3, 255, !dbg !7607
  %shl = shl i32 %conv8, %conv9, !dbg !7608
  call void @llvm.dbg.value(metadata i32 %shl, metadata !7588, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7591
  %NVIC_IRQChannelSubPriority = getelementptr inbounds %struct.NVIC_InitTypeDef, %struct.NVIC_InitTypeDef* %NVIC_InitStruct, i32 0, i32 2, !dbg !7609
  %4 = load i8, i8* %NVIC_IRQChannelSubPriority, align 2, !dbg !7609, !tbaa !7610
  %5 = trunc i32 %shr6 to i8, !dbg !7611
  %conv14 = and i8 %4, %5, !dbg !7611
  %6 = trunc i32 %shl to i8, !dbg !7612
  %conv17 = or i8 %conv14, %6, !dbg !7612
  call void @llvm.dbg.value(metadata i8 %conv17, metadata !7588, metadata !DIExpression()), !dbg !7591
  %shl19 = shl i8 %conv17, 4, !dbg !7613
  call void @llvm.dbg.value(metadata i8 %shl19, metadata !7588, metadata !DIExpression()), !dbg !7591
  %NVIC_IRQChannel = getelementptr inbounds %struct.NVIC_InitTypeDef, %struct.NVIC_InitTypeDef* %NVIC_InitStruct, i32 0, i32 0, !dbg !7614
  %7 = load i8, i8* %NVIC_IRQChannel, align 4, !dbg !7614, !tbaa !7615
  %idxprom = zext i8 %7 to i32, !dbg !7616
  %arrayidx = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %idxprom, !dbg !7616
  store volatile i8 %shl19, i8* %arrayidx, align 1, !dbg !7617, !tbaa !1246
  %8 = load i8, i8* %NVIC_IRQChannel, align 4, !dbg !7618, !tbaa !7615
  %conv22 = zext i8 %8 to i32, !dbg !7619
  %and23 = and i32 %conv22, 31, !dbg !7620
  %shl24 = shl i32 1, %and23, !dbg !7621
  %9 = lshr i32 %conv22, 5, !dbg !7622
  %arrayidx28 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %9, !dbg !7623
  store volatile i32 %shl24, i32* %arrayidx28, align 4, !dbg !7624, !tbaa !1105
  br label %if.end, !dbg !7625

if.else:                                          ; preds = %entry
  %NVIC_IRQChannel29 = getelementptr inbounds %struct.NVIC_InitTypeDef, %struct.NVIC_InitTypeDef* %NVIC_InitStruct, i32 0, i32 0, !dbg !7626
  %10 = load i8, i8* %NVIC_IRQChannel29, align 4, !dbg !7626, !tbaa !7615
  %conv30 = zext i8 %10 to i32, !dbg !7628
  %and31 = and i32 %conv30, 31, !dbg !7629
  %shl32 = shl i32 1, %and31, !dbg !7630
  %11 = lshr i32 %conv30, 5, !dbg !7631
  %arrayidx36 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %11, !dbg !7632
  store volatile i32 %shl32, i32* %arrayidx36, align 4, !dbg !7633, !tbaa !1105
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !7634
}

; Function Attrs: nofree norecurse nounwind willreturn
define dso_local void @NVIC_SetVectorTable(i32 %NVIC_VectTab, i32 %Offset) local_unnamed_addr #3 section ".csection1" !dbg !7635 {
entry:
  call void @llvm.dbg.value(metadata i32 %NVIC_VectTab, metadata !7639, metadata !DIExpression()), !dbg !7641
  call void @llvm.dbg.value(metadata i32 %Offset, metadata !7640, metadata !DIExpression()), !dbg !7641
  %and = and i32 %Offset, 536870784, !dbg !7642
  %or = or i32 %and, %NVIC_VectTab, !dbg !7643
  store volatile i32 %or, i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !7644, !tbaa !7645
  ret void, !dbg !7646
}

; Function Attrs: nofree norecurse nounwind willreturn
define dso_local void @NVIC_SystemLPConfig(i8 zeroext %LowPowerMode, i32 %NewState) local_unnamed_addr #3 section ".csection1" !dbg !7647 {
entry:
  call void @llvm.dbg.value(metadata i8 %LowPowerMode, metadata !7651, metadata !DIExpression()), !dbg !7653
  call void @llvm.dbg.value(metadata i32 %NewState, metadata !7652, metadata !DIExpression()), !dbg !7653
  %cmp.not = icmp eq i32 %NewState, 0, !dbg !7654
  br i1 %cmp.not, label %if.else, label %if.then, !dbg !7656

if.then:                                          ; preds = %entry
  %conv = zext i8 %LowPowerMode to i32, !dbg !7657
  %0 = load volatile i32, i32* inttoptr (i32 -536810224 to i32*), align 16, !dbg !7659, !tbaa !7660
  %or = or i32 %0, %conv, !dbg !7659
  store volatile i32 %or, i32* inttoptr (i32 -536810224 to i32*), align 16, !dbg !7659, !tbaa !7660
  br label %if.end, !dbg !7661

if.else:                                          ; preds = %entry
  %conv1 = zext i8 %LowPowerMode to i32, !dbg !7662
  %neg = xor i32 %conv1, -1, !dbg !7664
  %1 = load volatile i32, i32* inttoptr (i32 -536810224 to i32*), align 16, !dbg !7665, !tbaa !7660
  %and = and i32 %1, %neg, !dbg !7665
  store volatile i32 %and, i32* inttoptr (i32 -536810224 to i32*), align 16, !dbg !7665, !tbaa !7660
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !7666
}

; Function Attrs: nofree norecurse nounwind willreturn
define dso_local void @SysTick_CLKSourceConfig(i32 %SysTick_CLKSource) local_unnamed_addr #3 section ".csection1" !dbg !7667 {
entry:
  call void @llvm.dbg.value(metadata i32 %SysTick_CLKSource, metadata !7669, metadata !DIExpression()), !dbg !7670
  %cmp = icmp eq i32 %SysTick_CLKSource, 4, !dbg !7671
  br i1 %cmp, label %if.then, label %if.else, !dbg !7673

if.then:                                          ; preds = %entry
  %0 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !7674, !tbaa !7676
  %or = or i32 %0, 4, !dbg !7674
  store volatile i32 %or, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !7674, !tbaa !7676
  br label %if.end, !dbg !7678

if.else:                                          ; preds = %entry
  %1 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !7679, !tbaa !7676
  %and = and i32 %1, -5, !dbg !7679
  store volatile i32 %and, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !7679, !tbaa !7676
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !7681
}

; Function Attrs: nounwind
define dso_local void @vStartLEDFlashTasks(i32 %uxPriority) local_unnamed_addr #0 section ".csection12" !dbg !7682 {
entry:
  call void @llvm.dbg.value(metadata i32 %uxPriority, metadata !7686, metadata !DIExpression()), !dbg !7688
  call void @llvm.dbg.value(metadata i32 0, metadata !7687, metadata !DIExpression()), !dbg !7688
  br label %for.body, !dbg !7689

for.body:                                         ; preds = %for.body, %entry
  %xLEDTask.03 = phi i32 [ 0, %entry ], [ %inc, %for.body ]
  call void @llvm.dbg.value(metadata i32 %xLEDTask.03, metadata !7687, metadata !DIExpression()), !dbg !7688
  %0 = getelementptr [5 x i8], [5 x i8]* @.str.42, i32 0, i32 0
  %call = call i32 @xTaskCreate(void (i8*)* nonnull @vLEDFlashTask, i8* %0, i16 zeroext 130, i8* null, i32 %uxPriority, %struct.tskTaskControlBlock** null) #18, !dbg !7691
  %inc = add nuw nsw i32 %xLEDTask.03, 1, !dbg !7694
  call void @llvm.dbg.value(metadata i32 %inc, metadata !7687, metadata !DIExpression()), !dbg !7688
  %exitcond.not = icmp eq i32 %inc, 3, !dbg !7695
  br i1 %exitcond.not, label %for.end, label %for.body, !dbg !7689, !llvm.loop !7696

for.end:                                          ; preds = %for.body
  ret void, !dbg !7698
}

; Function Attrs: noreturn nounwind
define internal void @vLEDFlashTask(i8* nocapture readnone %pvParameters) #4 section ".csection12" !dbg !7699 {
entry:
  %xLastFlashTime = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %pvParameters, metadata !7701, metadata !DIExpression()), !dbg !7705
  %0 = bitcast i32* %xLastFlashTime to i8*, !dbg !7706
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #18, !dbg !7706
  call void @xcall_arg0(i32 0, void ()* @vPortEnterCritical), !dbg !7707
  %1 = load volatile i32, i32* @uxFlashTaskNumber, align 4, !dbg !7708, !tbaa !1085
  call void @llvm.dbg.value(metadata i32 %1, metadata !7704, metadata !DIExpression()), !dbg !7705
  %2 = load volatile i32, i32* @uxFlashTaskNumber, align 4, !dbg !7710, !tbaa !1085
  %inc = add i32 %2, 1, !dbg !7710
  store volatile i32 %inc, i32* @uxFlashTaskNumber, align 4, !dbg !7710, !tbaa !1085
  call void @xcall_arg0(i32 0, void ()* @vPortExitCritical), !dbg !7711
  %mul = mul i32 %1, 333, !dbg !7712
  %add = add i32 %mul, 333, !dbg !7713
  call void @llvm.dbg.value(metadata i32 %add, metadata !7702, metadata !DIExpression()), !dbg !7705
  %div1 = lshr i32 %add, 1, !dbg !7714
  call void @llvm.dbg.value(metadata i32 %div1, metadata !7702, metadata !DIExpression()), !dbg !7705
  %call = call i32 @icall_arg0(i32 0, i32 ()* @xTaskGetTickCount), !dbg !7715
  call void @llvm.dbg.value(metadata i32 %call, metadata !7703, metadata !DIExpression()), !dbg !7705
  store i32 %call, i32* %xLastFlashTime, align 4, !dbg !7716, !tbaa !1105
  br label %for.cond, !dbg !7717

for.cond:                                         ; preds = %for.cond, %entry
  call void @llvm.dbg.value(metadata i32* %xLastFlashTime, metadata !7703, metadata !DIExpression(DW_OP_deref)), !dbg !7705
  %call2 = call i32 @xTaskDelayUntil(i32* nonnull %xLastFlashTime, i32 %div1) #18, !dbg !7718
  call void @xcall_arg1i(i32 10, i8* bitcast (void (i32)* @vParTestToggleLED to i8*), i32 %1, i32 %1), !dbg !7723
  %call3 = call i32 @xTaskDelayUntil(i32* nonnull %xLastFlashTime, i32 %div1) #18, !dbg !7724
  call void @xcall_arg1i(i32 10, i8* bitcast (void (i32)* @vParTestToggleLED to i8*), i32 %1, i32 %1), !dbg !7726
  br label %for.cond, !dbg !7727, !llvm.loop !7728
}

; Function Attrs: nofree nounwind
define dso_local void @SystemInit() local_unnamed_addr #16 section ".csection0" !dbg !7731 {
entry:
  %0 = load volatile i32, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !7732, !tbaa !7733
  %or = or i32 %0, 15728640, !dbg !7732
  store volatile i32 %or, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !7732, !tbaa !7733
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !7734, !tbaa !7735
  %or1 = or i32 %1, 1, !dbg !7734
  store volatile i32 %or1, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !7734, !tbaa !7735
  store volatile i32 0, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !7737, !tbaa !7738
  %2 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !7739, !tbaa !7735
  %and = and i32 %2, -17367041, !dbg !7739
  store volatile i32 %and, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !7739, !tbaa !7735
  store volatile i32 603992080, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !7740, !tbaa !7741
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !7742, !tbaa !7735
  %and2 = and i32 %3, -262145, !dbg !7742
  store volatile i32 %and2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !7742, !tbaa !7735
  store volatile i32 0, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !7743, !tbaa !7744
  call fastcc void @SetSysClock(), !dbg !7745
  store volatile i32 134217728, i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !7746, !tbaa !7645
  ret void, !dbg !7747
}

; Function Attrs: nofree nounwind
define internal fastcc void @SetSysClock() unnamed_addr #16 section ".csection0" !dbg !7748 {
entry:
  %StartUpCounter = alloca i32, align 4
  %HSEStatus = alloca i32, align 4
  %StartUpCounter.0.StartUpCounter.0.StartUpCounter.0..sroa_cast = bitcast i32* %StartUpCounter to i8*, !dbg !7752
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %StartUpCounter.0.StartUpCounter.0.StartUpCounter.0..sroa_cast), !dbg !7752
  call void @llvm.dbg.declare(metadata i32* %StartUpCounter, metadata !7750, metadata !DIExpression()), !dbg !7753
  store volatile i32 0, i32* %StartUpCounter, align 4, !dbg !7753, !tbaa !1105
  %HSEStatus.0.HSEStatus.0.HSEStatus.0..sroa_cast = bitcast i32* %HSEStatus to i8*, !dbg !7752
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %HSEStatus.0.HSEStatus.0.HSEStatus.0..sroa_cast), !dbg !7752
  call void @llvm.dbg.declare(metadata i32* %HSEStatus, metadata !7751, metadata !DIExpression()), !dbg !7754
  store volatile i32 0, i32* %HSEStatus, align 4, !dbg !7754, !tbaa !1105
  %0 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !7755, !tbaa !7735
  %or = or i32 %0, 65536, !dbg !7755
  store volatile i32 %or, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !7755, !tbaa !7735
  br label %do.body, !dbg !7756

do.body:                                          ; preds = %land.rhs, %entry
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !7757, !tbaa !7735
  %and = and i32 %1, 131072, !dbg !7759
  store volatile i32 %and, i32* %HSEStatus, align 4, !dbg !7760, !tbaa !1105
  %StartUpCounter.0.StartUpCounter.0.StartUpCounter.0. = load volatile i32, i32* %StartUpCounter, align 4, !dbg !7761, !tbaa !1105
  %inc = add i32 %StartUpCounter.0.StartUpCounter.0.StartUpCounter.0., 1, !dbg !7761
  store volatile i32 %inc, i32* %StartUpCounter, align 4, !dbg !7761, !tbaa !1105
  %HSEStatus.0.HSEStatus.0.HSEStatus.0. = load volatile i32, i32* %HSEStatus, align 4, !dbg !7762, !tbaa !1105
  %cmp = icmp eq i32 %HSEStatus.0.HSEStatus.0.HSEStatus.0., 0, !dbg !7763
  br i1 %cmp, label %land.rhs, label %do.end, !dbg !7764

land.rhs:                                         ; preds = %do.body
  %StartUpCounter.0.StartUpCounter.0.StartUpCounter.0.24 = load volatile i32, i32* %StartUpCounter, align 4, !dbg !7765, !tbaa !1105
  %cmp1.not = icmp eq i32 %StartUpCounter.0.StartUpCounter.0.StartUpCounter.0.24, 1280, !dbg !7766
  br i1 %cmp1.not, label %do.end, label %do.body, !dbg !7767, !llvm.loop !7768

do.end:                                           ; preds = %land.rhs, %do.body
  %2 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !7770, !tbaa !7735
  %and2 = and i32 %2, 131072, !dbg !7772
  %cmp3.not = icmp eq i32 %and2, 0, !dbg !7773
  br i1 %cmp3.not, label %if.else, label %if.then, !dbg !7774

if.then:                                          ; preds = %do.end
  store volatile i32 1, i32* %HSEStatus, align 4, !dbg !7775, !tbaa !1105
  br label %if.end, !dbg !7777

if.else:                                          ; preds = %do.end
  store volatile i32 0, i32* %HSEStatus, align 4, !dbg !7778, !tbaa !1105
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %HSEStatus.0.HSEStatus.0.HSEStatus.0.22 = load volatile i32, i32* %HSEStatus, align 4, !dbg !7780, !tbaa !1105
  %cmp4 = icmp eq i32 %HSEStatus.0.HSEStatus.0.HSEStatus.0.22, 1, !dbg !7782
  br i1 %cmp4, label %if.then5, label %if.end21, !dbg !7783

if.then5:                                         ; preds = %if.end
  %3 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !7784, !tbaa !7786
  %or6 = or i32 %3, 268435456, !dbg !7784
  store volatile i32 %or6, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !7784, !tbaa !7786
  %4 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !7787, !tbaa !7788
  %or7 = or i32 %4, 16384, !dbg !7787
  store volatile i32 %or7, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !7787, !tbaa !7788
  %5 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !7790, !tbaa !7738
  store volatile i32 %5, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !7790, !tbaa !7738
  %6 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !7791, !tbaa !7738
  %or8 = or i32 %6, 32768, !dbg !7791
  store volatile i32 %or8, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !7791, !tbaa !7738
  %7 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !7792, !tbaa !7738
  %or9 = or i32 %7, 5120, !dbg !7792
  store volatile i32 %or9, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !7792, !tbaa !7738
  store volatile i32 121654041, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !7793, !tbaa !7741
  %8 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !7794, !tbaa !7735
  %or10 = or i32 %8, 16777216, !dbg !7794
  store volatile i32 %or10, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !7794, !tbaa !7735
  br label %while.cond, !dbg !7795

while.cond:                                       ; preds = %while.cond, %if.then5
  %9 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !7796, !tbaa !7735
  %and11 = and i32 %9, 33554432, !dbg !7797
  %cmp12 = icmp eq i32 %and11, 0, !dbg !7798
  br i1 %cmp12, label %while.cond, label %while.end, !dbg !7795, !llvm.loop !7799

while.end:                                        ; preds = %while.cond
  store volatile i32 1540, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !7801, !tbaa !7802
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !7804, !tbaa !7738
  %and13 = and i32 %10, -4, !dbg !7804
  store volatile i32 %and13, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !7804, !tbaa !7738
  %11 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !7805, !tbaa !7738
  %or14 = or i32 %11, 2, !dbg !7805
  store volatile i32 %or14, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !7805, !tbaa !7738
  br label %while.cond15, !dbg !7806

while.cond15:                                     ; preds = %while.cond15, %while.end
  %12 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !7807, !tbaa !7738
  %and16 = and i32 %12, 12, !dbg !7808
  %cmp17.not = icmp eq i32 %and16, 8, !dbg !7809
  br i1 %cmp17.not, label %if.end21, label %while.cond15, !dbg !7806, !llvm.loop !7810

if.end21:                                         ; preds = %while.cond15, %if.end
  %HSEStatus.0.HSEStatus.0.HSEStatus.0..sroa_cast28 = bitcast i32* %HSEStatus to i8*, !dbg !7812
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %HSEStatus.0.HSEStatus.0.HSEStatus.0..sroa_cast28), !dbg !7812
  %StartUpCounter.0.StartUpCounter.0.StartUpCounter.0..sroa_cast29 = bitcast i32* %StartUpCounter to i8*, !dbg !7812
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %StartUpCounter.0.StartUpCounter.0.StartUpCounter.0..sroa_cast29), !dbg !7812
  ret void, !dbg !7812
}

; Function Attrs: nofree norecurse nounwind willreturn
define dso_local void @SystemCoreClockUpdate() local_unnamed_addr #3 section ".csection0" !dbg !7813 {
entry:
  call void @llvm.dbg.value(metadata i32 0, metadata !7815, metadata !DIExpression()), !dbg !7820
  call void @llvm.dbg.value(metadata i32 0, metadata !7816, metadata !DIExpression()), !dbg !7820
  call void @llvm.dbg.value(metadata i32 2, metadata !7817, metadata !DIExpression()), !dbg !7820
  call void @llvm.dbg.value(metadata i32 0, metadata !7818, metadata !DIExpression()), !dbg !7820
  call void @llvm.dbg.value(metadata i32 2, metadata !7819, metadata !DIExpression()), !dbg !7820
  %0 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !7821, !tbaa !7738
  %and = and i32 %0, 12, !dbg !7822
  call void @llvm.dbg.value(metadata i32 %and, metadata !7815, metadata !DIExpression()), !dbg !7820
  switch i32 %and, label %sw.default [
    i32 0, label %sw.bb
    i32 4, label %sw.bb1
    i32 8, label %sw.bb2
  ], !dbg !7823

sw.bb:                                            ; preds = %entry
  store i32 16000000, i32* @SystemCoreClock, align 4, !dbg !7824, !tbaa !1105
  br label %sw.epilog, !dbg !7826

sw.bb1:                                           ; preds = %entry
  store i32 25000000, i32* @SystemCoreClock, align 4, !dbg !7827, !tbaa !1105
  br label %sw.epilog, !dbg !7828

sw.bb2:                                           ; preds = %entry
  %1 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !7829, !tbaa !7741
  call void @llvm.dbg.value(metadata i32 %1, metadata !7818, metadata !DIExpression(DW_OP_constu, 22, DW_OP_shr, DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)), !dbg !7820
  %2 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !7830, !tbaa !7741
  %and4 = and i32 %2, 63, !dbg !7831
  call void @llvm.dbg.value(metadata i32 %and4, metadata !7819, metadata !DIExpression()), !dbg !7820
  %3 = and i32 %1, 4194304, !dbg !7832
  %cmp.not = icmp eq i32 %3, 0, !dbg !7832
  br i1 %cmp.not, label %if.else, label %if.then, !dbg !7834

if.then:                                          ; preds = %sw.bb2
  %div = udiv i32 25000000, %and4, !dbg !7835
  %4 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !7837, !tbaa !7741
  %and5 = lshr i32 %4, 6, !dbg !7838
  %shr6 = and i32 %and5, 511, !dbg !7838
  %mul = mul i32 %shr6, %div, !dbg !7839
  call void @llvm.dbg.value(metadata i32 %mul, metadata !7816, metadata !DIExpression()), !dbg !7820
  br label %if.end, !dbg !7840

if.else:                                          ; preds = %sw.bb2
  %div7 = udiv i32 16000000, %and4, !dbg !7841
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !7843, !tbaa !7741
  %and8 = lshr i32 %5, 6, !dbg !7844
  %shr9 = and i32 %and8, 511, !dbg !7844
  %mul10 = mul i32 %shr9, %div7, !dbg !7845
  call void @llvm.dbg.value(metadata i32 %mul10, metadata !7816, metadata !DIExpression()), !dbg !7820
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %pllvco.0 = phi i32 [ %mul, %if.then ], [ %mul10, %if.else ], !dbg !7846
  call void @llvm.dbg.value(metadata i32 %pllvco.0, metadata !7816, metadata !DIExpression()), !dbg !7820
  %6 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !7847, !tbaa !7741
  %7 = lshr i32 %6, 15, !dbg !7848
  %add = and i32 %7, 6, !dbg !7848
  %mul13 = add nuw nsw i32 %add, 2, !dbg !7848
  call void @llvm.dbg.value(metadata i32 %mul13, metadata !7817, metadata !DIExpression()), !dbg !7820
  %div14 = udiv i32 %pllvco.0, %mul13, !dbg !7849
  store i32 %div14, i32* @SystemCoreClock, align 4, !dbg !7850, !tbaa !1105
  br label %sw.epilog, !dbg !7851

sw.default:                                       ; preds = %entry
  store i32 16000000, i32* @SystemCoreClock, align 4, !dbg !7852, !tbaa !1105
  br label %sw.epilog, !dbg !7853

sw.epilog:                                        ; preds = %sw.default, %if.end, %sw.bb1, %sw.bb
  %8 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !7854, !tbaa !7738
  %and15 = lshr i32 %8, 4, !dbg !7855
  %shr16 = and i32 %and15, 15, !dbg !7855
  %arrayidx = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %shr16, !dbg !7856
  %9 = load volatile i8, i8* %arrayidx, align 1, !dbg !7856, !tbaa !1246
  %conv = zext i8 %9 to i32, !dbg !7856
  call void @llvm.dbg.value(metadata i32 %conv, metadata !7815, metadata !DIExpression()), !dbg !7820
  %10 = load i32, i32* @SystemCoreClock, align 4, !dbg !7857, !tbaa !1105
  %shr17 = lshr i32 %10, %conv, !dbg !7857
  store i32 %shr17, i32* @SystemCoreClock, align 4, !dbg !7857, !tbaa !1105
  ret void, !dbg !7858
}

; Function Attrs: nounwind
define dso_local void @init_mpu() local_unnamed_addr #0 section ".rtmkcode" !dbg !7859 {
entry:
  %type = alloca i32, align 4
  %type.0.type.0.type.0..sroa_cast = bitcast i32* %type to i8*, !dbg !7863
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %type.0.type.0.type.0..sroa_cast), !dbg !7863
  call void @llvm.dbg.declare(metadata i32* %type, metadata !7861, metadata !DIExpression()), !dbg !7864
  %0 = load volatile i32, i32* inttoptr (i32 -536810096 to i32*), align 16, !dbg !7865, !tbaa !7866
  store volatile i32 %0, i32* %type, align 4, !dbg !7864, !tbaa !1105
  call void asm sideeffect "isb 0xF", "~{memory}"() #18, !dbg !7868, !srcloc !7872
  call void asm sideeffect "dsb 0xF", "~{memory}"() #18, !dbg !7873, !srcloc !7876
  store volatile i32 0, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !7877, !tbaa !7878
  store volatile i32 0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !7879, !tbaa !7880
  %1 = load i32, i32* @code_base, align 4, !dbg !7881, !tbaa !1105
  %and = and i32 %1, -32, !dbg !7882
  %or = or i32 %and, 16, !dbg !7883
  store volatile i32 %or, i32* inttoptr (i32 -536810084 to i32*), align 4, !dbg !7884, !tbaa !7885
  %2 = load i32, i32* @code_size, align 4, !dbg !7886, !tbaa !1105
  %or3 = or i32 %2, 117571585, !dbg !7887
  store volatile i32 %or3, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !7888, !tbaa !7889
  store volatile i32 1, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !7890, !tbaa !7880
  %3 = load i32, i32* @data_base, align 4, !dbg !7891, !tbaa !1105
  %and4 = and i32 %3, -32, !dbg !7892
  %or6 = or i32 %and4, 17, !dbg !7893
  store volatile i32 %or6, i32* inttoptr (i32 -536810084 to i32*), align 4, !dbg !7894, !tbaa !7885
  %4 = load i32, i32* @data_size, align 4, !dbg !7895, !tbaa !1105
  %or8 = or i32 %4, 285933569, !dbg !7896
  store volatile i32 %or8, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !7897, !tbaa !7889
  store volatile i32 4, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !7898, !tbaa !7880
  store volatile i32 1073741844, i32* inttoptr (i32 -536810084 to i32*), align 4, !dbg !7899, !tbaa !7885
  store volatile i32 1048619, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !7900, !tbaa !7889
  store volatile i32 5, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !7901, !tbaa !7880
  store volatile i32 1342177301, i32* inttoptr (i32 -536810084 to i32*), align 4, !dbg !7902, !tbaa !7885
  store volatile i32 1048619, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !7903, !tbaa !7889
  store volatile i32 1, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !7904, !tbaa !7878
  call void asm sideeffect "isb 0xF", "~{memory}"() #18, !dbg !7905, !srcloc !7872
  call void asm sideeffect "dsb 0xF", "~{memory}"() #18, !dbg !7907, !srcloc !7876
  %type.0.type.0.type.0..sroa_cast11 = bitcast i32* %type to i8*, !dbg !7909
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %type.0.type.0.type.0..sroa_cast11), !dbg !7909
  ret void, !dbg !7909
}

; Function Attrs: nounwind
define dso_local void @rtmk_init() local_unnamed_addr #0 section ".rtmkcode" !dbg !7910 {
entry:
  call void @init_mpu(), !dbg !7911
  %call = call i32 @switch_view(i32 1), !dbg !7912
  ret void, !dbg !7913
}

; Function Attrs: nounwind
define dso_local i32 @switch_view(i32 %to) local_unnamed_addr #0 section ".rtmkcode" !dbg !7914 {
entry:
  call void @llvm.dbg.value(metadata i32 %to, metadata !7918, metadata !DIExpression()), !dbg !7920
  call void asm sideeffect "dsb 0xF", "~{memory}"() #18, !dbg !7921, !srcloc !7876
  store volatile i32 0, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !7923, !tbaa !7878
  %0 = load i32, i32* @current, align 4, !dbg !7924, !tbaa !1105
  call void @llvm.dbg.value(metadata i32 %0, metadata !7919, metadata !DIExpression()), !dbg !7920
  store i32 %to, i32* @current, align 4, !dbg !7925, !tbaa !1105
  store volatile i32 7, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !7926, !tbaa !7880
  %start = getelementptr inbounds [6 x %struct.SEC_INFO], [6 x %struct.SEC_INFO]* @comp_info, i32 0, i32 %to, i32 0, !dbg !7927
  %1 = load i32, i32* %start, align 4, !dbg !7927, !tbaa !7928
  %and = and i32 %1, -32, !dbg !7930
  %or1 = or i32 %and, 23, !dbg !7931
  store volatile i32 %or1, i32* inttoptr (i32 -536810084 to i32*), align 4, !dbg !7932, !tbaa !7885
  %size = getelementptr inbounds [6 x %struct.SEC_INFO], [6 x %struct.SEC_INFO]* @comp_info, i32 0, i32 %to, i32 1, !dbg !7933
  %2 = load i32, i32* %size, align 4, !dbg !7933, !tbaa !7934
  %or5 = or i32 %2, 117571585, !dbg !7935
  store volatile i32 %or5, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !7936, !tbaa !7889
  store volatile i32 6, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !7937, !tbaa !7880
  %dstart = getelementptr inbounds [6 x %struct.SEC_INFO], [6 x %struct.SEC_INFO]* @comp_info, i32 0, i32 %to, i32 2, !dbg !7938
  %3 = load i32, i32* %dstart, align 4, !dbg !7938, !tbaa !7939
  %and7 = and i32 %3, -32, !dbg !7940
  %or9 = or i32 %and7, 22, !dbg !7941
  store volatile i32 %or9, i32* inttoptr (i32 -536810084 to i32*), align 4, !dbg !7942, !tbaa !7885
  %dsize = getelementptr inbounds [6 x %struct.SEC_INFO], [6 x %struct.SEC_INFO]* @comp_info, i32 0, i32 %to, i32 3, !dbg !7943
  %4 = load i32, i32* %dsize, align 4, !dbg !7943, !tbaa !7944
  %or12 = or i32 %4, 285933569, !dbg !7945
  store volatile i32 %or12, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !7946, !tbaa !7889
  store volatile i32 1, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !7947, !tbaa !7878
  call void asm sideeffect "isb 0xF", "~{memory}"() #18, !dbg !7948, !srcloc !7872
  call void asm sideeffect "dsb 0xF", "~{memory}"() #18, !dbg !7950, !srcloc !7876
  ret i32 %0, !dbg !7952
}

; Function Attrs: nounwind
define dso_local void @DebugMon_Handler(%struct.ContextStateFrame* nocapture readnone %frame) local_unnamed_addr #0 section ".rtmkcode" !dbg !7953 {
entry:
  call void @llvm.dbg.value(metadata %struct.ContextStateFrame* %frame, metadata !7969, metadata !DIExpression()), !dbg !7972
  %0 = load i32, i32* @counter, align 4, !dbg !7973, !tbaa !1105
  %inc = add nsw i32 %0, 1, !dbg !7973
  store i32 %inc, i32* @counter, align 4, !dbg !7973, !tbaa !1105
  %rem = srem i32 %inc, 4, !dbg !7974
  switch i32 %rem, label %sw.epilog [
    i32 3, label %sw.bb
    i32 2, label %sw.bb1
    i32 1, label %sw.bb4
    i32 0, label %sw.bb6
  ], !dbg !7975

sw.bb:                                            ; preds = %entry
  %1 = load volatile i32, i32* inttoptr (i32 1073875988 to i32*), align 4, !dbg !7976, !tbaa !7977
  %xor = xor i32 %1, 16384, !dbg !7976
  store volatile i32 %xor, i32* inttoptr (i32 1073875988 to i32*), align 4, !dbg !7976, !tbaa !7977
  br label %sw.epilog, !dbg !7979

sw.bb1:                                           ; preds = %entry
  %2 = load volatile i32, i32* inttoptr (i32 1073875988 to i32*), align 4, !dbg !7980, !tbaa !7977
  %xor2 = xor i32 %2, 32768, !dbg !7980
  store volatile i32 %xor2, i32* inttoptr (i32 1073875988 to i32*), align 4, !dbg !7980, !tbaa !7977
  %3 = load volatile i32, i32* inttoptr (i32 1073875988 to i32*), align 4, !dbg !7981, !tbaa !7977
  %xor3 = xor i32 %3, 16384, !dbg !7981
  store volatile i32 %xor3, i32* inttoptr (i32 1073875988 to i32*), align 4, !dbg !7981, !tbaa !7977
  br label %sw.epilog, !dbg !7982

sw.bb4:                                           ; preds = %entry
  %4 = load volatile i32, i32* inttoptr (i32 1073875988 to i32*), align 4, !dbg !7983, !tbaa !7977
  %xor5 = xor i32 %4, 16384, !dbg !7983
  store volatile i32 %xor5, i32* inttoptr (i32 1073875988 to i32*), align 4, !dbg !7983, !tbaa !7977
  br label %sw.epilog, !dbg !7984

sw.bb6:                                           ; preds = %entry
  %5 = load volatile i32, i32* inttoptr (i32 1073875988 to i32*), align 4, !dbg !7985, !tbaa !7977
  %xor7 = xor i32 %5, 16384, !dbg !7985
  store volatile i32 %xor7, i32* inttoptr (i32 1073875988 to i32*), align 4, !dbg !7985, !tbaa !7977
  %6 = load volatile i32, i32* inttoptr (i32 1073875988 to i32*), align 4, !dbg !7986, !tbaa !7977
  %xor8 = xor i32 %6, 32768, !dbg !7986
  store volatile i32 %xor8, i32* inttoptr (i32 1073875988 to i32*), align 4, !dbg !7986, !tbaa !7977
  br label %sw.epilog, !dbg !7987

sw.epilog:                                        ; preds = %sw.bb6, %sw.bb4, %sw.bb1, %sw.bb, %entry
  call void asm sideeffect "isb", ""() #18, !dbg !7988, !srcloc !7989
  ret void, !dbg !7990
}

; Function Attrs: nounwind
define dso_local void @xcall_arg0(i32 %to, void ()* nocapture %func) local_unnamed_addr #0 section ".rtmkcode" !dbg !7991 {
entry:
  call void @llvm.dbg.value(metadata i32 %to, metadata !7997, metadata !DIExpression()), !dbg !8000
  call void @llvm.dbg.value(metadata void ()* %func, metadata !7998, metadata !DIExpression()), !dbg !8000
  %call = call i32 @switch_view(i32 %to), !dbg !8001
  call void @llvm.dbg.value(metadata i32 %call, metadata !7999, metadata !DIExpression()), !dbg !8000
  call void %func() #18, !dbg !8002
  %call1 = call i32 @switch_view(i32 %call), !dbg !8003
  ret void, !dbg !8004
}

; Function Attrs: nounwind
define dso_local void @xcall_arg1i(i32 %to, i8* nocapture %funcp, i32 %arg0, i32 %size) local_unnamed_addr #0 section ".rtmkcode" !dbg !8005 {
entry:
  call void @llvm.dbg.value(metadata i32 %to, metadata !8009, metadata !DIExpression()), !dbg !8015
  call void @llvm.dbg.value(metadata i8* %funcp, metadata !8010, metadata !DIExpression()), !dbg !8015
  call void @llvm.dbg.value(metadata i32 %arg0, metadata !8011, metadata !DIExpression()), !dbg !8015
  call void @llvm.dbg.value(metadata i32 %size, metadata !8012, metadata !DIExpression()), !dbg !8015
  %call = call i32 @switch_view(i32 %to), !dbg !8016
  call void @llvm.dbg.value(metadata i32 %call, metadata !8013, metadata !DIExpression()), !dbg !8015
  %0 = bitcast i8* %funcp to void (i32)*, !dbg !8017
  call void @llvm.dbg.value(metadata void (i32)* %0, metadata !8014, metadata !DIExpression()), !dbg !8015
  call void %0(i32 %arg0) #18, !dbg !8018
  %call1 = call i32 @switch_view(i32 %call), !dbg !8019
  ret void, !dbg !8020
}

; Function Attrs: nounwind
define dso_local void @xcall_arg1p(i32 %to, i8* nocapture %funcp, i8* %arg0, i32 %size) local_unnamed_addr #0 section ".rtmkcode" !dbg !8021 {
entry:
  call void @llvm.dbg.value(metadata i32 %to, metadata !8025, metadata !DIExpression()), !dbg !8031
  call void @llvm.dbg.value(metadata i8* %funcp, metadata !8026, metadata !DIExpression()), !dbg !8031
  call void @llvm.dbg.value(metadata i8* %arg0, metadata !8027, metadata !DIExpression()), !dbg !8031
  call void @llvm.dbg.value(metadata i32 %size, metadata !8028, metadata !DIExpression()), !dbg !8031
  %call = call i32 @switch_view(i32 %to), !dbg !8032
  call void @llvm.dbg.value(metadata i32 %call, metadata !8029, metadata !DIExpression()), !dbg !8031
  %0 = bitcast i8* %funcp to void (i32)*, !dbg !8033
  call void @llvm.dbg.value(metadata void (i32)* %0, metadata !8030, metadata !DIExpression()), !dbg !8031
  %1 = ptrtoint i8* %arg0 to i32, !dbg !8034
  call void %0(i32 %1) #18, !dbg !8035
  %call1 = call i32 @switch_view(i32 %call), !dbg !8036
  ret void, !dbg !8037
}

; Function Attrs: nounwind
define dso_local i32 @switch_view_svc(i32 %param) local_unnamed_addr #0 section ".rtmkcode" !dbg !8038 {
entry:
  call void @llvm.dbg.value(metadata i32 %param, metadata !8040, metadata !DIExpression()), !dbg !8042
  store i32 123123, i32* @selectedFunction, align 4, !dbg !8043, !tbaa !1105
  store i32 %param, i32* @arg, align 4, !dbg !8044, !tbaa !1105
  call void asm sideeffect " cpsie i               \0A cpsie f               \0A dsb                   \0A isb                   \0A svc 0                 \0A nop                   \0A", ""() #18, !dbg !8045, !srcloc !8046
  %0 = load i32, i32* @sret, align 4, !dbg !8047, !tbaa !1105
  call void @llvm.dbg.value(metadata i32 %0, metadata !8041, metadata !DIExpression()), !dbg !8042
  ret i32 %0, !dbg !8048
}

; Function Attrs: nounwind
define dso_local i32 @icall_arg0(i32 %to, i32 ()* nocapture %func) local_unnamed_addr #0 section ".rtmkcode" !dbg !8049 {
entry:
  call void @llvm.dbg.value(metadata i32 %to, metadata !8055, metadata !DIExpression()), !dbg !8059
  call void @llvm.dbg.value(metadata i32 ()* %func, metadata !8056, metadata !DIExpression()), !dbg !8059
  %call = call i32 @switch_view_svc(i32 %to), !dbg !8060
  call void @llvm.dbg.value(metadata i32 %call, metadata !8057, metadata !DIExpression()), !dbg !8059
  %call1 = call i32 %func() #18, !dbg !8061
  call void @llvm.dbg.value(metadata i32 %call1, metadata !8058, metadata !DIExpression()), !dbg !8059
  %call2 = call i32 @switch_view_svc(i32 %call), !dbg !8062
  ret i32 %call1, !dbg !8063
}

; Function Attrs: nounwind
define dso_local i32 @icall_arg1i(i32 %to, i8* nocapture %funcp, i32 %arg0, i32 %size) local_unnamed_addr #0 section ".rtmkcode" !dbg !8064 {
entry:
  call void @llvm.dbg.value(metadata i32 %to, metadata !8068, metadata !DIExpression()), !dbg !8077
  call void @llvm.dbg.value(metadata i8* %funcp, metadata !8069, metadata !DIExpression()), !dbg !8077
  call void @llvm.dbg.value(metadata i32 %arg0, metadata !8070, metadata !DIExpression()), !dbg !8077
  call void @llvm.dbg.value(metadata i32 %size, metadata !8071, metadata !DIExpression()), !dbg !8077
  %call = call i32 @switch_view(i32 %to), !dbg !8078
  call void @llvm.dbg.value(metadata i32 %call, metadata !8072, metadata !DIExpression()), !dbg !8077
  %0 = bitcast i8* %funcp to i32 (i32)*, !dbg !8079
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !8073, metadata !DIExpression()), !dbg !8077
  %call1 = call i32 %0(i32 %arg0) #18, !dbg !8080
  call void @llvm.dbg.value(metadata i32 %call1, metadata !8076, metadata !DIExpression()), !dbg !8077
  %call2 = call i32 @switch_view(i32 %call), !dbg !8081
  ret i32 %call1, !dbg !8082
}

; Function Attrs: nounwind
define dso_local i32 @icall_arg1p(i32 %to, i8* nocapture %funcp, i8* %arg0, i32 %size) local_unnamed_addr #0 section ".rtmkcode" !dbg !8083 {
entry:
  call void @llvm.dbg.value(metadata i32 %to, metadata !8087, metadata !DIExpression()), !dbg !8094
  call void @llvm.dbg.value(metadata i8* %funcp, metadata !8088, metadata !DIExpression()), !dbg !8094
  call void @llvm.dbg.value(metadata i8* %arg0, metadata !8089, metadata !DIExpression()), !dbg !8094
  call void @llvm.dbg.value(metadata i32 %size, metadata !8090, metadata !DIExpression()), !dbg !8094
  %call = call i32 @switch_view(i32 %to), !dbg !8095
  call void @llvm.dbg.value(metadata i32 %call, metadata !8091, metadata !DIExpression()), !dbg !8094
  %0 = bitcast i8* %funcp to i32 (i32)*, !dbg !8096
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !8092, metadata !DIExpression()), !dbg !8094
  %1 = ptrtoint i8* %arg0 to i32, !dbg !8097
  %call1 = call i32 %0(i32 %1) #18, !dbg !8098
  call void @llvm.dbg.value(metadata i32 %call1, metadata !8093, metadata !DIExpression()), !dbg !8094
  %call2 = call i32 @switch_view(i32 %call), !dbg !8099
  ret i32 %call1, !dbg !8100
}

; Function Attrs: nounwind
define dso_local i32 @icall_arg0_noid(i32 ()* %func) local_unnamed_addr #0 section ".rtmkcode" !dbg !8101 {
entry:
  call void @llvm.dbg.value(metadata i32 ()* %func, metadata !8105, metadata !DIExpression()), !dbg !8106
  %0 = ptrtoint i32 ()* %func to i32, !dbg !8107
  %call = call fastcc i32 @getCompartmentFromAddr(i32 %0), !dbg !8108
  %call1 = call i32 @icall_arg0(i32 %call, i32 ()* %func), !dbg !8109
  ret i32 %call1, !dbg !8110
}

; Function Attrs: inlinehint norecurse nounwind readonly
define internal fastcc i32 @getCompartmentFromAddr(i32 %addr) unnamed_addr #17 section ".rtmkcode" !dbg !8111 {
entry:
  call void @llvm.dbg.value(metadata i32 %addr, metadata !8115, metadata !DIExpression()), !dbg !8120
  call void @llvm.dbg.declare(metadata i32* undef, metadata !8116, metadata !DIExpression()), !dbg !8121
  call void @llvm.dbg.value(metadata i32 0, metadata !8117, metadata !DIExpression()), !dbg !8120
  call void @llvm.dbg.value(metadata i32 0, metadata !8118, metadata !DIExpression()), !dbg !8122
  br label %for.body, !dbg !8123

for.body:                                         ; preds = %for.inc, %entry
  %i.014 = phi i32 [ 0, %entry ], [ %inc, %for.inc ]
  call void @llvm.dbg.value(metadata i32 %i.014, metadata !8118, metadata !DIExpression()), !dbg !8122
  %start = getelementptr inbounds [6 x %struct.SEC_INFO], [6 x %struct.SEC_INFO]* @comp_info, i32 0, i32 %i.014, i32 0, !dbg !8124
  %0 = load i32, i32* %start, align 4, !dbg !8124, !tbaa !7928
  %cmp1 = icmp ult i32 %0, %addr, !dbg !8128
  br i1 %cmp1, label %land.lhs.true, label %for.inc, !dbg !8129

land.lhs.true:                                    ; preds = %for.body
  %end = getelementptr inbounds [6 x %struct.SEC_INFO], [6 x %struct.SEC_INFO]* @comp_info, i32 0, i32 %i.014, i32 4, !dbg !8130
  %1 = load i32, i32* %end, align 4, !dbg !8130, !tbaa !8131
  %cmp3 = icmp ugt i32 %1, %addr, !dbg !8132
  br i1 %cmp3, label %cleanup, label %for.inc, !dbg !8133

for.inc:                                          ; preds = %land.lhs.true, %for.body
  %inc = add nuw nsw i32 %i.014, 1, !dbg !8134
  call void @llvm.dbg.value(metadata i32 %inc, metadata !8118, metadata !DIExpression()), !dbg !8122
  %exitcond.not = icmp eq i32 %inc, 6, !dbg !8135
  br i1 %exitcond.not, label %cleanup, label %for.body, !dbg !8123, !llvm.loop !8136

cleanup:                                          ; preds = %for.inc, %land.lhs.true
  %compartment.0 = phi i32 [ 0, %for.inc ], [ %i.014, %land.lhs.true ], !dbg !8120
  call void @llvm.dbg.value(metadata i32 %compartment.0, metadata !8117, metadata !DIExpression()), !dbg !8120
  ret i32 %compartment.0, !dbg !8138
}

; Function Attrs: nounwind
define dso_local void @xcall_arg0_noid(void ()* %func) local_unnamed_addr #0 section ".rtmkcode" !dbg !8139 {
entry:
  call void @llvm.dbg.value(metadata void ()* %func, metadata !8143, metadata !DIExpression()), !dbg !8144
  %0 = ptrtoint void ()* %func to i32, !dbg !8145
  %call = call fastcc i32 @getCompartmentFromAddr(i32 %0), !dbg !8146
  call void @xcall_arg0(i32 %call, void ()* %func), !dbg !8147
  ret void, !dbg !8148
}

; Function Attrs: nounwind
define dso_local void @vParTestInitialise() local_unnamed_addr #0 section ".csection10" !dbg !8149 {
entry:
  call void @xcall_arg1i(i32 17, i8* bitcast (void (i32)* @STM_EVAL_LEDInit to i8*), i32 0, i32 0), !dbg !8150
  call void @STM_EVAL_LEDInit(i32 1) #18, !dbg !8151
  call void @xcall_arg1i(i32 17, i8* bitcast (void (i32)* @STM_EVAL_LEDInit to i8*), i32 2, i32 2), !dbg !8152
  call void @STM_EVAL_LEDInit(i32 3) #18, !dbg !8153
  ret void, !dbg !8154
}

; Function Attrs: nounwind
define dso_local void @vParTestSetLED(i32 %ulLED, i32 %xValue) local_unnamed_addr #0 section ".csection10" !dbg !8155 {
entry:
  call void @llvm.dbg.value(metadata i32 %ulLED, metadata !8159, metadata !DIExpression()), !dbg !8161
  call void @llvm.dbg.value(metadata i32 %xValue, metadata !8160, metadata !DIExpression()), !dbg !8161
  %cmp = icmp ult i32 %ulLED, 4, !dbg !8162
  br i1 %cmp, label %if.then, label %if.end4, !dbg !8164

if.then:                                          ; preds = %entry
  %cmp1 = icmp eq i32 %xValue, 1, !dbg !8165
  br i1 %cmp1, label %if.then2, label %if.else, !dbg !8168

if.then2:                                         ; preds = %if.then
  %arrayidx = getelementptr inbounds [4 x i32], [4 x i32]* @xLEDs, i32 0, i32 %ulLED, !dbg !8169
  %0 = load i32, i32* %arrayidx, align 4, !dbg !8169, !tbaa !1246
  call void @xcall_arg1i(i32 17, i8* bitcast (void (i32)* @STM_EVAL_LEDOn to i8*), i32 %0, i32 %0), !dbg !8171
  br label %if.end4, !dbg !8172

if.else:                                          ; preds = %if.then
  %arrayidx3 = getelementptr inbounds [4 x i32], [4 x i32]* @xLEDs, i32 0, i32 %ulLED, !dbg !8173
  %1 = load i32, i32* %arrayidx3, align 4, !dbg !8173, !tbaa !1246
  call void @xcall_arg1i(i32 17, i8* bitcast (void (i32)* @STM_EVAL_LEDOff to i8*), i32 %1, i32 %1), !dbg !8175
  br label %if.end4

if.end4:                                          ; preds = %if.else, %if.then2, %entry
  ret void, !dbg !8176
}

; Function Attrs: nounwind
define dso_local void @vParTestToggleLED(i32 %ulLED) local_unnamed_addr #0 section ".csection10" !dbg !8177 {
entry:
  call void @llvm.dbg.value(metadata i32 %ulLED, metadata !8179, metadata !DIExpression()), !dbg !8180
  %cmp = icmp ult i32 %ulLED, 4, !dbg !8181
  br i1 %cmp, label %if.then, label %if.end, !dbg !8183

if.then:                                          ; preds = %entry
  call void @xcall_arg0(i32 0, void ()* @vPortEnterCritical), !dbg !8184
  %arrayidx = getelementptr inbounds [4 x i32], [4 x i32]* @xLEDs, i32 0, i32 %ulLED, !dbg !8186
  %0 = load i32, i32* %arrayidx, align 4, !dbg !8186, !tbaa !1246
  call void @xcall_arg1i(i32 17, i8* bitcast (void (i32)* @STM_EVAL_LEDToggle to i8*), i32 %0, i32 %0), !dbg !8188
  call void @vPortExitCritical() #18, !dbg !8189
  br label %if.end, !dbg !8190

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !8191
}

; Function Attrs: nounwind
define dso_local void @STM_EVAL_GPIOReset() local_unnamed_addr #0 section ".csection17" !dbg !8192 {
entry:
  call void @xcall_arg1p(i32 5, i8* bitcast (void (%struct.GPIO_TypeDef*)* @GPIO_DeInit to i8*), i8* inttoptr (i32 1073872896 to i8*), i32 ptrtoint (%struct.GPIO_TypeDef* getelementptr (%struct.GPIO_TypeDef, %struct.GPIO_TypeDef* null, i32 1) to i32)), !dbg !8193
  call void @GPIO_DeInit(%struct.GPIO_TypeDef* nonnull inttoptr (i32 1073873920 to %struct.GPIO_TypeDef*)) #18, !dbg !8194
  call void @xcall_arg1p(i32 5, i8* bitcast (void (%struct.GPIO_TypeDef*)* @GPIO_DeInit to i8*), i8* inttoptr (i32 1073874944 to i8*), i32 ptrtoint (%struct.GPIO_TypeDef* getelementptr (%struct.GPIO_TypeDef, %struct.GPIO_TypeDef* null, i32 1) to i32)), !dbg !8195
  call void @GPIO_DeInit(%struct.GPIO_TypeDef* nonnull inttoptr (i32 1073875968 to %struct.GPIO_TypeDef*)) #18, !dbg !8196
  call void @xcall_arg1p(i32 5, i8* bitcast (void (%struct.GPIO_TypeDef*)* @GPIO_DeInit to i8*), i8* inttoptr (i32 1073876992 to i8*), i32 ptrtoint (%struct.GPIO_TypeDef* getelementptr (%struct.GPIO_TypeDef, %struct.GPIO_TypeDef* null, i32 1) to i32)), !dbg !8197
  call void @GPIO_DeInit(%struct.GPIO_TypeDef* nonnull inttoptr (i32 1073878016 to %struct.GPIO_TypeDef*)) #18, !dbg !8198
  call void @xcall_arg1p(i32 5, i8* bitcast (void (%struct.GPIO_TypeDef*)* @GPIO_DeInit to i8*), i8* inttoptr (i32 1073879040 to i8*), i32 ptrtoint (%struct.GPIO_TypeDef* getelementptr (%struct.GPIO_TypeDef, %struct.GPIO_TypeDef* null, i32 1) to i32)), !dbg !8199
  call void @GPIO_DeInit(%struct.GPIO_TypeDef* nonnull inttoptr (i32 1073880064 to %struct.GPIO_TypeDef*)) #18, !dbg !8200
  call void @xcall_arg1p(i32 5, i8* bitcast (void (%struct.GPIO_TypeDef*)* @GPIO_DeInit to i8*), i8* inttoptr (i32 1073881088 to i8*), i32 ptrtoint (%struct.GPIO_TypeDef* getelementptr (%struct.GPIO_TypeDef, %struct.GPIO_TypeDef* null, i32 1) to i32)), !dbg !8201
  ret void, !dbg !8202
}

; Function Attrs: nounwind
define dso_local void @STM_EVAL_LEDInit(i32 %Led) local_unnamed_addr #0 section ".csection17" !dbg !8203 {
entry:
  %GPIO_InitStructure = alloca %struct.SEC_INFO, align 4
  call void @llvm.dbg.value(metadata i32 %Led, metadata !8207, metadata !DIExpression()), !dbg !8221
  %0 = bitcast %struct.SEC_INFO* %GPIO_InitStructure to i8*, !dbg !8222
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %0) #18, !dbg !8222
  call void @llvm.dbg.declare(metadata %struct.SEC_INFO* %GPIO_InitStructure, metadata !8208, metadata !DIExpression()), !dbg !8223
  %arrayidx = getelementptr inbounds [4 x i32], [4 x i32]* @GPIO_CLK, i32 0, i32 %Led, !dbg !8224
  %1 = load i32, i32* %arrayidx, align 4, !dbg !8224, !tbaa !1105
  call void @RCC_AHB1PeriphClockCmd(i32 %1, i32 1) #18, !dbg !8225
  %arrayidx1 = getelementptr inbounds [4 x i16], [4 x i16]* @GPIO_PIN, i32 0, i32 %Led, !dbg !8226
  %2 = load i16, i16* %arrayidx1, align 2, !dbg !8226, !tbaa !8227
  %conv = zext i16 %2 to i32, !dbg !8226
  %GPIO_Pin = getelementptr inbounds %struct.SEC_INFO, %struct.SEC_INFO* %GPIO_InitStructure, i32 0, i32 0, !dbg !8228
  store i32 %conv, i32* %GPIO_Pin, align 4, !dbg !8229, !tbaa !8230
  %GPIO_Mode = getelementptr inbounds %struct.SEC_INFO, %struct.SEC_INFO* %GPIO_InitStructure, i32 0, i32 1, !dbg !8232
  store i32 1, i32* %GPIO_Mode, align 4, !dbg !8233, !tbaa !8234
  %GPIO_OType = getelementptr inbounds %struct.SEC_INFO, %struct.SEC_INFO* %GPIO_InitStructure, i32 0, i32 3, !dbg !8235
  store i32 0, i32* %GPIO_OType, align 4, !dbg !8236, !tbaa !8237
  %GPIO_PuPd = getelementptr inbounds %struct.SEC_INFO, %struct.SEC_INFO* %GPIO_InitStructure, i32 0, i32 4, !dbg !8238
  store i32 1, i32* %GPIO_PuPd, align 4, !dbg !8239, !tbaa !8240
  %GPIO_Speed = getelementptr inbounds %struct.SEC_INFO, %struct.SEC_INFO* %GPIO_InitStructure, i32 0, i32 2, !dbg !8241
  store i32 2, i32* %GPIO_Speed, align 4, !dbg !8242, !tbaa !8243
  %arrayidx2 = getelementptr inbounds [4 x %struct.GPIO_TypeDef*], [4 x %struct.GPIO_TypeDef*]* @GPIO_PORT, i32 0, i32 %Led, !dbg !8244
  %3 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %arrayidx2, align 4, !dbg !8244, !tbaa !1096
  call void @GPIO_Init(%struct.GPIO_TypeDef* %3, %struct.SEC_INFO* nonnull %GPIO_InitStructure) #18, !dbg !8245
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %0) #18, !dbg !8246
  ret void, !dbg !8246
}

; Function Attrs: nofree norecurse nounwind willreturn
define dso_local void @STM_EVAL_LEDOn(i32 %Led) local_unnamed_addr #3 section ".csection17" !dbg !8247 {
entry:
  call void @llvm.dbg.value(metadata i32 %Led, metadata !8249, metadata !DIExpression()), !dbg !8250
  %arrayidx = getelementptr inbounds [4 x i16], [4 x i16]* @GPIO_PIN, i32 0, i32 %Led, !dbg !8251
  %0 = load i16, i16* %arrayidx, align 2, !dbg !8251, !tbaa !8227
  %arrayidx1 = getelementptr inbounds [4 x %struct.GPIO_TypeDef*], [4 x %struct.GPIO_TypeDef*]* @GPIO_PORT, i32 0, i32 %Led, !dbg !8252
  %1 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %arrayidx1, align 4, !dbg !8252, !tbaa !1096
  %BSRRL = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %1, i32 0, i32 6, !dbg !8253
  store volatile i16 %0, i16* %BSRRL, align 4, !dbg !8254, !tbaa !8255
  ret void, !dbg !8256
}

; Function Attrs: nofree norecurse nounwind willreturn
define dso_local void @STM_EVAL_LEDOff(i32 %Led) local_unnamed_addr #3 section ".csection17" !dbg !8257 {
entry:
  call void @llvm.dbg.value(metadata i32 %Led, metadata !8259, metadata !DIExpression()), !dbg !8260
  %arrayidx = getelementptr inbounds [4 x i16], [4 x i16]* @GPIO_PIN, i32 0, i32 %Led, !dbg !8261
  %0 = load i16, i16* %arrayidx, align 2, !dbg !8261, !tbaa !8227
  %arrayidx1 = getelementptr inbounds [4 x %struct.GPIO_TypeDef*], [4 x %struct.GPIO_TypeDef*]* @GPIO_PORT, i32 0, i32 %Led, !dbg !8262
  %1 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %arrayidx1, align 4, !dbg !8262, !tbaa !1096
  %BSRRH = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %1, i32 0, i32 7, !dbg !8263
  store volatile i16 %0, i16* %BSRRH, align 2, !dbg !8264, !tbaa !8265
  ret void, !dbg !8266
}

; Function Attrs: nofree norecurse nounwind willreturn
define dso_local void @STM_EVAL_LEDToggle(i32 %Led) local_unnamed_addr #3 section ".csection17" !dbg !8267 {
entry:
  call void @llvm.dbg.value(metadata i32 %Led, metadata !8269, metadata !DIExpression()), !dbg !8270
  %arrayidx = getelementptr inbounds [4 x i16], [4 x i16]* @GPIO_PIN, i32 0, i32 %Led, !dbg !8271
  %0 = load i16, i16* %arrayidx, align 2, !dbg !8271, !tbaa !8227
  %conv = zext i16 %0 to i32, !dbg !8271
  %arrayidx1 = getelementptr inbounds [4 x %struct.GPIO_TypeDef*], [4 x %struct.GPIO_TypeDef*]* @GPIO_PORT, i32 0, i32 %Led, !dbg !8272
  %1 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %arrayidx1, align 4, !dbg !8272, !tbaa !1096
  %ODR = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %1, i32 0, i32 5, !dbg !8273
  %2 = load volatile i32, i32* %ODR, align 4, !dbg !8274, !tbaa !7977
  %xor = xor i32 %2, %conv, !dbg !8274
  store volatile i32 %xor, i32* %ODR, align 4, !dbg !8274, !tbaa !7977
  ret void, !dbg !8275
}

; Function Attrs: nounwind
define dso_local void @STM_EVAL_PBInit(i32 %Button, i32 %Button_Mode) local_unnamed_addr #0 section ".csection17" !dbg !8276 {
entry:
  %GPIO_InitStructure = alloca %struct.SEC_INFO, align 4
  %EXTI_InitStructure = alloca %struct.EXTI_InitTypeDef, align 4
  %NVIC_InitStructure = alloca %struct.NVIC_InitTypeDef, align 4
  call void @llvm.dbg.value(metadata i32 %Button, metadata !8282, metadata !DIExpression()), !dbg !8296
  call void @llvm.dbg.value(metadata i32 %Button_Mode, metadata !8283, metadata !DIExpression()), !dbg !8296
  %0 = bitcast %struct.SEC_INFO* %GPIO_InitStructure to i8*, !dbg !8297
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %0) #18, !dbg !8297
  call void @llvm.dbg.declare(metadata %struct.SEC_INFO* %GPIO_InitStructure, metadata !8284, metadata !DIExpression()), !dbg !8298
  %1 = bitcast %struct.EXTI_InitTypeDef* %EXTI_InitStructure to i8*, !dbg !8299
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1) #18, !dbg !8299
  call void @llvm.dbg.declare(metadata %struct.EXTI_InitTypeDef* %EXTI_InitStructure, metadata !8285, metadata !DIExpression()), !dbg !8300
  %2 = getelementptr inbounds %struct.NVIC_InitTypeDef, %struct.NVIC_InitTypeDef* %NVIC_InitStructure, i32 0, i32 0, !dbg !8301
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #18, !dbg !8301
  call void @llvm.dbg.declare(metadata %struct.NVIC_InitTypeDef* %NVIC_InitStructure, metadata !8295, metadata !DIExpression()), !dbg !8302
  %arrayidx = getelementptr inbounds [8 x i32], [8 x i32]* @BUTTON_CLK, i32 0, i32 %Button, !dbg !8303
  %3 = load i32, i32* %arrayidx, align 4, !dbg !8303, !tbaa !1105
  call void @RCC_AHB1PeriphClockCmd(i32 %3, i32 1) #18, !dbg !8304
  call void @RCC_APB2PeriphClockCmd(i32 16384, i32 1) #18, !dbg !8305
  %GPIO_Mode = getelementptr inbounds %struct.SEC_INFO, %struct.SEC_INFO* %GPIO_InitStructure, i32 0, i32 1, !dbg !8306
  store i32 0, i32* %GPIO_Mode, align 4, !dbg !8307, !tbaa !8234
  %GPIO_PuPd = getelementptr inbounds %struct.SEC_INFO, %struct.SEC_INFO* %GPIO_InitStructure, i32 0, i32 4, !dbg !8308
  store i32 0, i32* %GPIO_PuPd, align 4, !dbg !8309, !tbaa !8240
  %arrayidx1 = getelementptr inbounds [8 x i16], [8 x i16]* @BUTTON_PIN, i32 0, i32 %Button, !dbg !8310
  %4 = load i16, i16* %arrayidx1, align 2, !dbg !8310, !tbaa !8227
  %conv = zext i16 %4 to i32, !dbg !8310
  %GPIO_Pin = getelementptr inbounds %struct.SEC_INFO, %struct.SEC_INFO* %GPIO_InitStructure, i32 0, i32 0, !dbg !8311
  store i32 %conv, i32* %GPIO_Pin, align 4, !dbg !8312, !tbaa !8230
  %arrayidx2 = getelementptr inbounds [8 x %struct.GPIO_TypeDef*], [8 x %struct.GPIO_TypeDef*]* @BUTTON_PORT, i32 0, i32 %Button, !dbg !8313
  %5 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %arrayidx2, align 4, !dbg !8313, !tbaa !1096
  call void @GPIO_Init(%struct.GPIO_TypeDef* %5, %struct.SEC_INFO* nonnull %GPIO_InitStructure) #18, !dbg !8314
  %cmp = icmp eq i32 %Button_Mode, 1, !dbg !8315
  br i1 %cmp, label %if.then, label %if.end16, !dbg !8317

if.then:                                          ; preds = %entry
  %arrayidx4 = getelementptr inbounds [8 x i16], [8 x i16]* @BUTTON_PORT_SOURCE, i32 0, i32 %Button, !dbg !8318
  %6 = load i16, i16* %arrayidx4, align 2, !dbg !8318, !tbaa !8227
  %conv5 = trunc i16 %6 to i8, !dbg !8318
  %arrayidx6 = getelementptr inbounds [8 x i16], [8 x i16]* @BUTTON_PIN_SOURCE, i32 0, i32 %Button, !dbg !8320
  %7 = load i16, i16* %arrayidx6, align 2, !dbg !8320, !tbaa !8227
  %conv7 = trunc i16 %7 to i8, !dbg !8320
  call void @SYSCFG_EXTILineConfig(i8 zeroext %conv5, i8 zeroext %conv7) #18, !dbg !8321
  %arrayidx8 = getelementptr inbounds [8 x i16], [8 x i16]* @BUTTON_EXTI_LINE, i32 0, i32 %Button, !dbg !8322
  %8 = load i16, i16* %arrayidx8, align 2, !dbg !8322, !tbaa !8227
  %conv9 = zext i16 %8 to i32, !dbg !8322
  %EXTI_Line = getelementptr inbounds %struct.EXTI_InitTypeDef, %struct.EXTI_InitTypeDef* %EXTI_InitStructure, i32 0, i32 0, !dbg !8323
  store i32 %conv9, i32* %EXTI_Line, align 4, !dbg !8324, !tbaa !8325
  %EXTI_Mode = getelementptr inbounds %struct.EXTI_InitTypeDef, %struct.EXTI_InitTypeDef* %EXTI_InitStructure, i32 0, i32 1, !dbg !8327
  store i32 0, i32* %EXTI_Mode, align 4, !dbg !8328, !tbaa !8329
  %cmp10.not = icmp eq i32 %Button, 0, !dbg !8330
  br i1 %cmp10.not, label %if.else, label %if.then12, !dbg !8332

if.then12:                                        ; preds = %if.then
  %EXTI_Trigger = getelementptr inbounds %struct.EXTI_InitTypeDef, %struct.EXTI_InitTypeDef* %EXTI_InitStructure, i32 0, i32 2, !dbg !8333
  store i32 12, i32* %EXTI_Trigger, align 4, !dbg !8335, !tbaa !8336
  br label %if.end, !dbg !8337

if.else:                                          ; preds = %if.then
  %EXTI_Trigger13 = getelementptr inbounds %struct.EXTI_InitTypeDef, %struct.EXTI_InitTypeDef* %EXTI_InitStructure, i32 0, i32 2, !dbg !8338
  store i32 8, i32* %EXTI_Trigger13, align 4, !dbg !8340, !tbaa !8336
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then12
  %EXTI_LineCmd = getelementptr inbounds %struct.EXTI_InitTypeDef, %struct.EXTI_InitTypeDef* %EXTI_InitStructure, i32 0, i32 3, !dbg !8341
  store i32 1, i32* %EXTI_LineCmd, align 4, !dbg !8342, !tbaa !8343
  call void @xcall_arg1p(i32 15, i8* bitcast (void (%struct.EXTI_InitTypeDef*)* @EXTI_Init to i8*), i8* %10, i32 mul nuw (i32 ptrtoint (i32* getelementptr (i32, i32* null, i32 1) to i32), i32 4)), !dbg !8344
  %arrayidx14 = getelementptr inbounds [8 x i16], [8 x i16]* @BUTTON_IRQn, i32 0, i32 %Button, !dbg !8345
  %9 = load i16, i16* %arrayidx14, align 2, !dbg !8345, !tbaa !8227
  %conv15 = trunc i16 %9 to i8, !dbg !8345
  store i8 %conv15, i8* %2, align 4, !dbg !8346, !tbaa !7615
  %NVIC_IRQChannelPreemptionPriority = getelementptr inbounds %struct.NVIC_InitTypeDef, %struct.NVIC_InitTypeDef* %NVIC_InitStructure, i32 0, i32 1, !dbg !8347
  store i8 15, i8* %NVIC_IRQChannelPreemptionPriority, align 1, !dbg !8348, !tbaa !7605
  %NVIC_IRQChannelSubPriority = getelementptr inbounds %struct.NVIC_InitTypeDef, %struct.NVIC_InitTypeDef* %NVIC_InitStructure, i32 0, i32 2, !dbg !8349
  store i8 15, i8* %NVIC_IRQChannelSubPriority, align 2, !dbg !8350, !tbaa !7610
  %NVIC_IRQChannelCmd = getelementptr inbounds %struct.NVIC_InitTypeDef, %struct.NVIC_InitTypeDef* %NVIC_InitStructure, i32 0, i32 3, !dbg !8351
  store i32 1, i32* %NVIC_IRQChannelCmd, align 4, !dbg !8352, !tbaa !7594
  call void @xcall_arg1p(i32 1, i8* bitcast (void (%struct.NVIC_InitTypeDef*)* @NVIC_Init to i8*), i8* %11, i32 ptrtoint (%struct.NVIC_InitTypeDef* getelementptr (%struct.NVIC_InitTypeDef, %struct.NVIC_InitTypeDef* null, i32 1) to i32)), !dbg !8353
  br label %if.end16, !dbg !8354
  %10 = bitcast %struct.EXTI_InitTypeDef* %EXTI_InitStructure to i8*
  %11 = bitcast %struct.NVIC_InitTypeDef* %NVIC_InitStructure to i8*

if.end16:                                         ; preds = %if.end, %entry
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #18, !dbg !8355
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1) #18, !dbg !8355
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %0) #18, !dbg !8355
  ret void, !dbg !8355
}

; Function Attrs: nounwind
define dso_local i32 @STM_EVAL_PBGetState(i32 %Button) local_unnamed_addr #0 section ".csection17" !dbg !8356 {
entry:
  call void @llvm.dbg.value(metadata i32 %Button, metadata !8360, metadata !DIExpression()), !dbg !8361
  %arrayidx = getelementptr inbounds [8 x %struct.GPIO_TypeDef*], [8 x %struct.GPIO_TypeDef*]* @BUTTON_PORT, i32 0, i32 %Button, !dbg !8362
  %0 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %arrayidx, align 4, !dbg !8362, !tbaa !1096
  %arrayidx1 = getelementptr inbounds [8 x i16], [8 x i16]* @BUTTON_PIN, i32 0, i32 %Button, !dbg !8363
  %1 = load i16, i16* %arrayidx1, align 2, !dbg !8363, !tbaa !8227
  %call = call zeroext i8 @GPIO_ReadInputDataBit(%struct.GPIO_TypeDef* %0, i16 zeroext %1) #18, !dbg !8364
  %conv = zext i8 %call to i32, !dbg !8364
  ret i32 %conv, !dbg !8365
}

; Function Attrs: nounwind
define dso_local void @STM_EVAL_COMInit(i32 %COM, %struct.USART_InitTypeDef* nocapture readnone %USART_InitStruct) local_unnamed_addr #0 section ".csection17" !dbg !8366 {
entry:
  %GPIO_InitStructure = alloca %struct.SEC_INFO, align 4
  call void @llvm.dbg.value(metadata i32 %COM, metadata !8382, metadata !DIExpression()), !dbg !8385
  call void @llvm.dbg.value(metadata %struct.USART_InitTypeDef* %USART_InitStruct, metadata !8383, metadata !DIExpression()), !dbg !8385
  %0 = bitcast %struct.SEC_INFO* %GPIO_InitStructure to i8*, !dbg !8386
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %0) #18, !dbg !8386
  call void @llvm.dbg.declare(metadata %struct.SEC_INFO* %GPIO_InitStructure, metadata !8384, metadata !DIExpression()), !dbg !8387
  %arrayidx = getelementptr inbounds [2 x i32], [2 x i32]* @COM_TX_PORT_CLK, i32 0, i32 %COM, !dbg !8388
  %1 = load i32, i32* %arrayidx, align 4, !dbg !8388, !tbaa !1105
  %arrayidx1 = getelementptr inbounds [2 x i32], [2 x i32]* @COM_RX_PORT_CLK, i32 0, i32 %COM, !dbg !8389
  %2 = load i32, i32* %arrayidx1, align 4, !dbg !8389, !tbaa !1105
  %or = or i32 %2, %1, !dbg !8390
  call void @RCC_AHB1PeriphClockCmd(i32 %or, i32 1) #18, !dbg !8391
  %cmp = icmp eq i32 %COM, 0, !dbg !8392
  br i1 %cmp, label %if.then, label %if.end, !dbg !8394

if.then:                                          ; preds = %entry
  call void @RCC_APB2PeriphClockCmd(i32 32, i32 1) #18, !dbg !8395
  br label %if.end, !dbg !8397

if.end:                                           ; preds = %if.then, %entry
  %arrayidx3 = getelementptr inbounds [2 x %struct.GPIO_TypeDef*], [2 x %struct.GPIO_TypeDef*]* @COM_TX_PORT, i32 0, i32 %COM, !dbg !8398
  %3 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %arrayidx3, align 4, !dbg !8398, !tbaa !1096
  %arrayidx4 = getelementptr inbounds [2 x i16], [2 x i16]* @COM_TX_PIN_SOURCE, i32 0, i32 %COM, !dbg !8399
  %4 = load i16, i16* %arrayidx4, align 2, !dbg !8399, !tbaa !8227
  %arrayidx5 = getelementptr inbounds [2 x i16], [2 x i16]* @COM_TX_AF, i32 0, i32 %COM, !dbg !8400
  %5 = load i16, i16* %arrayidx5, align 2, !dbg !8400, !tbaa !8227
  %conv = trunc i16 %5 to i8, !dbg !8400
  call void @GPIO_PinAFConfig(%struct.GPIO_TypeDef* %3, i16 zeroext %4, i8 zeroext %conv) #18, !dbg !8401
  %arrayidx6 = getelementptr inbounds [2 x %struct.GPIO_TypeDef*], [2 x %struct.GPIO_TypeDef*]* @COM_RX_PORT, i32 0, i32 %COM, !dbg !8402
  %6 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %arrayidx6, align 4, !dbg !8402, !tbaa !1096
  %arrayidx7 = getelementptr inbounds [2 x i16], [2 x i16]* @COM_RX_PIN_SOURCE, i32 0, i32 %COM, !dbg !8403
  %7 = load i16, i16* %arrayidx7, align 2, !dbg !8403, !tbaa !8227
  %arrayidx8 = getelementptr inbounds [2 x i16], [2 x i16]* @COM_RX_AF, i32 0, i32 %COM, !dbg !8404
  %8 = load i16, i16* %arrayidx8, align 2, !dbg !8404, !tbaa !8227
  %conv9 = trunc i16 %8 to i8, !dbg !8404
  call void @GPIO_PinAFConfig(%struct.GPIO_TypeDef* %6, i16 zeroext %7, i8 zeroext %conv9) #18, !dbg !8405
  %GPIO_OType = getelementptr inbounds %struct.SEC_INFO, %struct.SEC_INFO* %GPIO_InitStructure, i32 0, i32 3, !dbg !8406
  store i32 0, i32* %GPIO_OType, align 4, !dbg !8407, !tbaa !8237
  %GPIO_PuPd = getelementptr inbounds %struct.SEC_INFO, %struct.SEC_INFO* %GPIO_InitStructure, i32 0, i32 4, !dbg !8408
  store i32 1, i32* %GPIO_PuPd, align 4, !dbg !8409, !tbaa !8240
  %GPIO_Mode = getelementptr inbounds %struct.SEC_INFO, %struct.SEC_INFO* %GPIO_InitStructure, i32 0, i32 1, !dbg !8410
  store i32 2, i32* %GPIO_Mode, align 4, !dbg !8411, !tbaa !8234
  %arrayidx10 = getelementptr inbounds [2 x i16], [2 x i16]* @COM_TX_PIN, i32 0, i32 %COM, !dbg !8412
  %9 = load i16, i16* %arrayidx10, align 2, !dbg !8412, !tbaa !8227
  %conv11 = zext i16 %9 to i32, !dbg !8412
  %GPIO_Pin = getelementptr inbounds %struct.SEC_INFO, %struct.SEC_INFO* %GPIO_InitStructure, i32 0, i32 0, !dbg !8413
  store i32 %conv11, i32* %GPIO_Pin, align 4, !dbg !8414, !tbaa !8230
  %GPIO_Speed = getelementptr inbounds %struct.SEC_INFO, %struct.SEC_INFO* %GPIO_InitStructure, i32 0, i32 2, !dbg !8415
  store i32 2, i32* %GPIO_Speed, align 4, !dbg !8416, !tbaa !8243
  %10 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %arrayidx3, align 4, !dbg !8417, !tbaa !1096
  call void @GPIO_Init(%struct.GPIO_TypeDef* %10, %struct.SEC_INFO* nonnull %GPIO_InitStructure) #18, !dbg !8418
  store i32 2, i32* %GPIO_Mode, align 4, !dbg !8419, !tbaa !8234
  %arrayidx14 = getelementptr inbounds [2 x i16], [2 x i16]* @COM_RX_PIN, i32 0, i32 %COM, !dbg !8420
  %11 = load i16, i16* %arrayidx14, align 2, !dbg !8420, !tbaa !8227
  %conv15 = zext i16 %11 to i32, !dbg !8420
  store i32 %conv15, i32* %GPIO_Pin, align 4, !dbg !8421, !tbaa !8230
  %12 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %arrayidx6, align 4, !dbg !8422, !tbaa !1096
  call void @GPIO_Init(%struct.GPIO_TypeDef* %12, %struct.SEC_INFO* nonnull %GPIO_InitStructure) #18, !dbg !8423
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %0) #18, !dbg !8424
  ret void, !dbg !8424
}

; Function Attrs: nounwind
define dso_local void @GPIO_DeInit(%struct.GPIO_TypeDef* %GPIOx) local_unnamed_addr #0 section ".csection5" !dbg !8425 {
entry:
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %GPIOx, metadata !8429, metadata !DIExpression()), !dbg !8430
  %magicptr43 = ptrtoint %struct.GPIO_TypeDef* %GPIOx to i32, !dbg !8431
  %0 = add i32 %magicptr43, -1073872896, !dbg !8431
  %1 = call i32 @llvm.fshl.i32(i32 %0, i32 %0, i32 22), !dbg !8431
  switch i32 %1, label %if.end31 [
    i32 0, label %if.then
    i32 1, label %if.then2
    i32 2, label %if.then5
    i32 3, label %if.then8
    i32 4, label %if.then11
    i32 5, label %if.then14
    i32 6, label %if.then17
    i32 7, label %if.then20
    i32 8, label %if.then23
  ], !dbg !8431

if.then:                                          ; preds = %entry
  call void @RCC_AHB1PeriphResetCmd(i32 1, i32 1) #18, !dbg !8432
  call void @RCC_AHB1PeriphResetCmd(i32 1, i32 0) #18, !dbg !8435
  br label %if.end31, !dbg !8436

if.then2:                                         ; preds = %entry
  call void @RCC_AHB1PeriphResetCmd(i32 2, i32 1) #18, !dbg !8437
  call void @RCC_AHB1PeriphResetCmd(i32 2, i32 0) #18, !dbg !8440
  br label %if.end31, !dbg !8441

if.then5:                                         ; preds = %entry
  call void @RCC_AHB1PeriphResetCmd(i32 4, i32 1) #18, !dbg !8442
  call void @RCC_AHB1PeriphResetCmd(i32 4, i32 0) #18, !dbg !8445
  br label %if.end31, !dbg !8446

if.then8:                                         ; preds = %entry
  call void @RCC_AHB1PeriphResetCmd(i32 8, i32 1) #18, !dbg !8447
  call void @RCC_AHB1PeriphResetCmd(i32 8, i32 0) #18, !dbg !8450
  br label %if.end31, !dbg !8451

if.then11:                                        ; preds = %entry
  call void @RCC_AHB1PeriphResetCmd(i32 16, i32 1) #18, !dbg !8452
  call void @RCC_AHB1PeriphResetCmd(i32 16, i32 0) #18, !dbg !8455
  br label %if.end31, !dbg !8456

if.then14:                                        ; preds = %entry
  call void @RCC_AHB1PeriphResetCmd(i32 32, i32 1) #18, !dbg !8457
  call void @RCC_AHB1PeriphResetCmd(i32 32, i32 0) #18, !dbg !8460
  br label %if.end31, !dbg !8461

if.then17:                                        ; preds = %entry
  call void @RCC_AHB1PeriphResetCmd(i32 64, i32 1) #18, !dbg !8462
  call void @RCC_AHB1PeriphResetCmd(i32 64, i32 0) #18, !dbg !8465
  br label %if.end31, !dbg !8466

if.then20:                                        ; preds = %entry
  call void @RCC_AHB1PeriphResetCmd(i32 128, i32 1) #18, !dbg !8467
  call void @RCC_AHB1PeriphResetCmd(i32 128, i32 0) #18, !dbg !8470
  br label %if.end31, !dbg !8471

if.then23:                                        ; preds = %entry
  call void @RCC_AHB1PeriphResetCmd(i32 256, i32 1) #18, !dbg !8472
  call void @RCC_AHB1PeriphResetCmd(i32 256, i32 0) #18, !dbg !8476
  br label %if.end31, !dbg !8477

if.end31:                                         ; preds = %if.then23, %if.then20, %if.then17, %if.then14, %if.then11, %if.then8, %if.then5, %if.then2, %if.then, %entry
  ret void, !dbg !8478
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.fshl.i32(i32 %0, i32 %1, i32 %2) #1 section ".csection13"

; Function Attrs: nofree norecurse nounwind
define dso_local void @GPIO_Init(%struct.GPIO_TypeDef* %GPIOx, %struct.SEC_INFO* nocapture readonly %GPIO_InitStruct) local_unnamed_addr #12 section ".csection5" !dbg !8479 {
entry:
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %GPIOx, metadata !8492, metadata !DIExpression()), !dbg !8497
  call void @llvm.dbg.value(metadata %struct.SEC_INFO* %GPIO_InitStruct, metadata !8493, metadata !DIExpression()), !dbg !8497
  call void @llvm.dbg.value(metadata i32 0, metadata !8494, metadata !DIExpression()), !dbg !8497
  call void @llvm.dbg.value(metadata i32 0, metadata !8495, metadata !DIExpression()), !dbg !8497
  call void @llvm.dbg.value(metadata i32 0, metadata !8496, metadata !DIExpression()), !dbg !8497
  call void @llvm.dbg.value(metadata i32 0, metadata !8494, metadata !DIExpression()), !dbg !8497
  %GPIO_Pin = getelementptr inbounds %struct.SEC_INFO, %struct.SEC_INFO* %GPIO_InitStruct, i32 0, i32 0
  %0 = load i32, i32* %GPIO_Pin, align 4, !tbaa !8230
  %MODER = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %GPIOx, i32 0, i32 0
  %GPIO_Mode = getelementptr inbounds %struct.SEC_INFO, %struct.SEC_INFO* %GPIO_InitStruct, i32 0, i32 1
  %OSPEEDR = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %GPIOx, i32 0, i32 2
  %GPIO_Speed = getelementptr inbounds %struct.SEC_INFO, %struct.SEC_INFO* %GPIO_InitStruct, i32 0, i32 2
  %OTYPER = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %GPIOx, i32 0, i32 1
  %GPIO_OType = getelementptr inbounds %struct.SEC_INFO, %struct.SEC_INFO* %GPIO_InitStruct, i32 0, i32 3
  %PUPDR = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %GPIOx, i32 0, i32 3
  %GPIO_PuPd = getelementptr inbounds %struct.SEC_INFO, %struct.SEC_INFO* %GPIO_InitStruct, i32 0, i32 4
  br label %for.body, !dbg !8498

for.body:                                         ; preds = %for.inc, %entry
  %pinpos.071 = phi i32 [ 0, %entry ], [ %inc, %for.inc ]
  call void @llvm.dbg.value(metadata i32 %pinpos.071, metadata !8494, metadata !DIExpression()), !dbg !8497
  %shl = shl i32 1, %pinpos.071, !dbg !8500
  call void @llvm.dbg.value(metadata i32 %shl, metadata !8495, metadata !DIExpression()), !dbg !8497
  %and = and i32 %0, %shl, !dbg !8503
  call void @llvm.dbg.value(metadata i32 %and, metadata !8496, metadata !DIExpression()), !dbg !8497
  %cmp1 = icmp eq i32 %and, %shl, !dbg !8504
  br i1 %cmp1, label %if.then, label %for.inc, !dbg !8506

if.then:                                          ; preds = %for.body
  %mul = shl nuw i32 %pinpos.071, 1, !dbg !8507
  %shl2 = shl i32 3, %mul, !dbg !8509
  %neg = xor i32 %shl2, -1, !dbg !8510
  %1 = load volatile i32, i32* %MODER, align 4, !dbg !8511, !tbaa !8512
  %and3 = and i32 %1, %neg, !dbg !8511
  store volatile i32 %and3, i32* %MODER, align 4, !dbg !8511, !tbaa !8512
  %2 = load i32, i32* %GPIO_Mode, align 4, !dbg !8513, !tbaa !8234
  %shl5 = shl i32 %2, %mul, !dbg !8514
  %3 = load volatile i32, i32* %MODER, align 4, !dbg !8515, !tbaa !8512
  %or = or i32 %3, %shl5, !dbg !8515
  store volatile i32 %or, i32* %MODER, align 4, !dbg !8515, !tbaa !8512
  %.off = add i32 %2, -1, !dbg !8516
  %switch = icmp ult i32 %.off, 2, !dbg !8516
  br i1 %switch, label %if.then11, label %if.end, !dbg !8516

if.then11:                                        ; preds = %if.then
  %4 = load volatile i32, i32* %OSPEEDR, align 4, !dbg !8518, !tbaa !8520
  %and15 = and i32 %4, %neg, !dbg !8518
  store volatile i32 %and15, i32* %OSPEEDR, align 4, !dbg !8518, !tbaa !8520
  %5 = load i32, i32* %GPIO_Speed, align 4, !dbg !8521, !tbaa !8243
  %shl17 = shl i32 %5, %mul, !dbg !8522
  %6 = load volatile i32, i32* %OSPEEDR, align 4, !dbg !8523, !tbaa !8520
  %or19 = or i32 %6, %shl17, !dbg !8523
  store volatile i32 %or19, i32* %OSPEEDR, align 4, !dbg !8523, !tbaa !8520
  %shl21 = shl i32 1, %pinpos.071, !dbg !8524
  %neg22 = xor i32 %shl21, -1, !dbg !8525
  %7 = load volatile i32, i32* %OTYPER, align 4, !dbg !8526, !tbaa !8527
  %and23 = and i32 %7, %neg22, !dbg !8526
  store volatile i32 %and23, i32* %OTYPER, align 4, !dbg !8526, !tbaa !8527
  %8 = load i32, i32* %GPIO_OType, align 4, !dbg !8528, !tbaa !8237
  %conv25 = and i32 %8, 65535, !dbg !8529
  %shl28 = shl i32 %conv25, %pinpos.071, !dbg !8530
  %conv30 = and i32 %shl28, 65535, !dbg !8531
  %9 = load volatile i32, i32* %OTYPER, align 4, !dbg !8532, !tbaa !8527
  %or32 = or i32 %conv30, %9, !dbg !8532
  store volatile i32 %or32, i32* %OTYPER, align 4, !dbg !8532, !tbaa !8527
  br label %if.end, !dbg !8533

if.end:                                           ; preds = %if.then11, %if.then
  %shl36 = shl i32 3, %mul, !dbg !8534
  %neg37 = xor i32 %shl36, -1, !dbg !8535
  %10 = load volatile i32, i32* %PUPDR, align 4, !dbg !8536, !tbaa !8537
  %and38 = and i32 %10, %neg37, !dbg !8536
  store volatile i32 %and38, i32* %PUPDR, align 4, !dbg !8536, !tbaa !8537
  %11 = load i32, i32* %GPIO_PuPd, align 4, !dbg !8538, !tbaa !8240
  %shl40 = shl i32 %11, %mul, !dbg !8539
  %12 = load volatile i32, i32* %PUPDR, align 4, !dbg !8540, !tbaa !8537
  %or42 = or i32 %12, %shl40, !dbg !8540
  store volatile i32 %or42, i32* %PUPDR, align 4, !dbg !8540, !tbaa !8537
  br label %for.inc, !dbg !8541

for.inc:                                          ; preds = %if.end, %for.body
  %inc = add nuw nsw i32 %pinpos.071, 1, !dbg !8542
  call void @llvm.dbg.value(metadata i32 %inc, metadata !8494, metadata !DIExpression()), !dbg !8497
  %exitcond.not = icmp eq i32 %inc, 16, !dbg !8543
  br i1 %exitcond.not, label %for.end, label %for.body, !dbg !8498, !llvm.loop !8544

for.end:                                          ; preds = %for.inc
  ret void, !dbg !8546
}

; Function Attrs: nofree norecurse nounwind willreturn writeonly
define dso_local void @GPIO_StructInit(%struct.SEC_INFO* nocapture %GPIO_InitStruct) local_unnamed_addr #7 section ".csection5" !dbg !8547 {
entry:
  call void @llvm.dbg.value(metadata %struct.SEC_INFO* %GPIO_InitStruct, metadata !8551, metadata !DIExpression()), !dbg !8552
  %GPIO_Pin = getelementptr inbounds %struct.SEC_INFO, %struct.SEC_INFO* %GPIO_InitStruct, i32 0, i32 0, !dbg !8553
  store i32 65535, i32* %GPIO_Pin, align 4, !dbg !8554, !tbaa !8230
  %GPIO_Mode = getelementptr inbounds %struct.SEC_INFO, %struct.SEC_INFO* %GPIO_InitStruct, i32 0, i32 1, !dbg !8555
  %0 = bitcast i32* %GPIO_Mode to i8*, !dbg !8556
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 dereferenceable(16) %0, i8 0, i64 16, i1 false), !dbg !8557
  ret void, !dbg !8556
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly %0, i8 %1, i64 %2, i1 immarg %3) #2 section ".csection13"

; Function Attrs: nofree nounwind willreturn
define dso_local void @GPIO_PinLockConfig(%struct.GPIO_TypeDef* %GPIOx, i16 zeroext %GPIO_Pin) local_unnamed_addr #13 section ".csection5" !dbg !8558 {
entry:
  %tmp = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %GPIOx, metadata !8562, metadata !DIExpression()), !dbg !8565
  call void @llvm.dbg.value(metadata i16 %GPIO_Pin, metadata !8563, metadata !DIExpression()), !dbg !8565
  %tmp.0.tmp.0.tmp.0..sroa_cast = bitcast i32* %tmp to i8*, !dbg !8566
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %tmp.0.tmp.0.tmp.0..sroa_cast), !dbg !8566
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !8564, metadata !DIExpression()), !dbg !8567
  store volatile i32 65536, i32* %tmp, align 4, !dbg !8567, !tbaa !1105
  %conv = zext i16 %GPIO_Pin to i32, !dbg !8568
  %tmp.0.tmp.0.tmp.0. = load volatile i32, i32* %tmp, align 4, !dbg !8569, !tbaa !1105
  %or = or i32 %tmp.0.tmp.0.tmp.0., %conv, !dbg !8569
  store volatile i32 %or, i32* %tmp, align 4, !dbg !8569, !tbaa !1105
  %tmp.0.tmp.0.tmp.0.6 = load volatile i32, i32* %tmp, align 4, !dbg !8570, !tbaa !1105
  %LCKR = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %GPIOx, i32 0, i32 8, !dbg !8571
  store volatile i32 %tmp.0.tmp.0.tmp.0.6, i32* %LCKR, align 4, !dbg !8572, !tbaa !8573
  store volatile i32 %conv, i32* %LCKR, align 4, !dbg !8574, !tbaa !8573
  %tmp.0.tmp.0.tmp.0.7 = load volatile i32, i32* %tmp, align 4, !dbg !8575, !tbaa !1105
  store volatile i32 %tmp.0.tmp.0.tmp.0.7, i32* %LCKR, align 4, !dbg !8576, !tbaa !8573
  %0 = load volatile i32, i32* %LCKR, align 4, !dbg !8577, !tbaa !8573
  store volatile i32 %0, i32* %tmp, align 4, !dbg !8578, !tbaa !1105
  %1 = load volatile i32, i32* %LCKR, align 4, !dbg !8579, !tbaa !8573
  store volatile i32 %1, i32* %tmp, align 4, !dbg !8580, !tbaa !1105
  %tmp.0.tmp.0.tmp.0..sroa_cast15 = bitcast i32* %tmp to i8*, !dbg !8581
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %tmp.0.tmp.0.tmp.0..sroa_cast15), !dbg !8581
  ret void, !dbg !8581
}

; Function Attrs: nofree norecurse nounwind willreturn
define dso_local zeroext i8 @GPIO_ReadInputDataBit(%struct.GPIO_TypeDef* %GPIOx, i16 zeroext %GPIO_Pin) local_unnamed_addr #3 section ".csection5" !dbg !8582 {
entry:
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %GPIOx, metadata !8586, metadata !DIExpression()), !dbg !8589
  call void @llvm.dbg.value(metadata i16 %GPIO_Pin, metadata !8587, metadata !DIExpression()), !dbg !8589
  call void @llvm.dbg.value(metadata i8 0, metadata !8588, metadata !DIExpression()), !dbg !8589
  %IDR = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %GPIOx, i32 0, i32 4, !dbg !8590
  %0 = load volatile i32, i32* %IDR, align 4, !dbg !8590, !tbaa !8592
  %conv = zext i16 %GPIO_Pin to i32, !dbg !8593
  %and = and i32 %0, %conv, !dbg !8594
  %cmp.not = icmp ne i32 %and, 0, !dbg !8595
  %bitstatus.0 = zext i1 %cmp.not to i8, !dbg !8596
  call void @llvm.dbg.value(metadata i8 %bitstatus.0, metadata !8588, metadata !DIExpression()), !dbg !8589
  ret i8 %bitstatus.0, !dbg !8597
}

; Function Attrs: nofree norecurse nounwind willreturn
define dso_local zeroext i16 @GPIO_ReadInputData(%struct.GPIO_TypeDef* %GPIOx) local_unnamed_addr #3 section ".csection5" !dbg !8598 {
entry:
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %GPIOx, metadata !8602, metadata !DIExpression()), !dbg !8603
  %IDR = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %GPIOx, i32 0, i32 4, !dbg !8604
  %0 = load volatile i32, i32* %IDR, align 4, !dbg !8604, !tbaa !8592
  %conv = trunc i32 %0 to i16, !dbg !8605
  ret i16 %conv, !dbg !8606
}

; Function Attrs: nofree norecurse nounwind willreturn
define dso_local zeroext i8 @GPIO_ReadOutputDataBit(%struct.GPIO_TypeDef* %GPIOx, i16 zeroext %GPIO_Pin) local_unnamed_addr #3 section ".csection5" !dbg !8607 {
entry:
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %GPIOx, metadata !8609, metadata !DIExpression()), !dbg !8612
  call void @llvm.dbg.value(metadata i16 %GPIO_Pin, metadata !8610, metadata !DIExpression()), !dbg !8612
  call void @llvm.dbg.value(metadata i8 0, metadata !8611, metadata !DIExpression()), !dbg !8612
  %ODR = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %GPIOx, i32 0, i32 5, !dbg !8613
  %0 = load volatile i32, i32* %ODR, align 4, !dbg !8613, !tbaa !7977
  %conv = zext i16 %GPIO_Pin to i32, !dbg !8615
  %and = and i32 %0, %conv, !dbg !8616
  %cmp.not = icmp ne i32 %and, 0, !dbg !8617
  %bitstatus.0 = zext i1 %cmp.not to i8, !dbg !8618
  call void @llvm.dbg.value(metadata i8 %bitstatus.0, metadata !8611, metadata !DIExpression()), !dbg !8612
  ret i8 %bitstatus.0, !dbg !8619
}

; Function Attrs: nofree norecurse nounwind willreturn
define dso_local zeroext i16 @GPIO_ReadOutputData(%struct.GPIO_TypeDef* %GPIOx) local_unnamed_addr #3 section ".csection5" !dbg !8620 {
entry:
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %GPIOx, metadata !8622, metadata !DIExpression()), !dbg !8623
  %ODR = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %GPIOx, i32 0, i32 5, !dbg !8624
  %0 = load volatile i32, i32* %ODR, align 4, !dbg !8624, !tbaa !7977
  %conv = trunc i32 %0 to i16, !dbg !8625
  ret i16 %conv, !dbg !8626
}

; Function Attrs: nofree norecurse nounwind willreturn
define dso_local void @GPIO_SetBits(%struct.GPIO_TypeDef* %GPIOx, i16 zeroext %GPIO_Pin) local_unnamed_addr #3 section ".csection5" !dbg !8627 {
entry:
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %GPIOx, metadata !8629, metadata !DIExpression()), !dbg !8631
  call void @llvm.dbg.value(metadata i16 %GPIO_Pin, metadata !8630, metadata !DIExpression()), !dbg !8631
  %BSRRL = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %GPIOx, i32 0, i32 6, !dbg !8632
  store volatile i16 %GPIO_Pin, i16* %BSRRL, align 4, !dbg !8633, !tbaa !8255
  ret void, !dbg !8634
}

; Function Attrs: nofree norecurse nounwind willreturn
define dso_local void @GPIO_ResetBits(%struct.GPIO_TypeDef* %GPIOx, i16 zeroext %GPIO_Pin) local_unnamed_addr #3 section ".csection5" !dbg !8635 {
entry:
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %GPIOx, metadata !8637, metadata !DIExpression()), !dbg !8639
  call void @llvm.dbg.value(metadata i16 %GPIO_Pin, metadata !8638, metadata !DIExpression()), !dbg !8639
  %BSRRH = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %GPIOx, i32 0, i32 7, !dbg !8640
  store volatile i16 %GPIO_Pin, i16* %BSRRH, align 2, !dbg !8641, !tbaa !8265
  ret void, !dbg !8642
}

; Function Attrs: nofree norecurse nounwind willreturn
define dso_local void @GPIO_WriteBit(%struct.GPIO_TypeDef* %GPIOx, i16 zeroext %GPIO_Pin, i32 %BitVal) local_unnamed_addr #3 section ".csection5" !dbg !8643 {
entry:
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %GPIOx, metadata !8648, metadata !DIExpression()), !dbg !8651
  call void @llvm.dbg.value(metadata i16 %GPIO_Pin, metadata !8649, metadata !DIExpression()), !dbg !8651
  call void @llvm.dbg.value(metadata i32 %BitVal, metadata !8650, metadata !DIExpression()), !dbg !8651
  %cmp.not = icmp eq i32 %BitVal, 0, !dbg !8652
  br i1 %cmp.not, label %if.else, label %if.then, !dbg !8654

if.then:                                          ; preds = %entry
  %BSRRL = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %GPIOx, i32 0, i32 6, !dbg !8655
  store volatile i16 %GPIO_Pin, i16* %BSRRL, align 4, !dbg !8657, !tbaa !8255
  br label %if.end, !dbg !8658

if.else:                                          ; preds = %entry
  %BSRRH = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %GPIOx, i32 0, i32 7, !dbg !8659
  store volatile i16 %GPIO_Pin, i16* %BSRRH, align 2, !dbg !8661, !tbaa !8265
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !8662
}

; Function Attrs: nofree norecurse nounwind willreturn
define dso_local void @GPIO_Write(%struct.GPIO_TypeDef* %GPIOx, i16 zeroext %PortVal) local_unnamed_addr #3 section ".csection5" !dbg !8663 {
entry:
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %GPIOx, metadata !8665, metadata !DIExpression()), !dbg !8667
  call void @llvm.dbg.value(metadata i16 %PortVal, metadata !8666, metadata !DIExpression()), !dbg !8667
  %conv = zext i16 %PortVal to i32, !dbg !8668
  %ODR = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %GPIOx, i32 0, i32 5, !dbg !8669
  store volatile i32 %conv, i32* %ODR, align 4, !dbg !8670, !tbaa !7977
  ret void, !dbg !8671
}

; Function Attrs: nofree norecurse nounwind willreturn
define dso_local void @GPIO_ToggleBits(%struct.GPIO_TypeDef* %GPIOx, i16 zeroext %GPIO_Pin) local_unnamed_addr #3 section ".csection5" !dbg !8672 {
entry:
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %GPIOx, metadata !8674, metadata !DIExpression()), !dbg !8676
  call void @llvm.dbg.value(metadata i16 %GPIO_Pin, metadata !8675, metadata !DIExpression()), !dbg !8676
  %conv = zext i16 %GPIO_Pin to i32, !dbg !8677
  %ODR = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %GPIOx, i32 0, i32 5, !dbg !8678
  %0 = load volatile i32, i32* %ODR, align 4, !dbg !8679, !tbaa !7977
  %xor = xor i32 %0, %conv, !dbg !8679
  store volatile i32 %xor, i32* %ODR, align 4, !dbg !8679, !tbaa !7977
  ret void, !dbg !8680
}

; Function Attrs: nofree norecurse nounwind willreturn
define dso_local void @GPIO_PinAFConfig(%struct.GPIO_TypeDef* %GPIOx, i16 zeroext %GPIO_PinSource, i8 zeroext %GPIO_AF) local_unnamed_addr #3 section ".csection5" !dbg !8681 {
entry:
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %GPIOx, metadata !8685, metadata !DIExpression()), !dbg !8690
  call void @llvm.dbg.value(metadata i16 %GPIO_PinSource, metadata !8686, metadata !DIExpression()), !dbg !8690
  call void @llvm.dbg.value(metadata i8 %GPIO_AF, metadata !8687, metadata !DIExpression()), !dbg !8690
  call void @llvm.dbg.value(metadata i32 0, metadata !8688, metadata !DIExpression()), !dbg !8690
  call void @llvm.dbg.value(metadata i32 0, metadata !8689, metadata !DIExpression()), !dbg !8690
  %conv = zext i8 %GPIO_AF to i32, !dbg !8691
  %conv1 = zext i16 %GPIO_PinSource to i32, !dbg !8692
  %and = shl nuw nsw i32 %conv1, 2, !dbg !8693
  %mul = and i32 %and, 28, !dbg !8693
  %shl = shl i32 %conv, %mul, !dbg !8694
  call void @llvm.dbg.value(metadata i32 %shl, metadata !8688, metadata !DIExpression()), !dbg !8690
  %shl5 = shl i32 15, %mul, !dbg !8695
  %neg = xor i32 %shl5, -1, !dbg !8696
  %0 = lshr i32 %conv1, 3, !dbg !8697
  %arrayidx = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %GPIOx, i32 0, i32 9, i32 %0, !dbg !8698
  %1 = load volatile i32, i32* %arrayidx, align 4, !dbg !8699, !tbaa !1105
  %and7 = and i32 %1, %neg, !dbg !8699
  store volatile i32 %and7, i32* %arrayidx, align 4, !dbg !8699, !tbaa !1105
  %2 = load volatile i32, i32* %arrayidx, align 4, !dbg !8700, !tbaa !1105
  %or = or i32 %2, %shl, !dbg !8701
  call void @llvm.dbg.value(metadata i32 %or, metadata !8689, metadata !DIExpression()), !dbg !8690
  store volatile i32 %or, i32* %arrayidx, align 4, !dbg !8702, !tbaa !1105
  ret void, !dbg !8703
}

; Function Attrs: nofree norecurse nounwind willreturn
define dso_local void @RCC_DeInit() local_unnamed_addr #3 section ".csection7" !dbg !8704 {
entry:
  %0 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8705, !tbaa !7735
  %or = or i32 %0, 1, !dbg !8705
  store volatile i32 %or, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8705, !tbaa !7735
  store volatile i32 0, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8706, !tbaa !7738
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8707, !tbaa !7735
  %and = and i32 %1, -17367041, !dbg !8707
  store volatile i32 %and, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8707, !tbaa !7735
  store volatile i32 603992080, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8708, !tbaa !7741
  %2 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8709, !tbaa !7735
  %and1 = and i32 %2, -262145, !dbg !8709
  store volatile i32 %and1, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8709, !tbaa !7735
  store volatile i32 0, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !8710, !tbaa !7744
  ret void, !dbg !8711
}

; Function Attrs: nofree norecurse nounwind willreturn
define dso_local void @RCC_HSEConfig(i8 zeroext %RCC_HSE) local_unnamed_addr #3 section ".csection7" !dbg !8712 {
entry:
  call void @llvm.dbg.value(metadata i8 %RCC_HSE, metadata !8716, metadata !DIExpression()), !dbg !8717
  store volatile i8 0, i8* inttoptr (i32 1073887234 to i8*), align 2, !dbg !8718, !tbaa !1246
  store volatile i8 %RCC_HSE, i8* inttoptr (i32 1073887234 to i8*), align 2, !dbg !8719, !tbaa !1246
  ret void, !dbg !8720
}

; Function Attrs: nofree nounwind
define dso_local i32 @RCC_WaitForHSEStartUp() local_unnamed_addr #16 section ".csection7" !dbg !8721 {
entry:
  %startupcounter = alloca i32, align 4
  %startupcounter.0.startupcounter.0.startupcounter.0..sroa_cast = bitcast i32* %startupcounter to i8*, !dbg !8730
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %startupcounter.0.startupcounter.0.startupcounter.0..sroa_cast), !dbg !8730
  call void @llvm.dbg.declare(metadata i32* %startupcounter, metadata !8726, metadata !DIExpression()), !dbg !8731
  store volatile i32 0, i32* %startupcounter, align 4, !dbg !8731, !tbaa !1105
  call void @llvm.dbg.value(metadata i32 0, metadata !8727, metadata !DIExpression()), !dbg !8732
  call void @llvm.dbg.value(metadata i32 0, metadata !8728, metadata !DIExpression()), !dbg !8732
  br label %do.body, !dbg !8733

do.body:                                          ; preds = %do.body, %entry
  %call = call i32 @RCC_GetFlagStatus(i8 zeroext 49), !dbg !8734
  call void @llvm.dbg.value(metadata i32 %call, metadata !8728, metadata !DIExpression()), !dbg !8732
  %startupcounter.0.startupcounter.0.startupcounter.0. = load volatile i32, i32* %startupcounter, align 4, !dbg !8736, !tbaa !1105
  %inc = add i32 %startupcounter.0.startupcounter.0.startupcounter.0., 1, !dbg !8736
  store volatile i32 %inc, i32* %startupcounter, align 4, !dbg !8736, !tbaa !1105
  %startupcounter.0.startupcounter.0.startupcounter.0.6 = load volatile i32, i32* %startupcounter, align 4, !dbg !8737, !tbaa !1105
  %cmp = icmp ne i32 %startupcounter.0.startupcounter.0.startupcounter.0.6, 1280, !dbg !8738
  %cmp1 = icmp eq i32 %call, 0, !dbg !8739
  %0 = and i1 %cmp1, %cmp, !dbg !8739
  br i1 %0, label %do.body, label %do.end, !dbg !8740, !llvm.loop !8741

do.end:                                           ; preds = %do.body
  %call2 = call i32 @RCC_GetFlagStatus(i8 zeroext 49), !dbg !8743
  %cmp3.not = icmp ne i32 %call2, 0, !dbg !8745
  %status.0 = zext i1 %cmp3.not to i32, !dbg !8746
  call void @llvm.dbg.value(metadata i32 %status.0, metadata !8727, metadata !DIExpression()), !dbg !8732
  %startupcounter.0.startupcounter.0.startupcounter.0..sroa_cast9 = bitcast i32* %startupcounter to i8*, !dbg !8747
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %startupcounter.0.startupcounter.0.startupcounter.0..sroa_cast9), !dbg !8747
  ret i32 %status.0, !dbg !8748
}

; Function Attrs: nofree norecurse nounwind willreturn
define dso_local i32 @RCC_GetFlagStatus(i8 zeroext %RCC_FLAG) local_unnamed_addr #3 section ".csection7" !dbg !8749 {
entry:
  call void @llvm.dbg.value(metadata i8 %RCC_FLAG, metadata !8753, metadata !DIExpression()), !dbg !8757
  call void @llvm.dbg.value(metadata i32 0, metadata !8754, metadata !DIExpression()), !dbg !8757
  call void @llvm.dbg.value(metadata i32 0, metadata !8755, metadata !DIExpression()), !dbg !8757
  call void @llvm.dbg.value(metadata i32 0, metadata !8756, metadata !DIExpression()), !dbg !8757
  %conv = zext i8 %RCC_FLAG to i32, !dbg !8758
  %0 = lshr i32 %conv, 5, !dbg !8759
  call void @llvm.dbg.value(metadata i32 %0, metadata !8754, metadata !DIExpression()), !dbg !8757
  switch i32 %0, label %if.else5 [
    i32 1, label %if.end6
    i32 2, label %if.then4
  ], !dbg !8760

if.then4:                                         ; preds = %entry
  call void @llvm.dbg.value(metadata i32 undef, metadata !8755, metadata !DIExpression()), !dbg !8757
  br label %if.end6, !dbg !8761

if.else5:                                         ; preds = %entry
  call void @llvm.dbg.value(metadata i32 undef, metadata !8755, metadata !DIExpression()), !dbg !8757
  br label %if.end6

if.end6:                                          ; preds = %if.else5, %if.then4, %entry
  %statusreg.0.in = phi i32* [ inttoptr (i32 1073887344 to i32*), %if.then4 ], [ inttoptr (i32 1073887348 to i32*), %if.else5 ], [ inttoptr (i32 1073887232 to i32*), %entry ]
  %statusreg.0 = load volatile i32, i32* %statusreg.0.in, align 4, !dbg !8765, !tbaa !1105
  call void @llvm.dbg.value(metadata i32 %statusreg.0, metadata !8755, metadata !DIExpression()), !dbg !8757
  %and = and i32 %conv, 31, !dbg !8766
  call void @llvm.dbg.value(metadata i32 %and, metadata !8754, metadata !DIExpression()), !dbg !8757
  %shl = shl i32 1, %and, !dbg !8767
  %and8 = and i32 %statusreg.0, %shl, !dbg !8769
  %cmp9.not = icmp ne i32 %and8, 0, !dbg !8770
  %bitstatus.0 = zext i1 %cmp9.not to i32, !dbg !8771
  call void @llvm.dbg.value(metadata i32 %bitstatus.0, metadata !8756, metadata !DIExpression()), !dbg !8757
  ret i32 %bitstatus.0, !dbg !8772
}

; Function Attrs: nofree norecurse nounwind willreturn
define dso_local void @RCC_AdjustHSICalibrationValue(i8 zeroext %HSICalibrationValue) local_unnamed_addr #3 section ".csection7" !dbg !8773 {
entry:
  call void @llvm.dbg.value(metadata i8 %HSICalibrationValue, metadata !8775, metadata !DIExpression()), !dbg !8777
  call void @llvm.dbg.value(metadata i32 0, metadata !8776, metadata !DIExpression()), !dbg !8777
  %0 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8778, !tbaa !7735
  call void @llvm.dbg.value(metadata i32 %0, metadata !8776, metadata !DIExpression()), !dbg !8777
  %and = and i32 %0, -249, !dbg !8779
  call void @llvm.dbg.value(metadata i32 %and, metadata !8776, metadata !DIExpression()), !dbg !8777
  %conv = zext i8 %HSICalibrationValue to i32, !dbg !8780
  %shl = shl nuw nsw i32 %conv, 3, !dbg !8781
  %or = or i32 %and, %shl, !dbg !8782
  call void @llvm.dbg.value(metadata i32 %or, metadata !8776, metadata !DIExpression()), !dbg !8777
  store volatile i32 %or, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8783, !tbaa !7735
  ret void, !dbg !8784
}

; Function Attrs: nofree norecurse nounwind willreturn
define dso_local void @RCC_HSICmd(i32 %NewState) local_unnamed_addr #3 section ".csection7" !dbg !8785 {
entry:
  call void @llvm.dbg.value(metadata i32 %NewState, metadata !8789, metadata !DIExpression()), !dbg !8790
  store volatile i32 %NewState, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !8791, !tbaa !1105
  ret void, !dbg !8792
}

; Function Attrs: nofree norecurse nounwind willreturn
define dso_local void @RCC_LSEConfig(i8 zeroext %RCC_LSE) local_unnamed_addr #3 section ".csection7" !dbg !8793 {
entry:
  call void @llvm.dbg.value(metadata i8 %RCC_LSE, metadata !8795, metadata !DIExpression()), !dbg !8796
  store volatile i8 0, i8* inttoptr (i32 1073887344 to i8*), align 16, !dbg !8797, !tbaa !1246
  store volatile i8 0, i8* inttoptr (i32 1073887344 to i8*), align 16, !dbg !8798, !tbaa !1246
  switch i8 %RCC_LSE, label %sw.epilog [
    i8 1, label %sw.bb
    i8 4, label %sw.bb1
  ], !dbg !8799

sw.bb:                                            ; preds = %entry
  store volatile i8 1, i8* inttoptr (i32 1073887344 to i8*), align 16, !dbg !8800, !tbaa !1246
  br label %sw.epilog, !dbg !8802

sw.bb1:                                           ; preds = %entry
  store volatile i8 5, i8* inttoptr (i32 1073887344 to i8*), align 16, !dbg !8803, !tbaa !1246
  br label %sw.epilog, !dbg !8804

sw.epilog:                                        ; preds = %sw.bb1, %sw.bb, %entry
  ret void, !dbg !8805
}

; Function Attrs: nofree norecurse nounwind willreturn
define dso_local void @RCC_LSICmd(i32 %NewState) local_unnamed_addr #3 section ".csection7" !dbg !8806 {
entry:
  call void @llvm.dbg.value(metadata i32 %NewState, metadata !8808, metadata !DIExpression()), !dbg !8809
  store volatile i32 %NewState, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !8810, !tbaa !1105
  ret void, !dbg !8811
}

; Function Attrs: nofree norecurse nounwind willreturn
define dso_local void @RCC_PLLConfig(i32 %RCC_PLLSource, i32 %PLLM, i32 %PLLN, i32 %PLLP, i32 %PLLQ) local_unnamed_addr #3 section ".csection7" !dbg !8812 {
entry:
  call void @llvm.dbg.value(metadata i32 %RCC_PLLSource, metadata !8816, metadata !DIExpression()), !dbg !8821
  call void @llvm.dbg.value(metadata i32 %PLLM, metadata !8817, metadata !DIExpression()), !dbg !8821
  call void @llvm.dbg.value(metadata i32 %PLLN, metadata !8818, metadata !DIExpression()), !dbg !8821
  call void @llvm.dbg.value(metadata i32 %PLLP, metadata !8819, metadata !DIExpression()), !dbg !8821
  call void @llvm.dbg.value(metadata i32 %PLLQ, metadata !8820, metadata !DIExpression()), !dbg !8821
  %shl = shl i32 %PLLN, 6, !dbg !8822
  %0 = shl i32 %PLLP, 15, !dbg !8823
  %1 = add i32 %0, -65536, !dbg !8823
  %shl1 = and i32 %1, -65536, !dbg !8823
  %shl4 = shl i32 %PLLQ, 24, !dbg !8824
  %or = or i32 %PLLM, %RCC_PLLSource, !dbg !8825
  %or2 = or i32 %or, %shl, !dbg !8826
  %or3 = or i32 %or2, %shl4, !dbg !8827
  %or5 = or i32 %or3, %shl1, !dbg !8828
  store volatile i32 %or5, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8829, !tbaa !7741
  ret void, !dbg !8830
}

; Function Attrs: nofree norecurse nounwind willreturn
define dso_local void @RCC_PLLCmd(i32 %NewState) local_unnamed_addr #3 section ".csection7" !dbg !8831 {
entry:
  call void @llvm.dbg.value(metadata i32 %NewState, metadata !8833, metadata !DIExpression()), !dbg !8834
  store volatile i32 %NewState, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !8835, !tbaa !1105
  ret void, !dbg !8836
}

; Function Attrs: nofree norecurse nounwind willreturn
define dso_local void @RCC_PLLI2SConfig(i32 %PLLI2SN, i32 %PLLI2SR) local_unnamed_addr #3 section ".csection7" !dbg !8837 {
entry:
  call void @llvm.dbg.value(metadata i32 %PLLI2SN, metadata !8839, metadata !DIExpression()), !dbg !8841
  call void @llvm.dbg.value(metadata i32 %PLLI2SR, metadata !8840, metadata !DIExpression()), !dbg !8841
  %shl = shl i32 %PLLI2SN, 6, !dbg !8842
  %shl1 = shl i32 %PLLI2SR, 28, !dbg !8843
  %or = or i32 %shl1, %shl, !dbg !8844
  store volatile i32 %or, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !8845, !tbaa !8846
  ret void, !dbg !8847
}

; Function Attrs: nofree norecurse nounwind willreturn
define dso_local void @RCC_PLLI2SCmd(i32 %NewState) local_unnamed_addr #3 section ".csection7" !dbg !8848 {
entry:
  call void @llvm.dbg.value(metadata i32 %NewState, metadata !8850, metadata !DIExpression()), !dbg !8851
  store volatile i32 %NewState, i32* inttoptr (i32 1111949416 to i32*), align 8, !dbg !8852, !tbaa !1105
  ret void, !dbg !8853
}

; Function Attrs: nofree norecurse nounwind willreturn
define dso_local void @RCC_ClockSecuritySystemCmd(i32 %NewState) local_unnamed_addr #3 section ".csection7" !dbg !8854 {
entry:
  call void @llvm.dbg.value(metadata i32 %NewState, metadata !8856, metadata !DIExpression()), !dbg !8857
  store volatile i32 %NewState, i32* inttoptr (i32 1111949388 to i32*), align 4, !dbg !8858, !tbaa !1105
  ret void, !dbg !8859
}

; Function Attrs: nofree norecurse nounwind willreturn
define dso_local void @RCC_MCO1Config(i32 %RCC_MCO1Source, i32 %RCC_MCO1Div) local_unnamed_addr #3 section ".csection7" !dbg !8860 {
entry:
  call void @llvm.dbg.value(metadata i32 %RCC_MCO1Source, metadata !8862, metadata !DIExpression()), !dbg !8865
  call void @llvm.dbg.value(metadata i32 %RCC_MCO1Div, metadata !8863, metadata !DIExpression()), !dbg !8865
  call void @llvm.dbg.value(metadata i32 0, metadata !8864, metadata !DIExpression()), !dbg !8865
  %0 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8866, !tbaa !7738
  call void @llvm.dbg.value(metadata i32 %0, metadata !8864, metadata !DIExpression()), !dbg !8865
  %and = and i32 %0, -123731969, !dbg !8867
  call void @llvm.dbg.value(metadata i32 %and, metadata !8864, metadata !DIExpression()), !dbg !8865
  %or = or i32 %RCC_MCO1Div, %RCC_MCO1Source, !dbg !8868
  %or1 = or i32 %or, %and, !dbg !8869
  call void @llvm.dbg.value(metadata i32 %or1, metadata !8864, metadata !DIExpression()), !dbg !8865
  store volatile i32 %or1, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8870, !tbaa !7738
  ret void, !dbg !8871
}

; Function Attrs: nofree norecurse nounwind willreturn
define dso_local void @RCC_MCO2Config(i32 %RCC_MCO2Source, i32 %RCC_MCO2Div) local_unnamed_addr #3 section ".csection7" !dbg !8872 {
entry:
  call void @llvm.dbg.value(metadata i32 %RCC_MCO2Source, metadata !8874, metadata !DIExpression()), !dbg !8877
  call void @llvm.dbg.value(metadata i32 %RCC_MCO2Div, metadata !8875, metadata !DIExpression()), !dbg !8877
  call void @llvm.dbg.value(metadata i32 0, metadata !8876, metadata !DIExpression()), !dbg !8877
  %0 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8878, !tbaa !7738
  call void @llvm.dbg.value(metadata i32 %0, metadata !8876, metadata !DIExpression()), !dbg !8877
  %and = and i32 %0, 134217727, !dbg !8879
  call void @llvm.dbg.value(metadata i32 %and, metadata !8876, metadata !DIExpression()), !dbg !8877
  %or = or i32 %RCC_MCO2Div, %RCC_MCO2Source, !dbg !8880
  %or1 = or i32 %or, %and, !dbg !8881
  call void @llvm.dbg.value(metadata i32 %or1, metadata !8876, metadata !DIExpression()), !dbg !8877
  store volatile i32 %or1, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8882, !tbaa !7738
  ret void, !dbg !8883
}

; Function Attrs: nofree norecurse nounwind willreturn
define dso_local void @RCC_SYSCLKConfig(i32 %RCC_SYSCLKSource) local_unnamed_addr #3 section ".csection7" !dbg !8884 {
entry:
  call void @llvm.dbg.value(metadata i32 %RCC_SYSCLKSource, metadata !8886, metadata !DIExpression()), !dbg !8888
  call void @llvm.dbg.value(metadata i32 0, metadata !8887, metadata !DIExpression()), !dbg !8888
  %0 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8889, !tbaa !7738
  call void @llvm.dbg.value(metadata i32 %0, metadata !8887, metadata !DIExpression()), !dbg !8888
  %and = and i32 %0, -4, !dbg !8890
  call void @llvm.dbg.value(metadata i32 %and, metadata !8887, metadata !DIExpression()), !dbg !8888
  %or = or i32 %and, %RCC_SYSCLKSource, !dbg !8891
  call void @llvm.dbg.value(metadata i32 %or, metadata !8887, metadata !DIExpression()), !dbg !8888
  store volatile i32 %or, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8892, !tbaa !7738
  ret void, !dbg !8893
}

; Function Attrs: nofree norecurse nounwind willreturn
define dso_local zeroext i8 @RCC_GetSYSCLKSource() local_unnamed_addr #3 section ".csection7" !dbg !8894 {
entry:
  %0 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8897, !tbaa !7738
  %1 = trunc i32 %0 to i8, !dbg !8898
  %conv = and i8 %1, 12, !dbg !8898
  ret i8 %conv, !dbg !8899
}

; Function Attrs: nofree norecurse nounwind willreturn
define dso_local void @RCC_HCLKConfig(i32 %RCC_SYSCLK) local_unnamed_addr #3 section ".csection7" !dbg !8900 {
entry:
  call void @llvm.dbg.value(metadata i32 %RCC_SYSCLK, metadata !8902, metadata !DIExpression()), !dbg !8904
  call void @llvm.dbg.value(metadata i32 0, metadata !8903, metadata !DIExpression()), !dbg !8904
  %0 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8905, !tbaa !7738
  call void @llvm.dbg.value(metadata i32 %0, metadata !8903, metadata !DIExpression()), !dbg !8904
  %and = and i32 %0, -241, !dbg !8906
  call void @llvm.dbg.value(metadata i32 %and, metadata !8903, metadata !DIExpression()), !dbg !8904
  %or = or i32 %and, %RCC_SYSCLK, !dbg !8907
  call void @llvm.dbg.value(metadata i32 %or, metadata !8903, metadata !DIExpression()), !dbg !8904
  store volatile i32 %or, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8908, !tbaa !7738
  ret void, !dbg !8909
}

; Function Attrs: nofree norecurse nounwind willreturn
define dso_local void @RCC_PCLK1Config(i32 %RCC_HCLK) local_unnamed_addr #3 section ".csection7" !dbg !8910 {
entry:
  call void @llvm.dbg.value(metadata i32 %RCC_HCLK, metadata !8912, metadata !DIExpression()), !dbg !8914
  call void @llvm.dbg.value(metadata i32 0, metadata !8913, metadata !DIExpression()), !dbg !8914
  %0 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8915, !tbaa !7738
  call void @llvm.dbg.value(metadata i32 %0, metadata !8913, metadata !DIExpression()), !dbg !8914
  %and = and i32 %0, -7169, !dbg !8916
  call void @llvm.dbg.value(metadata i32 %and, metadata !8913, metadata !DIExpression()), !dbg !8914
  %or = or i32 %and, %RCC_HCLK, !dbg !8917
  call void @llvm.dbg.value(metadata i32 %or, metadata !8913, metadata !DIExpression()), !dbg !8914
  store volatile i32 %or, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8918, !tbaa !7738
  ret void, !dbg !8919
}

; Function Attrs: nofree norecurse nounwind willreturn
define dso_local void @RCC_PCLK2Config(i32 %RCC_HCLK) local_unnamed_addr #3 section ".csection7" !dbg !8920 {
entry:
  call void @llvm.dbg.value(metadata i32 %RCC_HCLK, metadata !8922, metadata !DIExpression()), !dbg !8924
  call void @llvm.dbg.value(metadata i32 0, metadata !8923, metadata !DIExpression()), !dbg !8924
  %0 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8925, !tbaa !7738
  call void @llvm.dbg.value(metadata i32 %0, metadata !8923, metadata !DIExpression()), !dbg !8924
  %and = and i32 %0, -57345, !dbg !8926
  call void @llvm.dbg.value(metadata i32 %and, metadata !8923, metadata !DIExpression()), !dbg !8924
  %shl = shl i32 %RCC_HCLK, 3, !dbg !8927
  %or = or i32 %and, %shl, !dbg !8928
  call void @llvm.dbg.value(metadata i32 %or, metadata !8923, metadata !DIExpression()), !dbg !8924
  store volatile i32 %or, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8929, !tbaa !7738
  ret void, !dbg !8930
}

; Function Attrs: nofree norecurse nounwind willreturn
define dso_local void @RCC_GetClocksFreq(%struct.EXTI_InitTypeDef* nocapture %RCC_Clocks) local_unnamed_addr #3 section ".csection7" !dbg !8931 {
entry:
  call void @llvm.dbg.value(metadata %struct.EXTI_InitTypeDef* %RCC_Clocks, metadata !8944, metadata !DIExpression()), !dbg !8951
  call void @llvm.dbg.value(metadata i32 0, metadata !8945, metadata !DIExpression()), !dbg !8951
  call void @llvm.dbg.value(metadata i32 0, metadata !8946, metadata !DIExpression()), !dbg !8951
  call void @llvm.dbg.value(metadata i32 0, metadata !8947, metadata !DIExpression()), !dbg !8951
  call void @llvm.dbg.value(metadata i32 2, metadata !8948, metadata !DIExpression()), !dbg !8951
  call void @llvm.dbg.value(metadata i32 0, metadata !8949, metadata !DIExpression()), !dbg !8951
  call void @llvm.dbg.value(metadata i32 2, metadata !8950, metadata !DIExpression()), !dbg !8951
  %0 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8952, !tbaa !7738
  %and = and i32 %0, 12, !dbg !8953
  call void @llvm.dbg.value(metadata i32 %and, metadata !8945, metadata !DIExpression()), !dbg !8951
  switch i32 %and, label %sw.default [
    i32 0, label %sw.bb
    i32 4, label %sw.bb1
    i32 8, label %sw.bb3
  ], !dbg !8954

sw.bb:                                            ; preds = %entry
  %SYSCLK_Frequency = getelementptr inbounds %struct.EXTI_InitTypeDef, %struct.EXTI_InitTypeDef* %RCC_Clocks, i32 0, i32 0, !dbg !8955
  store i32 16000000, i32* %SYSCLK_Frequency, align 4, !dbg !8957, !tbaa !7676
  br label %sw.epilog, !dbg !8958

sw.bb1:                                           ; preds = %entry
  %SYSCLK_Frequency2 = getelementptr inbounds %struct.EXTI_InitTypeDef, %struct.EXTI_InitTypeDef* %RCC_Clocks, i32 0, i32 0, !dbg !8959
  store i32 25000000, i32* %SYSCLK_Frequency2, align 4, !dbg !8960, !tbaa !7676
  br label %sw.epilog, !dbg !8961

sw.bb3:                                           ; preds = %entry
  %1 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8962, !tbaa !7741
  call void @llvm.dbg.value(metadata i32 %1, metadata !8949, metadata !DIExpression(DW_OP_constu, 22, DW_OP_shr, DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)), !dbg !8951
  %2 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8963, !tbaa !7741
  %and5 = and i32 %2, 63, !dbg !8964
  call void @llvm.dbg.value(metadata i32 %and5, metadata !8950, metadata !DIExpression()), !dbg !8951
  %3 = and i32 %1, 4194304, !dbg !8965
  %cmp.not = icmp eq i32 %3, 0, !dbg !8965
  br i1 %cmp.not, label %if.else, label %if.then, !dbg !8967

if.then:                                          ; preds = %sw.bb3
  %div = udiv i32 25000000, %and5, !dbg !8968
  %4 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8970, !tbaa !7741
  %and6 = lshr i32 %4, 6, !dbg !8971
  %shr7 = and i32 %and6, 511, !dbg !8971
  %mul = mul i32 %shr7, %div, !dbg !8972
  call void @llvm.dbg.value(metadata i32 %mul, metadata !8947, metadata !DIExpression()), !dbg !8951
  br label %if.end, !dbg !8973

if.else:                                          ; preds = %sw.bb3
  %div8 = udiv i32 16000000, %and5, !dbg !8974
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8976, !tbaa !7741
  %and9 = lshr i32 %5, 6, !dbg !8977
  %shr10 = and i32 %and9, 511, !dbg !8977
  %mul11 = mul i32 %shr10, %div8, !dbg !8978
  call void @llvm.dbg.value(metadata i32 %mul11, metadata !8947, metadata !DIExpression()), !dbg !8951
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %pllvco.0 = phi i32 [ %mul, %if.then ], [ %mul11, %if.else ], !dbg !8979
  call void @llvm.dbg.value(metadata i32 %pllvco.0, metadata !8947, metadata !DIExpression()), !dbg !8951
  %6 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8980, !tbaa !7741
  %7 = lshr i32 %6, 15, !dbg !8981
  %add = and i32 %7, 6, !dbg !8981
  %mul14 = add nuw nsw i32 %add, 2, !dbg !8981
  call void @llvm.dbg.value(metadata i32 %mul14, metadata !8948, metadata !DIExpression()), !dbg !8951
  %div15 = udiv i32 %pllvco.0, %mul14, !dbg !8982
  %SYSCLK_Frequency16 = getelementptr inbounds %struct.EXTI_InitTypeDef, %struct.EXTI_InitTypeDef* %RCC_Clocks, i32 0, i32 0, !dbg !8983
  store i32 %div15, i32* %SYSCLK_Frequency16, align 4, !dbg !8984, !tbaa !7676
  br label %sw.epilog, !dbg !8985

sw.default:                                       ; preds = %entry
  %SYSCLK_Frequency17 = getelementptr inbounds %struct.EXTI_InitTypeDef, %struct.EXTI_InitTypeDef* %RCC_Clocks, i32 0, i32 0, !dbg !8986
  store i32 16000000, i32* %SYSCLK_Frequency17, align 4, !dbg !8987, !tbaa !7676
  br label %sw.epilog, !dbg !8988

sw.epilog:                                        ; preds = %sw.default, %if.end, %sw.bb1, %sw.bb
  %8 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8989, !tbaa !7738
  call void @llvm.dbg.value(metadata i32 %8, metadata !8945, metadata !DIExpression(DW_OP_constu, 240, DW_OP_and, DW_OP_stack_value)), !dbg !8951
  %and18 = lshr i32 %8, 4, !dbg !8990
  %shr19 = and i32 %and18, 15, !dbg !8990
  call void @llvm.dbg.value(metadata i32 %shr19, metadata !8945, metadata !DIExpression()), !dbg !8951
  %arrayidx = getelementptr inbounds [16 x i8], [16 x i8]* @APBAHBPrescTable, i32 0, i32 %shr19, !dbg !8991
  %9 = load volatile i8, i8* %arrayidx, align 1, !dbg !8991, !tbaa !1246
  %conv = zext i8 %9 to i32, !dbg !8991
  call void @llvm.dbg.value(metadata i32 %conv, metadata !8946, metadata !DIExpression()), !dbg !8951
  %SYSCLK_Frequency20 = getelementptr inbounds %struct.EXTI_InitTypeDef, %struct.EXTI_InitTypeDef* %RCC_Clocks, i32 0, i32 0, !dbg !8992
  %10 = load i32, i32* %SYSCLK_Frequency20, align 4, !dbg !8992, !tbaa !7676
  %shr21 = lshr i32 %10, %conv, !dbg !8993
  %HCLK_Frequency = getelementptr inbounds %struct.EXTI_InitTypeDef, %struct.EXTI_InitTypeDef* %RCC_Clocks, i32 0, i32 1, !dbg !8994
  store i32 %shr21, i32* %HCLK_Frequency, align 4, !dbg !8995, !tbaa !8996
  %11 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8997, !tbaa !7738
  call void @llvm.dbg.value(metadata i32 %11, metadata !8945, metadata !DIExpression(DW_OP_constu, 7168, DW_OP_and, DW_OP_stack_value)), !dbg !8951
  %and22 = lshr i32 %11, 10, !dbg !8998
  %shr23 = and i32 %and22, 7, !dbg !8998
  call void @llvm.dbg.value(metadata i32 %shr23, metadata !8945, metadata !DIExpression()), !dbg !8951
  %arrayidx24 = getelementptr inbounds [16 x i8], [16 x i8]* @APBAHBPrescTable, i32 0, i32 %shr23, !dbg !8999
  %12 = load volatile i8, i8* %arrayidx24, align 1, !dbg !8999, !tbaa !1246
  %conv25 = zext i8 %12 to i32, !dbg !8999
  call void @llvm.dbg.value(metadata i32 %conv25, metadata !8946, metadata !DIExpression()), !dbg !8951
  %shr27 = lshr i32 %shr21, %conv25, !dbg !9000
  %PCLK1_Frequency = getelementptr inbounds %struct.EXTI_InitTypeDef, %struct.EXTI_InitTypeDef* %RCC_Clocks, i32 0, i32 2, !dbg !9001
  store i32 %shr27, i32* %PCLK1_Frequency, align 4, !dbg !9002, !tbaa !9003
  %13 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9004, !tbaa !7738
  call void @llvm.dbg.value(metadata i32 %13, metadata !8945, metadata !DIExpression(DW_OP_constu, 57344, DW_OP_and, DW_OP_stack_value)), !dbg !8951
  %and28 = lshr i32 %13, 13, !dbg !9005
  %shr29 = and i32 %and28, 7, !dbg !9005
  call void @llvm.dbg.value(metadata i32 %shr29, metadata !8945, metadata !DIExpression()), !dbg !8951
  %arrayidx30 = getelementptr inbounds [16 x i8], [16 x i8]* @APBAHBPrescTable, i32 0, i32 %shr29, !dbg !9006
  %14 = load volatile i8, i8* %arrayidx30, align 1, !dbg !9006, !tbaa !1246
  %conv31 = zext i8 %14 to i32, !dbg !9006
  call void @llvm.dbg.value(metadata i32 %conv31, metadata !8946, metadata !DIExpression()), !dbg !8951
  %shr33 = lshr i32 %shr21, %conv31, !dbg !9007
  %PCLK2_Frequency = getelementptr inbounds %struct.EXTI_InitTypeDef, %struct.EXTI_InitTypeDef* %RCC_Clocks, i32 0, i32 3, !dbg !9008
  store i32 %shr33, i32* %PCLK2_Frequency, align 4, !dbg !9009, !tbaa !9010
  ret void, !dbg !9011
}

; Function Attrs: nofree norecurse nounwind willreturn
define dso_local void @RCC_RTCCLKConfig(i32 %RCC_RTCCLKSource) local_unnamed_addr #3 section ".csection7" !dbg !9012 {
entry:
  call void @llvm.dbg.value(metadata i32 %RCC_RTCCLKSource, metadata !9014, metadata !DIExpression()), !dbg !9016
  call void @llvm.dbg.value(metadata i32 0, metadata !9015, metadata !DIExpression()), !dbg !9016
  %and = and i32 %RCC_RTCCLKSource, 768, !dbg !9017
  %cmp = icmp eq i32 %and, 768, !dbg !9019
  br i1 %cmp, label %if.then, label %if.end, !dbg !9020

if.then:                                          ; preds = %entry
  %0 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9021, !tbaa !7738
  call void @llvm.dbg.value(metadata i32 %0, metadata !9015, metadata !DIExpression()), !dbg !9016
  %and1 = and i32 %0, -2031617, !dbg !9023
  call void @llvm.dbg.value(metadata i32 %and1, metadata !9015, metadata !DIExpression()), !dbg !9016
  %and2 = and i32 %RCC_RTCCLKSource, 268434687, !dbg !9024
  %or = or i32 %and1, %and2, !dbg !9025
  call void @llvm.dbg.value(metadata i32 %or, metadata !9015, metadata !DIExpression()), !dbg !9016
  store volatile i32 %or, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9026, !tbaa !7738
  br label %if.end, !dbg !9027

if.end:                                           ; preds = %if.then, %entry
  %and3 = and i32 %RCC_RTCCLKSource, 4095, !dbg !9028
  %1 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !9029, !tbaa !9030
  %or4 = or i32 %1, %and3, !dbg !9029
  store volatile i32 %or4, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !9029, !tbaa !9030
  ret void, !dbg !9031
}

; Function Attrs: nofree norecurse nounwind willreturn
define dso_local void @RCC_RTCCLKCmd(i32 %NewState) local_unnamed_addr #3 section ".csection7" !dbg !9032 {
entry:
  call void @llvm.dbg.value(metadata i32 %NewState, metadata !9034, metadata !DIExpression()), !dbg !9035
  store volatile i32 %NewState, i32* inttoptr (i32 1111952956 to i32*), align 4, !dbg !9036, !tbaa !1105
  ret void, !dbg !9037
}

; Function Attrs: nofree norecurse nounwind willreturn
define dso_local void @RCC_BackupResetCmd(i32 %NewState) local_unnamed_addr #3 section ".csection7" !dbg !9038 {
entry:
  call void @llvm.dbg.value(metadata i32 %NewState, metadata !9040, metadata !DIExpression()), !dbg !9041
  store volatile i32 %NewState, i32* inttoptr (i32 1111952960 to i32*), align 64, !dbg !9042, !tbaa !1105
  ret void, !dbg !9043
}

; Function Attrs: nofree norecurse nounwind willreturn
define dso_local void @RCC_I2SCLKConfig(i32 %RCC_I2SCLKSource) local_unnamed_addr #3 section ".csection7" !dbg !9044 {
entry:
  call void @llvm.dbg.value(metadata i32 %RCC_I2SCLKSource, metadata !9046, metadata !DIExpression()), !dbg !9047
  store volatile i32 %RCC_I2SCLKSource, i32* inttoptr (i32 1111949660 to i32*), align 4, !dbg !9048, !tbaa !1105
  ret void, !dbg !9049
}

; Function Attrs: nofree norecurse nounwind willreturn
define dso_local void @RCC_AHB1PeriphClockCmd(i32 %RCC_AHB1Periph, i32 %NewState) local_unnamed_addr #3 section ".csection7" !dbg !9050 {
entry:
  call void @llvm.dbg.value(metadata i32 %RCC_AHB1Periph, metadata !9054, metadata !DIExpression()), !dbg !9056
  call void @llvm.dbg.value(metadata i32 %NewState, metadata !9055, metadata !DIExpression()), !dbg !9056
  %cmp.not = icmp eq i32 %NewState, 0, !dbg !9057
  br i1 %cmp.not, label %if.else, label %if.then, !dbg !9059

if.then:                                          ; preds = %entry
  %0 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !9060, !tbaa !9062
  %or = or i32 %0, %RCC_AHB1Periph, !dbg !9060
  store volatile i32 %or, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !9060, !tbaa !9062
  br label %if.end, !dbg !9063

if.else:                                          ; preds = %entry
  %neg = xor i32 %RCC_AHB1Periph, -1, !dbg !9064
  %1 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !9066, !tbaa !9062
  %and = and i32 %1, %neg, !dbg !9066
  store volatile i32 %and, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !9066, !tbaa !9062
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !9067
}

; Function Attrs: nofree norecurse nounwind willreturn
define dso_local void @RCC_AHB2PeriphClockCmd(i32 %RCC_AHB2Periph, i32 %NewState) local_unnamed_addr #3 section ".csection7" !dbg !9068 {
entry:
  call void @llvm.dbg.value(metadata i32 %RCC_AHB2Periph, metadata !9070, metadata !DIExpression()), !dbg !9072
  call void @llvm.dbg.value(metadata i32 %NewState, metadata !9071, metadata !DIExpression()), !dbg !9072
  %cmp.not = icmp eq i32 %NewState, 0, !dbg !9073
  br i1 %cmp.not, label %if.else, label %if.then, !dbg !9075

if.then:                                          ; preds = %entry
  %0 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !9076, !tbaa !9078
  %or = or i32 %0, %RCC_AHB2Periph, !dbg !9076
  store volatile i32 %or, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !9076, !tbaa !9078
  br label %if.end, !dbg !9079

if.else:                                          ; preds = %entry
  %neg = xor i32 %RCC_AHB2Periph, -1, !dbg !9080
  %1 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !9082, !tbaa !9078
  %and = and i32 %1, %neg, !dbg !9082
  store volatile i32 %and, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !9082, !tbaa !9078
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !9083
}

; Function Attrs: nofree norecurse nounwind willreturn
define dso_local void @RCC_AHB3PeriphClockCmd(i32 %RCC_AHB3Periph, i32 %NewState) local_unnamed_addr #3 section ".csection7" !dbg !9084 {
entry:
  call void @llvm.dbg.value(metadata i32 %RCC_AHB3Periph, metadata !9086, metadata !DIExpression()), !dbg !9088
  call void @llvm.dbg.value(metadata i32 %NewState, metadata !9087, metadata !DIExpression()), !dbg !9088
  %cmp.not = icmp eq i32 %NewState, 0, !dbg !9089
  br i1 %cmp.not, label %if.else, label %if.then, !dbg !9091

if.then:                                          ; preds = %entry
  %0 = load volatile i32, i32* inttoptr (i32 1073887288 to i32*), align 8, !dbg !9092, !tbaa !9094
  %or = or i32 %0, %RCC_AHB3Periph, !dbg !9092
  store volatile i32 %or, i32* inttoptr (i32 1073887288 to i32*), align 8, !dbg !9092, !tbaa !9094
  br label %if.end, !dbg !9095

if.else:                                          ; preds = %entry
  %neg = xor i32 %RCC_AHB3Periph, -1, !dbg !9096
  %1 = load volatile i32, i32* inttoptr (i32 1073887288 to i32*), align 8, !dbg !9098, !tbaa !9094
  %and = and i32 %1, %neg, !dbg !9098
  store volatile i32 %and, i32* inttoptr (i32 1073887288 to i32*), align 8, !dbg !9098, !tbaa !9094
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !9099
}

; Function Attrs: nofree norecurse nounwind willreturn
define dso_local void @RCC_APB1PeriphClockCmd(i32 %RCC_APB1Periph, i32 %NewState) local_unnamed_addr #3 section ".csection7" !dbg !9100 {
entry:
  call void @llvm.dbg.value(metadata i32 %RCC_APB1Periph, metadata !9102, metadata !DIExpression()), !dbg !9104
  call void @llvm.dbg.value(metadata i32 %NewState, metadata !9103, metadata !DIExpression()), !dbg !9104
  %cmp.not = icmp eq i32 %NewState, 0, !dbg !9105
  br i1 %cmp.not, label %if.else, label %if.then, !dbg !9107

if.then:                                          ; preds = %entry
  %0 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !9108, !tbaa !7786
  %or = or i32 %0, %RCC_APB1Periph, !dbg !9108
  store volatile i32 %or, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !9108, !tbaa !7786
  br label %if.end, !dbg !9110

if.else:                                          ; preds = %entry
  %neg = xor i32 %RCC_APB1Periph, -1, !dbg !9111
  %1 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !9113, !tbaa !7786
  %and = and i32 %1, %neg, !dbg !9113
  store volatile i32 %and, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !9113, !tbaa !7786
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !9114
}

; Function Attrs: nofree norecurse nounwind willreturn
define dso_local void @RCC_APB2PeriphClockCmd(i32 %RCC_APB2Periph, i32 %NewState) local_unnamed_addr #3 section ".csection7" !dbg !9115 {
entry:
  call void @llvm.dbg.value(metadata i32 %RCC_APB2Periph, metadata !9117, metadata !DIExpression()), !dbg !9119
  call void @llvm.dbg.value(metadata i32 %NewState, metadata !9118, metadata !DIExpression()), !dbg !9119
  %cmp.not = icmp eq i32 %NewState, 0, !dbg !9120
  br i1 %cmp.not, label %if.else, label %if.then, !dbg !9122

if.then:                                          ; preds = %entry
  %0 = load volatile i32, i32* inttoptr (i32 1073887300 to i32*), align 4, !dbg !9123, !tbaa !9125
  %or = or i32 %0, %RCC_APB2Periph, !dbg !9123
  store volatile i32 %or, i32* inttoptr (i32 1073887300 to i32*), align 4, !dbg !9123, !tbaa !9125
  br label %if.end, !dbg !9126

if.else:                                          ; preds = %entry
  %neg = xor i32 %RCC_APB2Periph, -1, !dbg !9127
  %1 = load volatile i32, i32* inttoptr (i32 1073887300 to i32*), align 4, !dbg !9129, !tbaa !9125
  %and = and i32 %1, %neg, !dbg !9129
  store volatile i32 %and, i32* inttoptr (i32 1073887300 to i32*), align 4, !dbg !9129, !tbaa !9125
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !9130
}

; Function Attrs: nofree norecurse nounwind willreturn
define dso_local void @RCC_AHB1PeriphResetCmd(i32 %RCC_AHB1Periph, i32 %NewState) local_unnamed_addr #3 section ".csection7" !dbg !9131 {
entry:
  call void @llvm.dbg.value(metadata i32 %RCC_AHB1Periph, metadata !9133, metadata !DIExpression()), !dbg !9135
  call void @llvm.dbg.value(metadata i32 %NewState, metadata !9134, metadata !DIExpression()), !dbg !9135
  %cmp.not = icmp eq i32 %NewState, 0, !dbg !9136
  br i1 %cmp.not, label %if.else, label %if.then, !dbg !9138

if.then:                                          ; preds = %entry
  %0 = load volatile i32, i32* inttoptr (i32 1073887248 to i32*), align 16, !dbg !9139, !tbaa !9141
  %or = or i32 %0, %RCC_AHB1Periph, !dbg !9139
  store volatile i32 %or, i32* inttoptr (i32 1073887248 to i32*), align 16, !dbg !9139, !tbaa !9141
  br label %if.end, !dbg !9142

if.else:                                          ; preds = %entry
  %neg = xor i32 %RCC_AHB1Periph, -1, !dbg !9143
  %1 = load volatile i32, i32* inttoptr (i32 1073887248 to i32*), align 16, !dbg !9145, !tbaa !9141
  %and = and i32 %1, %neg, !dbg !9145
  store volatile i32 %and, i32* inttoptr (i32 1073887248 to i32*), align 16, !dbg !9145, !tbaa !9141
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !9146
}

; Function Attrs: nofree norecurse nounwind willreturn
define dso_local void @RCC_AHB2PeriphResetCmd(i32 %RCC_AHB2Periph, i32 %NewState) local_unnamed_addr #3 section ".csection7" !dbg !9147 {
entry:
  call void @llvm.dbg.value(metadata i32 %RCC_AHB2Periph, metadata !9149, metadata !DIExpression()), !dbg !9151
  call void @llvm.dbg.value(metadata i32 %NewState, metadata !9150, metadata !DIExpression()), !dbg !9151
  %cmp.not = icmp eq i32 %NewState, 0, !dbg !9152
  br i1 %cmp.not, label %if.else, label %if.then, !dbg !9154

if.then:                                          ; preds = %entry
  %0 = load volatile i32, i32* inttoptr (i32 1073887252 to i32*), align 4, !dbg !9155, !tbaa !9157
  %or = or i32 %0, %RCC_AHB2Periph, !dbg !9155
  store volatile i32 %or, i32* inttoptr (i32 1073887252 to i32*), align 4, !dbg !9155, !tbaa !9157
  br label %if.end, !dbg !9158

if.else:                                          ; preds = %entry
  %neg = xor i32 %RCC_AHB2Periph, -1, !dbg !9159
  %1 = load volatile i32, i32* inttoptr (i32 1073887252 to i32*), align 4, !dbg !9161, !tbaa !9157
  %and = and i32 %1, %neg, !dbg !9161
  store volatile i32 %and, i32* inttoptr (i32 1073887252 to i32*), align 4, !dbg !9161, !tbaa !9157
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !9162
}

; Function Attrs: nofree norecurse nounwind willreturn
define dso_local void @RCC_AHB3PeriphResetCmd(i32 %RCC_AHB3Periph, i32 %NewState) local_unnamed_addr #3 section ".csection7" !dbg !9163 {
entry:
  call void @llvm.dbg.value(metadata i32 %RCC_AHB3Periph, metadata !9165, metadata !DIExpression()), !dbg !9167
  call void @llvm.dbg.value(metadata i32 %NewState, metadata !9166, metadata !DIExpression()), !dbg !9167
  %cmp.not = icmp eq i32 %NewState, 0, !dbg !9168
  br i1 %cmp.not, label %if.else, label %if.then, !dbg !9170

if.then:                                          ; preds = %entry
  %0 = load volatile i32, i32* inttoptr (i32 1073887256 to i32*), align 8, !dbg !9171, !tbaa !9173
  %or = or i32 %0, %RCC_AHB3Periph, !dbg !9171
  store volatile i32 %or, i32* inttoptr (i32 1073887256 to i32*), align 8, !dbg !9171, !tbaa !9173
  br label %if.end, !dbg !9174

if.else:                                          ; preds = %entry
  %neg = xor i32 %RCC_AHB3Periph, -1, !dbg !9175
  %1 = load volatile i32, i32* inttoptr (i32 1073887256 to i32*), align 8, !dbg !9177, !tbaa !9173
  %and = and i32 %1, %neg, !dbg !9177
  store volatile i32 %and, i32* inttoptr (i32 1073887256 to i32*), align 8, !dbg !9177, !tbaa !9173
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !9178
}

; Function Attrs: nofree norecurse nounwind willreturn
define dso_local void @RCC_APB1PeriphResetCmd(i32 %RCC_APB1Periph, i32 %NewState) local_unnamed_addr #3 section ".csection7" !dbg !9179 {
entry:
  call void @llvm.dbg.value(metadata i32 %RCC_APB1Periph, metadata !9181, metadata !DIExpression()), !dbg !9183
  call void @llvm.dbg.value(metadata i32 %NewState, metadata !9182, metadata !DIExpression()), !dbg !9183
  %cmp.not = icmp eq i32 %NewState, 0, !dbg !9184
  br i1 %cmp.not, label %if.else, label %if.then, !dbg !9186

if.then:                                          ; preds = %entry
  %0 = load volatile i32, i32* inttoptr (i32 1073887264 to i32*), align 32, !dbg !9187, !tbaa !9189
  %or = or i32 %0, %RCC_APB1Periph, !dbg !9187
  store volatile i32 %or, i32* inttoptr (i32 1073887264 to i32*), align 32, !dbg !9187, !tbaa !9189
  br label %if.end, !dbg !9190

if.else:                                          ; preds = %entry
  %neg = xor i32 %RCC_APB1Periph, -1, !dbg !9191
  %1 = load volatile i32, i32* inttoptr (i32 1073887264 to i32*), align 32, !dbg !9193, !tbaa !9189
  %and = and i32 %1, %neg, !dbg !9193
  store volatile i32 %and, i32* inttoptr (i32 1073887264 to i32*), align 32, !dbg !9193, !tbaa !9189
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !9194
}

; Function Attrs: nofree norecurse nounwind willreturn
define dso_local void @RCC_APB2PeriphResetCmd(i32 %RCC_APB2Periph, i32 %NewState) local_unnamed_addr #3 section ".csection7" !dbg !9195 {
entry:
  call void @llvm.dbg.value(metadata i32 %RCC_APB2Periph, metadata !9197, metadata !DIExpression()), !dbg !9199
  call void @llvm.dbg.value(metadata i32 %NewState, metadata !9198, metadata !DIExpression()), !dbg !9199
  %cmp.not = icmp eq i32 %NewState, 0, !dbg !9200
  br i1 %cmp.not, label %if.else, label %if.then, !dbg !9202

if.then:                                          ; preds = %entry
  %0 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !9203, !tbaa !9205
  %or = or i32 %0, %RCC_APB2Periph, !dbg !9203
  store volatile i32 %or, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !9203, !tbaa !9205
  br label %if.end, !dbg !9206

if.else:                                          ; preds = %entry
  %neg = xor i32 %RCC_APB2Periph, -1, !dbg !9207
  %1 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !9209, !tbaa !9205
  %and = and i32 %1, %neg, !dbg !9209
  store volatile i32 %and, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !9209, !tbaa !9205
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !9210
}

; Function Attrs: nofree norecurse nounwind willreturn
define dso_local void @RCC_AHB1PeriphClockLPModeCmd(i32 %RCC_AHB1Periph, i32 %NewState) local_unnamed_addr #3 section ".csection7" !dbg !9211 {
entry:
  call void @llvm.dbg.value(metadata i32 %RCC_AHB1Periph, metadata !9213, metadata !DIExpression()), !dbg !9215
  call void @llvm.dbg.value(metadata i32 %NewState, metadata !9214, metadata !DIExpression()), !dbg !9215
  %cmp.not = icmp eq i32 %NewState, 0, !dbg !9216
  br i1 %cmp.not, label %if.else, label %if.then, !dbg !9218

if.then:                                          ; preds = %entry
  %0 = load volatile i32, i32* inttoptr (i32 1073887312 to i32*), align 16, !dbg !9219, !tbaa !9221
  %or = or i32 %0, %RCC_AHB1Periph, !dbg !9219
  store volatile i32 %or, i32* inttoptr (i32 1073887312 to i32*), align 16, !dbg !9219, !tbaa !9221
  br label %if.end, !dbg !9222

if.else:                                          ; preds = %entry
  %neg = xor i32 %RCC_AHB1Periph, -1, !dbg !9223
  %1 = load volatile i32, i32* inttoptr (i32 1073887312 to i32*), align 16, !dbg !9225, !tbaa !9221
  %and = and i32 %1, %neg, !dbg !9225
  store volatile i32 %and, i32* inttoptr (i32 1073887312 to i32*), align 16, !dbg !9225, !tbaa !9221
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !9226
}

; Function Attrs: nofree norecurse nounwind willreturn
define dso_local void @RCC_AHB2PeriphClockLPModeCmd(i32 %RCC_AHB2Periph, i32 %NewState) local_unnamed_addr #3 section ".csection7" !dbg !9227 {
entry:
  call void @llvm.dbg.value(metadata i32 %RCC_AHB2Periph, metadata !9229, metadata !DIExpression()), !dbg !9231
  call void @llvm.dbg.value(metadata i32 %NewState, metadata !9230, metadata !DIExpression()), !dbg !9231
  %cmp.not = icmp eq i32 %NewState, 0, !dbg !9232
  br i1 %cmp.not, label %if.else, label %if.then, !dbg !9234

if.then:                                          ; preds = %entry
  %0 = load volatile i32, i32* inttoptr (i32 1073887316 to i32*), align 4, !dbg !9235, !tbaa !9237
  %or = or i32 %0, %RCC_AHB2Periph, !dbg !9235
  store volatile i32 %or, i32* inttoptr (i32 1073887316 to i32*), align 4, !dbg !9235, !tbaa !9237
  br label %if.end, !dbg !9238

if.else:                                          ; preds = %entry
  %neg = xor i32 %RCC_AHB2Periph, -1, !dbg !9239
  %1 = load volatile i32, i32* inttoptr (i32 1073887316 to i32*), align 4, !dbg !9241, !tbaa !9237
  %and = and i32 %1, %neg, !dbg !9241
  store volatile i32 %and, i32* inttoptr (i32 1073887316 to i32*), align 4, !dbg !9241, !tbaa !9237
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !9242
}

; Function Attrs: nofree norecurse nounwind willreturn
define dso_local void @RCC_AHB3PeriphClockLPModeCmd(i32 %RCC_AHB3Periph, i32 %NewState) local_unnamed_addr #3 section ".csection7" !dbg !9243 {
entry:
  call void @llvm.dbg.value(metadata i32 %RCC_AHB3Periph, metadata !9245, metadata !DIExpression()), !dbg !9247
  call void @llvm.dbg.value(metadata i32 %NewState, metadata !9246, metadata !DIExpression()), !dbg !9247
  %cmp.not = icmp eq i32 %NewState, 0, !dbg !9248
  br i1 %cmp.not, label %if.else, label %if.then, !dbg !9250

if.then:                                          ; preds = %entry
  %0 = load volatile i32, i32* inttoptr (i32 1073887320 to i32*), align 8, !dbg !9251, !tbaa !9253
  %or = or i32 %0, %RCC_AHB3Periph, !dbg !9251
  store volatile i32 %or, i32* inttoptr (i32 1073887320 to i32*), align 8, !dbg !9251, !tbaa !9253
  br label %if.end, !dbg !9254

if.else:                                          ; preds = %entry
  %neg = xor i32 %RCC_AHB3Periph, -1, !dbg !9255
  %1 = load volatile i32, i32* inttoptr (i32 1073887320 to i32*), align 8, !dbg !9257, !tbaa !9253
  %and = and i32 %1, %neg, !dbg !9257
  store volatile i32 %and, i32* inttoptr (i32 1073887320 to i32*), align 8, !dbg !9257, !tbaa !9253
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !9258
}

; Function Attrs: nofree norecurse nounwind willreturn
define dso_local void @RCC_APB1PeriphClockLPModeCmd(i32 %RCC_APB1Periph, i32 %NewState) local_unnamed_addr #3 section ".csection7" !dbg !9259 {
entry:
  call void @llvm.dbg.value(metadata i32 %RCC_APB1Periph, metadata !9261, metadata !DIExpression()), !dbg !9263
  call void @llvm.dbg.value(metadata i32 %NewState, metadata !9262, metadata !DIExpression()), !dbg !9263
  %cmp.not = icmp eq i32 %NewState, 0, !dbg !9264
  br i1 %cmp.not, label %if.else, label %if.then, !dbg !9266

if.then:                                          ; preds = %entry
  %0 = load volatile i32, i32* inttoptr (i32 1073887328 to i32*), align 32, !dbg !9267, !tbaa !9269
  %or = or i32 %0, %RCC_APB1Periph, !dbg !9267
  store volatile i32 %or, i32* inttoptr (i32 1073887328 to i32*), align 32, !dbg !9267, !tbaa !9269
  br label %if.end, !dbg !9270

if.else:                                          ; preds = %entry
  %neg = xor i32 %RCC_APB1Periph, -1, !dbg !9271
  %1 = load volatile i32, i32* inttoptr (i32 1073887328 to i32*), align 32, !dbg !9273, !tbaa !9269
  %and = and i32 %1, %neg, !dbg !9273
  store volatile i32 %and, i32* inttoptr (i32 1073887328 to i32*), align 32, !dbg !9273, !tbaa !9269
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !9274
}

; Function Attrs: nofree norecurse nounwind willreturn
define dso_local void @RCC_APB2PeriphClockLPModeCmd(i32 %RCC_APB2Periph, i32 %NewState) local_unnamed_addr #3 section ".csection7" !dbg !9275 {
entry:
  call void @llvm.dbg.value(metadata i32 %RCC_APB2Periph, metadata !9277, metadata !DIExpression()), !dbg !9279
  call void @llvm.dbg.value(metadata i32 %NewState, metadata !9278, metadata !DIExpression()), !dbg !9279
  %cmp.not = icmp eq i32 %NewState, 0, !dbg !9280
  br i1 %cmp.not, label %if.else, label %if.then, !dbg !9282

if.then:                                          ; preds = %entry
  %0 = load volatile i32, i32* inttoptr (i32 1073887332 to i32*), align 4, !dbg !9283, !tbaa !9285
  %or = or i32 %0, %RCC_APB2Periph, !dbg !9283
  store volatile i32 %or, i32* inttoptr (i32 1073887332 to i32*), align 4, !dbg !9283, !tbaa !9285
  br label %if.end, !dbg !9286

if.else:                                          ; preds = %entry
  %neg = xor i32 %RCC_APB2Periph, -1, !dbg !9287
  %1 = load volatile i32, i32* inttoptr (i32 1073887332 to i32*), align 4, !dbg !9289, !tbaa !9285
  %and = and i32 %1, %neg, !dbg !9289
  store volatile i32 %and, i32* inttoptr (i32 1073887332 to i32*), align 4, !dbg !9289, !tbaa !9285
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !9290
}

; Function Attrs: nofree norecurse nounwind willreturn
define dso_local void @RCC_ITConfig(i8 zeroext %RCC_IT, i32 %NewState) local_unnamed_addr #3 section ".csection7" !dbg !9291 {
entry:
  call void @llvm.dbg.value(metadata i8 %RCC_IT, metadata !9293, metadata !DIExpression()), !dbg !9295
  call void @llvm.dbg.value(metadata i32 %NewState, metadata !9294, metadata !DIExpression()), !dbg !9295
  %cmp.not = icmp eq i32 %NewState, 0, !dbg !9296
  br i1 %cmp.not, label %if.else, label %if.then, !dbg !9298

if.then:                                          ; preds = %entry
  %0 = load volatile i8, i8* inttoptr (i32 1073887245 to i8*), align 1, !dbg !9299, !tbaa !1246
  %or10 = or i8 %0, %RCC_IT, !dbg !9299
  store volatile i8 %or10, i8* inttoptr (i32 1073887245 to i8*), align 1, !dbg !9299, !tbaa !1246
  br label %if.end, !dbg !9301

if.else:                                          ; preds = %entry
  %neg = xor i8 %RCC_IT, -1, !dbg !9302
  %1 = load volatile i8, i8* inttoptr (i32 1073887245 to i8*), align 1, !dbg !9304, !tbaa !1246
  %and9 = and i8 %1, %neg, !dbg !9304
  store volatile i8 %and9, i8* inttoptr (i32 1073887245 to i8*), align 1, !dbg !9304, !tbaa !1246
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !9305
}

; Function Attrs: nofree norecurse nounwind willreturn
define dso_local void @RCC_ClearFlag() local_unnamed_addr #3 section ".csection7" !dbg !9306 {
entry:
  %0 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !9307, !tbaa !9308
  %or = or i32 %0, 16777216, !dbg !9307
  store volatile i32 %or, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !9307, !tbaa !9308
  ret void, !dbg !9309
}

; Function Attrs: nofree norecurse nounwind willreturn
define dso_local i32 @RCC_GetITStatus(i8 zeroext %RCC_IT) local_unnamed_addr #3 section ".csection7" !dbg !9310 {
entry:
  call void @llvm.dbg.value(metadata i8 %RCC_IT, metadata !9315, metadata !DIExpression()), !dbg !9317
  call void @llvm.dbg.value(metadata i32 0, metadata !9316, metadata !DIExpression()), !dbg !9317
  %0 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !9318, !tbaa !7744
  %conv = zext i8 %RCC_IT to i32, !dbg !9320
  %and = and i32 %0, %conv, !dbg !9321
  %cmp.not = icmp ne i32 %and, 0, !dbg !9322
  %bitstatus.0 = zext i1 %cmp.not to i32, !dbg !9323
  call void @llvm.dbg.value(metadata i32 %bitstatus.0, metadata !9316, metadata !DIExpression()), !dbg !9317
  ret i32 %bitstatus.0, !dbg !9324
}

; Function Attrs: nofree norecurse nounwind willreturn
define dso_local void @RCC_ClearITPendingBit(i8 zeroext %RCC_IT) local_unnamed_addr #3 section ".csection7" !dbg !9325 {
entry:
  call void @llvm.dbg.value(metadata i8 %RCC_IT, metadata !9327, metadata !DIExpression()), !dbg !9328
  store volatile i8 %RCC_IT, i8* inttoptr (i32 1073887246 to i8*), align 2, !dbg !9329, !tbaa !1246
  ret void, !dbg !9330
}

; Function Attrs: nofree norecurse nounwind willreturn
define dso_local void @EXTI_DeInit() local_unnamed_addr #3 section ".csection15" !dbg !9331 {
entry:
  store volatile i32 0, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !9332, !tbaa !7802
  store volatile i32 0, i32* inttoptr (i32 1073822724 to i32*), align 4, !dbg !9333, !tbaa !9334
  store volatile i32 0, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !9335, !tbaa !9336
  store volatile i32 0, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !9337, !tbaa !9338
  store volatile i32 8388607, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !9339, !tbaa !9340
  ret void, !dbg !9341
}

; Function Attrs: nofree norecurse nounwind willreturn
define dso_local void @EXTI_Init(%struct.EXTI_InitTypeDef* nocapture readonly %EXTI_InitStruct) local_unnamed_addr #3 section ".csection15" !dbg !9342 {
entry:
  call void @llvm.dbg.value(metadata %struct.EXTI_InitTypeDef* %EXTI_InitStruct, metadata !9354, metadata !DIExpression()), !dbg !9356
  call void @llvm.dbg.value(metadata i32 0, metadata !9355, metadata !DIExpression()), !dbg !9356
  call void @llvm.dbg.value(metadata i32 1073822720, metadata !9355, metadata !DIExpression()), !dbg !9356
  %EXTI_LineCmd = getelementptr inbounds %struct.EXTI_InitTypeDef, %struct.EXTI_InitTypeDef* %EXTI_InitStruct, i32 0, i32 3, !dbg !9357
  %0 = load i32, i32* %EXTI_LineCmd, align 4, !dbg !9357, !tbaa !8343
  %cmp.not = icmp eq i32 %0, 0, !dbg !9359
  br i1 %cmp.not, label %if.else21, label %if.then, !dbg !9360

if.then:                                          ; preds = %entry
  %EXTI_Line = getelementptr inbounds %struct.EXTI_InitTypeDef, %struct.EXTI_InitTypeDef* %EXTI_InitStruct, i32 0, i32 0, !dbg !9361
  %1 = load i32, i32* %EXTI_Line, align 4, !dbg !9361, !tbaa !8325
  %neg = xor i32 %1, -1, !dbg !9363
  %2 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !9364, !tbaa !7802
  %and = and i32 %2, %neg, !dbg !9364
  store volatile i32 %and, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !9364, !tbaa !7802
  %3 = load volatile i32, i32* inttoptr (i32 1073822724 to i32*), align 4, !dbg !9365, !tbaa !9334
  %and3 = and i32 %3, %neg, !dbg !9365
  store volatile i32 %and3, i32* inttoptr (i32 1073822724 to i32*), align 4, !dbg !9365, !tbaa !9334
  %EXTI_Mode = getelementptr inbounds %struct.EXTI_InitTypeDef, %struct.EXTI_InitTypeDef* %EXTI_InitStruct, i32 0, i32 1, !dbg !9366
  %4 = load i32, i32* %EXTI_Mode, align 4, !dbg !9366, !tbaa !8329
  %add = add i32 %4, 1073822720, !dbg !9367
  call void @llvm.dbg.value(metadata i32 %add, metadata !9355, metadata !DIExpression()), !dbg !9356
  %5 = inttoptr i32 %add to i32*, !dbg !9368
  %6 = load volatile i32, i32* %5, align 4, !dbg !9369, !tbaa !1105
  %or = or i32 %6, %1, !dbg !9369
  store volatile i32 %or, i32* %5, align 4, !dbg !9369, !tbaa !1105
  %7 = load i32, i32* %EXTI_Line, align 4, !dbg !9370, !tbaa !8325
  %neg6 = xor i32 %7, -1, !dbg !9371
  %8 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !9372, !tbaa !9336
  %and7 = and i32 %8, %neg6, !dbg !9372
  store volatile i32 %and7, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !9372, !tbaa !9336
  %9 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !9373, !tbaa !9338
  %and10 = and i32 %9, %neg6, !dbg !9373
  store volatile i32 %and10, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !9373, !tbaa !9338
  %EXTI_Trigger = getelementptr inbounds %struct.EXTI_InitTypeDef, %struct.EXTI_InitTypeDef* %EXTI_InitStruct, i32 0, i32 2, !dbg !9374
  %10 = load i32, i32* %EXTI_Trigger, align 4, !dbg !9374, !tbaa !8336
  %cmp11 = icmp eq i32 %10, 16, !dbg !9376
  br i1 %cmp11, label %if.then12, label %if.else, !dbg !9377

if.then12:                                        ; preds = %if.then
  %11 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !9378, !tbaa !9336
  %or14 = or i32 %11, %7, !dbg !9378
  store volatile i32 %or14, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !9378, !tbaa !9336
  %12 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !9380, !tbaa !9338
  %or16 = or i32 %12, %7, !dbg !9380
  store volatile i32 %or16, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !9380, !tbaa !9338
  br label %if.end27, !dbg !9381

if.else:                                          ; preds = %if.then
  call void @llvm.dbg.value(metadata i32 1073822720, metadata !9355, metadata !DIExpression()), !dbg !9356
  %add18 = add i32 %10, 1073822720, !dbg !9382
  call void @llvm.dbg.value(metadata i32 %add18, metadata !9355, metadata !DIExpression()), !dbg !9356
  %13 = inttoptr i32 %add18 to i32*, !dbg !9384
  %14 = load volatile i32, i32* %13, align 4, !dbg !9385, !tbaa !1105
  %or20 = or i32 %14, %7, !dbg !9385
  store volatile i32 %or20, i32* %13, align 4, !dbg !9385, !tbaa !1105
  br label %if.end27

if.else21:                                        ; preds = %entry
  %EXTI_Mode22 = getelementptr inbounds %struct.EXTI_InitTypeDef, %struct.EXTI_InitTypeDef* %EXTI_InitStruct, i32 0, i32 1, !dbg !9386
  %15 = load i32, i32* %EXTI_Mode22, align 4, !dbg !9386, !tbaa !8329
  %add23 = add i32 %15, 1073822720, !dbg !9388
  call void @llvm.dbg.value(metadata i32 %add23, metadata !9355, metadata !DIExpression()), !dbg !9356
  %EXTI_Line24 = getelementptr inbounds %struct.EXTI_InitTypeDef, %struct.EXTI_InitTypeDef* %EXTI_InitStruct, i32 0, i32 0, !dbg !9389
  %16 = load i32, i32* %EXTI_Line24, align 4, !dbg !9389, !tbaa !8325
  %neg25 = xor i32 %16, -1, !dbg !9390
  %17 = inttoptr i32 %add23 to i32*, !dbg !9391
  %18 = load volatile i32, i32* %17, align 4, !dbg !9392, !tbaa !1105
  %and26 = and i32 %18, %neg25, !dbg !9392
  store volatile i32 %and26, i32* %17, align 4, !dbg !9392, !tbaa !1105
  br label %if.end27

if.end27:                                         ; preds = %if.else21, %if.else, %if.then12
  ret void, !dbg !9393
}

; Function Attrs: nofree norecurse nounwind willreturn writeonly
define dso_local void @EXTI_StructInit(%struct.EXTI_InitTypeDef* nocapture %EXTI_InitStruct) local_unnamed_addr #7 section ".csection15" !dbg !9394 {
entry:
  call void @llvm.dbg.value(metadata %struct.EXTI_InitTypeDef* %EXTI_InitStruct, metadata !9396, metadata !DIExpression()), !dbg !9397
  %EXTI_Line = getelementptr inbounds %struct.EXTI_InitTypeDef, %struct.EXTI_InitTypeDef* %EXTI_InitStruct, i32 0, i32 0, !dbg !9398
  store i32 0, i32* %EXTI_Line, align 4, !dbg !9399, !tbaa !8325
  %EXTI_Mode = getelementptr inbounds %struct.EXTI_InitTypeDef, %struct.EXTI_InitTypeDef* %EXTI_InitStruct, i32 0, i32 1, !dbg !9400
  store i32 0, i32* %EXTI_Mode, align 4, !dbg !9401, !tbaa !8329
  %EXTI_Trigger = getelementptr inbounds %struct.EXTI_InitTypeDef, %struct.EXTI_InitTypeDef* %EXTI_InitStruct, i32 0, i32 2, !dbg !9402
  store i32 12, i32* %EXTI_Trigger, align 4, !dbg !9403, !tbaa !8336
  %EXTI_LineCmd = getelementptr inbounds %struct.EXTI_InitTypeDef, %struct.EXTI_InitTypeDef* %EXTI_InitStruct, i32 0, i32 3, !dbg !9404
  store i32 0, i32* %EXTI_LineCmd, align 4, !dbg !9405, !tbaa !8343
  ret void, !dbg !9406
}

; Function Attrs: nofree norecurse nounwind willreturn
define dso_local void @EXTI_GenerateSWInterrupt(i32 %EXTI_Line) local_unnamed_addr #3 section ".csection15" !dbg !9407 {
entry:
  call void @llvm.dbg.value(metadata i32 %EXTI_Line, metadata !9409, metadata !DIExpression()), !dbg !9410
  %0 = load volatile i32, i32* inttoptr (i32 1073822736 to i32*), align 16, !dbg !9411, !tbaa !9412
  %or = or i32 %0, %EXTI_Line, !dbg !9411
  store volatile i32 %or, i32* inttoptr (i32 1073822736 to i32*), align 16, !dbg !9411, !tbaa !9412
  ret void, !dbg !9413
}

; Function Attrs: nofree norecurse nounwind willreturn
define dso_local i32 @EXTI_GetFlagStatus(i32 %EXTI_Line) local_unnamed_addr #3 section ".csection15" !dbg !9414 {
entry:
  call void @llvm.dbg.value(metadata i32 %EXTI_Line, metadata !9418, metadata !DIExpression()), !dbg !9420
  call void @llvm.dbg.value(metadata i32 0, metadata !9419, metadata !DIExpression()), !dbg !9420
  %0 = load volatile i32, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !9421, !tbaa !9340
  %and = and i32 %0, %EXTI_Line, !dbg !9423
  %cmp.not = icmp ne i32 %and, 0, !dbg !9424
  %bitstatus.0 = zext i1 %cmp.not to i32, !dbg !9425
  call void @llvm.dbg.value(metadata i32 %bitstatus.0, metadata !9419, metadata !DIExpression()), !dbg !9420
  ret i32 %bitstatus.0, !dbg !9426
}

; Function Attrs: nofree norecurse nounwind willreturn
define dso_local void @EXTI_ClearFlag(i32 %EXTI_Line) local_unnamed_addr #3 section ".csection15" !dbg !9427 {
entry:
  call void @llvm.dbg.value(metadata i32 %EXTI_Line, metadata !9429, metadata !DIExpression()), !dbg !9430
  store volatile i32 %EXTI_Line, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !9431, !tbaa !9340
  ret void, !dbg !9432
}

; Function Attrs: nofree norecurse nounwind willreturn
define dso_local i32 @EXTI_GetITStatus(i32 %EXTI_Line) local_unnamed_addr #3 section ".csection15" !dbg !9433 {
entry:
  call void @llvm.dbg.value(metadata i32 %EXTI_Line, metadata !9437, metadata !DIExpression()), !dbg !9440
  call void @llvm.dbg.value(metadata i32 0, metadata !9438, metadata !DIExpression()), !dbg !9440
  call void @llvm.dbg.value(metadata i32 0, metadata !9439, metadata !DIExpression()), !dbg !9440
  %0 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !9441, !tbaa !7802
  %and = and i32 %0, %EXTI_Line, !dbg !9442
  call void @llvm.dbg.value(metadata i32 %and, metadata !9439, metadata !DIExpression()), !dbg !9440
  %1 = load volatile i32, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !9443, !tbaa !9340
  %and1 = and i32 %1, %EXTI_Line, !dbg !9445
  %cmp = icmp ne i32 %and1, 0, !dbg !9446
  %cmp2 = icmp ne i32 %and, 0
  %or.cond = and i1 %cmp2, %cmp, !dbg !9447
  %bitstatus.0 = zext i1 %or.cond to i32, !dbg !9447
  call void @llvm.dbg.value(metadata i32 %bitstatus.0, metadata !9438, metadata !DIExpression()), !dbg !9440
  ret i32 %bitstatus.0, !dbg !9448
}

; Function Attrs: nofree norecurse nounwind willreturn
define dso_local void @EXTI_ClearITPendingBit(i32 %EXTI_Line) local_unnamed_addr #3 section ".csection15" !dbg !9449 {
entry:
  call void @llvm.dbg.value(metadata i32 %EXTI_Line, metadata !9451, metadata !DIExpression()), !dbg !9452
  store volatile i32 %EXTI_Line, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !9453, !tbaa !9340
  ret void, !dbg !9454
}

; Function Attrs: nounwind
define dso_local void @SYSCFG_DeInit() local_unnamed_addr #0 section ".csection8" !dbg !9455 {
entry:
  call void @RCC_APB2PeriphResetCmd(i32 16384, i32 1) #18, !dbg !9456
  call void @RCC_APB2PeriphResetCmd(i32 16384, i32 0) #18, !dbg !9457
  ret void, !dbg !9458
}

; Function Attrs: nofree norecurse nounwind willreturn
define dso_local void @SYSCFG_MemoryRemapConfig(i8 zeroext %SYSCFG_MemoryRemap) local_unnamed_addr #3 section ".csection8" !dbg !9459 {
entry:
  call void @llvm.dbg.value(metadata i8 %SYSCFG_MemoryRemap, metadata !9461, metadata !DIExpression()), !dbg !9462
  %conv = zext i8 %SYSCFG_MemoryRemap to i32, !dbg !9463
  store volatile i32 %conv, i32* inttoptr (i32 1073821696 to i32*), align 2048, !dbg !9464, !tbaa !9465
  ret void, !dbg !9467
}

; Function Attrs: nofree norecurse nounwind willreturn
define dso_local void @SYSCFG_EXTILineConfig(i8 zeroext %EXTI_PortSourceGPIOx, i8 zeroext %EXTI_PinSourcex) local_unnamed_addr #3 section ".csection8" !dbg !9468 {
entry:
  call void @llvm.dbg.value(metadata i8 %EXTI_PortSourceGPIOx, metadata !9472, metadata !DIExpression()), !dbg !9475
  call void @llvm.dbg.value(metadata i8 %EXTI_PinSourcex, metadata !9473, metadata !DIExpression()), !dbg !9475
  call void @llvm.dbg.value(metadata i32 0, metadata !9474, metadata !DIExpression()), !dbg !9475
  %conv = zext i8 %EXTI_PinSourcex to i32, !dbg !9476
  %and = shl nuw nsw i32 %conv, 2, !dbg !9477
  %mul = and i32 %and, 12, !dbg !9477
  %shl = shl i32 15, %mul, !dbg !9478
  call void @llvm.dbg.value(metadata i32 %shl, metadata !9474, metadata !DIExpression()), !dbg !9475
  %neg = xor i32 %shl, -1, !dbg !9479
  %0 = lshr i32 %conv, 2, !dbg !9480
  %arrayidx = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %0, !dbg !9481
  %1 = load volatile i32, i32* %arrayidx, align 4, !dbg !9482, !tbaa !1105
  %and2 = and i32 %1, %neg, !dbg !9482
  store volatile i32 %and2, i32* %arrayidx, align 4, !dbg !9482, !tbaa !1105
  %conv3 = zext i8 %EXTI_PortSourceGPIOx to i32, !dbg !9483
  %shl7 = shl i32 %conv3, %mul, !dbg !9484
  %2 = load volatile i32, i32* %arrayidx, align 4, !dbg !9485, !tbaa !1105
  %or = or i32 %2, %shl7, !dbg !9485
  store volatile i32 %or, i32* %arrayidx, align 4, !dbg !9485, !tbaa !1105
  ret void, !dbg !9486
}

; Function Attrs: nofree norecurse nounwind willreturn
define dso_local void @SYSCFG_ETH_MediaInterfaceConfig(i32 %SYSCFG_ETH_MediaInterface) local_unnamed_addr #3 section ".csection8" !dbg !9487 {
entry:
  call void @llvm.dbg.value(metadata i32 %SYSCFG_ETH_MediaInterface, metadata !9489, metadata !DIExpression()), !dbg !9490
  store volatile i32 %SYSCFG_ETH_MediaInterface, i32* inttoptr (i32 1109852380 to i32*), align 4, !dbg !9491, !tbaa !1105
  ret void, !dbg !9492
}

; Function Attrs: nofree norecurse nounwind willreturn
define dso_local void @SYSCFG_CompensationCellCmd(i32 %NewState) local_unnamed_addr #3 section ".csection8" !dbg !9493 {
entry:
  call void @llvm.dbg.value(metadata i32 %NewState, metadata !9495, metadata !DIExpression()), !dbg !9496
  store volatile i32 %NewState, i32* inttoptr (i32 1109853184 to i32*), align 1024, !dbg !9497, !tbaa !1105
  ret void, !dbg !9498
}

; Function Attrs: nofree norecurse nounwind willreturn
define dso_local i32 @SYSCFG_GetCompensationCellStatus() local_unnamed_addr #3 section ".csection8" !dbg !9499 {
entry:
  call void @llvm.dbg.value(metadata i32 0, metadata !9503, metadata !DIExpression()), !dbg !9504
  %0 = load volatile i32, i32* inttoptr (i32 1073821728 to i32*), align 32, !dbg !9505, !tbaa !9507
  %and = lshr i32 %0, 8, !dbg !9508
  %and.lobit = and i32 %and, 1, !dbg !9508
  call void @llvm.dbg.value(metadata i32 %and.lobit, metadata !9503, metadata !DIExpression()), !dbg !9504
  ret i32 %and.lobit, !dbg !9509
}

Instruction does not dominate all uses!
  %10 = bitcast %struct.xLIST_ITEM* %xStateListItem to i8*
  call void @xcall_arg1p(i32 4, i8* bitcast (void (%struct.xLIST_ITEM*)* @vListInitialiseItem to i8*), i8* %10, i32 ptrtoint (%struct.xLIST_ITEM* getelementptr (%struct.xLIST_ITEM, %struct.xLIST_ITEM* null, i32 1) to i32)), !dbg !1288
Instruction does not dominate all uses!
  %11 = bitcast %struct.xLIST_ITEM* %xEventListItem to i8*
  call void @xcall_arg1p(i32 4, i8* bitcast (void (%struct.xLIST_ITEM*)* @vListInitialiseItem to i8*), i8* %11, i32 ptrtoint (%struct.xLIST_ITEM* getelementptr (%struct.xLIST_ITEM, %struct.xLIST_ITEM* null, i32 1) to i32)), !dbg !1290
Instruction does not dominate all uses!
  %0 = bitcast %struct.xLIST* %arrayidx to i8*
  call void @xcall_arg1p(i32 4, i8* bitcast (void (%struct.xLIST*)* @vListInitialise to i8*), i8* %0, i32 ptrtoint (%struct.xLIST* getelementptr (%struct.xLIST, %struct.xLIST* null, i32 1) to i32)), !dbg !1386
Instruction does not dominate all uses!
  %1 = bitcast %struct.xLIST_ITEM* %xStateListItem to i8*
  %call = call i32 @icall_arg1p(i32 4, i8* bitcast (i32 (%struct.xLIST_ITEM*)* @uxListRemove to i8*), i8* %1, i32 ptrtoint (%struct.xLIST_ITEM* getelementptr (%struct.xLIST_ITEM, %struct.xLIST_ITEM* null, i32 1) to i32)), !dbg !1413
Instruction does not dominate all uses!
  %6 = bitcast %struct.xLIST_ITEM* %xEventListItem to i8*
  %call9 = call i32 @icall_arg1p(i32 4, i8* bitcast (i32 (%struct.xLIST_ITEM*)* @uxListRemove to i8*), i8* %6, i32 ptrtoint (%struct.xLIST_ITEM* getelementptr (%struct.xLIST_ITEM, %struct.xLIST_ITEM* null, i32 1) to i32)), !dbg !1428
Instruction does not dominate all uses!
  %xEventListItem = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %cond, i32 0, i32 2, !dbg !1423
  %6 = bitcast %struct.xLIST_ITEM* %xEventListItem to i8*
Instruction does not dominate all uses!
  %2 = bitcast %struct.xLIST_ITEM* %xStateListItem to i8*
  %call = call i32 @icall_arg1p(i32 4, i8* bitcast (i32 (%struct.xLIST_ITEM*)* @uxListRemove to i8*), i8* %2, i32 ptrtoint (%struct.xLIST_ITEM* getelementptr (%struct.xLIST_ITEM, %struct.xLIST_ITEM* null, i32 1) to i32)), !dbg !1604
Instruction does not dominate all uses!
  %16 = bitcast %struct.xLIST_ITEM* %xEventListItem to i8*
  %call = call i32 @icall_arg1p(i32 4, i8* bitcast (i32 (%struct.xLIST_ITEM*)* @uxListRemove to i8*), i8* %16, i32 ptrtoint (%struct.xLIST_ITEM* getelementptr (%struct.xLIST_ITEM, %struct.xLIST_ITEM* null, i32 1) to i32)), !dbg !1684
Instruction does not dominate all uses!
  %17 = bitcast %struct.xLIST_ITEM* %xStateListItem to i8*
  %call7 = call i32 @icall_arg1p(i32 4, i8* bitcast (i32 (%struct.xLIST_ITEM*)* @uxListRemove to i8*), i8* %17, i32 ptrtoint (%struct.xLIST_ITEM* getelementptr (%struct.xLIST_ITEM, %struct.xLIST_ITEM* null, i32 1) to i32)), !dbg !1686
Instruction does not dominate all uses!
  %17 = bitcast %struct.xLIST_ITEM* %xStateListItem to i8*
  %call = call i32 @icall_arg1p(i32 4, i8* bitcast (i32 (%struct.xLIST_ITEM*)* @uxListRemove to i8*), i8* %17, i32 ptrtoint (%struct.xLIST_ITEM* getelementptr (%struct.xLIST_ITEM, %struct.xLIST_ITEM* null, i32 1) to i32)), !dbg !1799
Instruction does not dominate all uses!
  %18 = bitcast %struct.xLIST_ITEM* %xEventListItem to i8*
  %call25 = call i32 @icall_arg1p(i32 4, i8* bitcast (i32 (%struct.xLIST_ITEM*)* @uxListRemove to i8*), i8* %18, i32 ptrtoint (%struct.xLIST_ITEM* getelementptr (%struct.xLIST_ITEM, %struct.xLIST_ITEM* null, i32 1) to i32)), !dbg !1804
Instruction does not dominate all uses!
  %xEventListItem = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %14, i32 0, i32 2, !dbg !1800
  %18 = bitcast %struct.xLIST_ITEM* %xEventListItem to i8*
Instruction does not dominate all uses!
  %10 = bitcast %struct.xLIST_ITEM* %xStateListItem to i8*
  %call = call i32 @icall_arg1p(i32 4, i8* bitcast (i32 (%struct.xLIST_ITEM*)* @uxListRemove to i8*), i8* %10, i32 ptrtoint (%struct.xLIST_ITEM* getelementptr (%struct.xLIST_ITEM, %struct.xLIST_ITEM* null, i32 1) to i32)), !dbg !2065
Instruction does not dominate all uses!
  %1 = bitcast %struct.xLIST_ITEM* %xStateListItem to i8*
  %call = call i32 @icall_arg1p(i32 4, i8* bitcast (i32 (%struct.xLIST_ITEM*)* @uxListRemove to i8*), i8* %1, i32 ptrtoint (%struct.xLIST_ITEM* getelementptr (%struct.xLIST_ITEM, %struct.xLIST_ITEM* null, i32 1) to i32)), !dbg !2097
Instruction does not dominate all uses!
  %6 = bitcast %struct.xLIST_ITEM* %xEventListItem to i8*
  %call9 = call i32 @icall_arg1p(i32 4, i8* bitcast (i32 (%struct.xLIST_ITEM*)* @uxListRemove to i8*), i8* %6, i32 ptrtoint (%struct.xLIST_ITEM* getelementptr (%struct.xLIST_ITEM, %struct.xLIST_ITEM* null, i32 1) to i32)), !dbg !2111
Instruction does not dominate all uses!
  %xEventListItem = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %cond, i32 0, i32 2, !dbg !2107
  %6 = bitcast %struct.xLIST_ITEM* %xEventListItem to i8*
Instruction does not dominate all uses!
  %7 = bitcast %struct.xLIST_ITEM* %xStateListItem to i8*
  %call6 = call i32 @icall_arg1p(i32 4, i8* bitcast (i32 (%struct.xLIST_ITEM*)* @uxListRemove to i8*), i8* %7, i32 ptrtoint (%struct.xLIST_ITEM* getelementptr (%struct.xLIST_ITEM, %struct.xLIST_ITEM* null, i32 1) to i32)), !dbg !2209
Instruction does not dominate all uses!
  %8 = bitcast %struct.xLIST_ITEM* %xStateListItem to i8*
  %call10 = call i32 @icall_arg1p(i32 4, i8* bitcast (i32 (%struct.xLIST_ITEM*)* @uxListRemove to i8*), i8* %8, i32 ptrtoint (%struct.xLIST_ITEM* getelementptr (%struct.xLIST_ITEM, %struct.xLIST_ITEM* null, i32 1) to i32)), !dbg !2301
Instruction does not dominate all uses!
  %xStateListItem = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %xTaskToResume, i32 0, i32 1, !dbg !2300
  %8 = bitcast %struct.xLIST_ITEM* %xStateListItem to i8*
Instruction does not dominate all uses!
  %8 = bitcast %struct.xLIST_ITEM* %xStateListItem to i8*
  %call = call i32 @icall_arg1p(i32 4, i8* bitcast (i32 (%struct.xLIST_ITEM*)* @uxListRemove to i8*), i8* %8, i32 ptrtoint (%struct.xLIST_ITEM* getelementptr (%struct.xLIST_ITEM, %struct.xLIST_ITEM* null, i32 1) to i32)), !dbg !2389
Instruction does not dominate all uses!
  %xStateListItem = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %4, i32 0, i32 1, !dbg !2388
  %8 = bitcast %struct.xLIST_ITEM* %xStateListItem to i8*
Instruction does not dominate all uses!
  %5 = bitcast %struct.xLIST_ITEM* %xEventListItem to i8*
  %call = call i32 @icall_arg1p(i32 4, i8* bitcast (i32 (%struct.xLIST_ITEM*)* @uxListRemove to i8*), i8* %5, i32 ptrtoint (%struct.xLIST_ITEM* getelementptr (%struct.xLIST_ITEM, %struct.xLIST_ITEM* null, i32 1) to i32)), !dbg !2815
Instruction does not dominate all uses!
  %8 = bitcast %struct.xLIST_ITEM* %xStateListItem to i8*
  %call3 = call i32 @icall_arg1p(i32 4, i8* bitcast (i32 (%struct.xLIST_ITEM*)* @uxListRemove to i8*), i8* %8, i32 ptrtoint (%struct.xLIST_ITEM* getelementptr (%struct.xLIST_ITEM, %struct.xLIST_ITEM* null, i32 1) to i32)), !dbg !2822
Instruction does not dominate all uses!
  %xStateListItem = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %2, i32 0, i32 1, !dbg !2820
  %8 = bitcast %struct.xLIST_ITEM* %xStateListItem to i8*
Instruction does not dominate all uses!
  %10 = bitcast %struct.xLIST_ITEM* %pxEventListItem to i8*
  %call = call i32 @icall_arg1p(i32 4, i8* bitcast (i32 (%struct.xLIST_ITEM*)* @uxListRemove to i8*), i8* %10, i32 ptrtoint (%struct.xLIST_ITEM* getelementptr (%struct.xLIST_ITEM, %struct.xLIST_ITEM* null, i32 1) to i32)), !dbg !2874
Instruction does not dominate all uses!
  %11 = bitcast %struct.xLIST_ITEM* %xStateListItem to i8*
  %call9 = call i32 @icall_arg1p(i32 4, i8* bitcast (i32 (%struct.xLIST_ITEM*)* @uxListRemove to i8*), i8* %11, i32 ptrtoint (%struct.xLIST_ITEM* getelementptr (%struct.xLIST_ITEM, %struct.xLIST_ITEM* null, i32 1) to i32)), !dbg !2876
Instruction does not dominate all uses!
  %7 = bitcast %struct.xLIST_ITEM* %xStateListItem to i8*
  %call = call i32 @icall_arg1p(i32 4, i8* bitcast (i32 (%struct.xLIST_ITEM*)* @uxListRemove to i8*), i8* %7, i32 ptrtoint (%struct.xLIST_ITEM* getelementptr (%struct.xLIST_ITEM, %struct.xLIST_ITEM* null, i32 1) to i32)), !dbg !3088
Instruction does not dominate all uses!
  %6 = bitcast %struct.xLIST_ITEM* %xStateListItem to i8*
  %call = call i32 @icall_arg1p(i32 4, i8* bitcast (i32 (%struct.xLIST_ITEM*)* @uxListRemove to i8*), i8* %6, i32 ptrtoint (%struct.xLIST_ITEM* getelementptr (%struct.xLIST_ITEM, %struct.xLIST_ITEM* null, i32 1) to i32)), !dbg !3159
Instruction does not dominate all uses!
  %8 = bitcast %struct.xLIST_ITEM* %xStateListItem to i8*
  %call = call i32 @icall_arg1p(i32 4, i8* bitcast (i32 (%struct.xLIST_ITEM*)* @uxListRemove to i8*), i8* %8, i32 ptrtoint (%struct.xLIST_ITEM* getelementptr (%struct.xLIST_ITEM, %struct.xLIST_ITEM* null, i32 1) to i32)), !dbg !3234
Instruction does not dominate all uses!
  %11 = bitcast %struct.xLIST_ITEM* %xStateListItem to i8*
  %call = call i32 @icall_arg1p(i32 4, i8* bitcast (i32 (%struct.xLIST_ITEM*)* @uxListRemove to i8*), i8* %11, i32 ptrtoint (%struct.xLIST_ITEM* getelementptr (%struct.xLIST_ITEM, %struct.xLIST_ITEM* null, i32 1) to i32)), !dbg !3484
Instruction does not dominate all uses!
  %14 = bitcast %struct.xLIST_ITEM* %xStateListItem to i8*
  %call51 = call i32 @icall_arg1p(i32 4, i8* bitcast (i32 (%struct.xLIST_ITEM*)* @uxListRemove to i8*), i8* %14, i32 ptrtoint (%struct.xLIST_ITEM* getelementptr (%struct.xLIST_ITEM, %struct.xLIST_ITEM* null, i32 1) to i32)), !dbg !3622
Instruction does not dominate all uses!
  %xStateListItem = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %xTaskToNotify, i32 0, i32 1, !dbg !3620
  %14 = bitcast %struct.xLIST_ITEM* %xStateListItem to i8*
Instruction does not dominate all uses!
  %10 = bitcast %struct.xLIST_ITEM* %xStateListItem to i8*
  %call24 = call i32 @icall_arg1p(i32 4, i8* bitcast (i32 (%struct.xLIST_ITEM*)* @uxListRemove to i8*), i8* %10, i32 ptrtoint (%struct.xLIST_ITEM* getelementptr (%struct.xLIST_ITEM, %struct.xLIST_ITEM* null, i32 1) to i32)), !dbg !3715
Instruction does not dominate all uses!
  %xStateListItem = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %xTaskToNotify, i32 0, i32 1, !dbg !3713
  %10 = bitcast %struct.xLIST_ITEM* %xStateListItem to i8*
Instruction does not dominate all uses!
  %5 = bitcast %struct.xLIST* %xTasksWaitingToSend to i8*
  %call = call i32 @icall_arg1p(i32 0, i8* bitcast (i32 (%struct.xLIST*)* @xTaskRemoveFromEventList to i8*), i8* %5, i32 ptrtoint (%struct.xLIST* getelementptr (%struct.xLIST, %struct.xLIST* null, i32 1) to i32)), !dbg !4103
Instruction does not dominate all uses!
  %6 = bitcast %struct.xLIST* %xTasksWaitingToSend22 to i8*
  call void @xcall_arg1p(i32 4, i8* bitcast (void (%struct.xLIST*)* @vListInitialise to i8*), i8* %6, i32 ptrtoint (%struct.xLIST* getelementptr (%struct.xLIST, %struct.xLIST* null, i32 1) to i32)), !dbg !4116
Instruction does not dominate all uses!
  %7 = bitcast %struct.xLIST* %xTasksWaitingToReceive to i8*
  call void @xcall_arg1p(i32 4, i8* bitcast (void (%struct.xLIST*)* @vListInitialise to i8*), i8* %7, i32 ptrtoint (%struct.xLIST* getelementptr (%struct.xLIST, %struct.xLIST* null, i32 1) to i32)), !dbg !4118
Instruction does not dominate all uses!
  %xTasksWaitingToSend22 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %xQueue, i32 0, i32 3, !dbg !4114
  %6 = bitcast %struct.xLIST* %xTasksWaitingToSend22 to i8*
Instruction does not dominate all uses!
  %xTasksWaitingToReceive = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %xQueue, i32 0, i32 4, !dbg !4117
  %7 = bitcast %struct.xLIST* %xTasksWaitingToReceive to i8*
Instruction does not dominate all uses!
  %11 = bitcast %struct.xLIST* %xTasksWaitingToReceive to i8*
  %call37 = call i32 @icall_arg1p(i32 0, i8* bitcast (i32 (%struct.xLIST*)* @xTaskRemoveFromEventList to i8*), i8* %11, i32 ptrtoint (%struct.xLIST* getelementptr (%struct.xLIST, %struct.xLIST* null, i32 1) to i32)), !dbg !4336
Instruction does not dominate all uses!
  %13 = bitcast %struct.xTIME_OUT* %xTimeOut to i8*
  call void @xcall_arg1p(i32 0, i8* bitcast (void (%struct.xTIME_OUT*)* @vTaskInternalSetTimeOutState to i8*), i8* %13, i32 mul nuw (i32 ptrtoint (i32* getelementptr (i32, i32* null, i32 1) to i32), i32 2)), !dbg !4367
Instruction does not dominate all uses!
  %4 = bitcast %struct.tskTaskControlBlock* %3 to i8*
  %call = call i32 @icall_arg1p(i32 0, i8* bitcast (i32 (%struct.tskTaskControlBlock*)* @xTaskPriorityDisinherit to i8*), i8* %4, i32 ptrtoint (%struct.tskTaskControlBlock* getelementptr (%struct.tskTaskControlBlock, %struct.tskTaskControlBlock* null, i32 1) to i32)), !dbg !4443
Instruction does not dominate all uses!
  %3 = load %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** %xMutexHolder, align 4, !dbg !4442, !tbaa !1246
  %4 = bitcast %struct.tskTaskControlBlock* %3 to i8*
Instruction does not dominate all uses!
  %2 = bitcast %struct.xLIST* %xTasksWaitingToReceive to i8*
  %call = call i32 @icall_arg1p(i32 0, i8* bitcast (i32 (%struct.xLIST*)* @xTaskRemoveFromEventList to i8*), i8* %2, i32 ptrtoint (%struct.xLIST* getelementptr (%struct.xLIST, %struct.xLIST* null, i32 1) to i32)), !dbg !4520
Instruction does not dominate all uses!
  %5 = bitcast %struct.xLIST* %xTasksWaitingToSend to i8*
  %call28 = call i32 @icall_arg1p(i32 0, i8* bitcast (i32 (%struct.xLIST*)* @xTaskRemoveFromEventList to i8*), i8* %5, i32 ptrtoint (%struct.xLIST* getelementptr (%struct.xLIST, %struct.xLIST* null, i32 1) to i32)), !dbg !4542
Instruction does not dominate all uses!
  %9 = bitcast %struct.xLIST* %xTasksWaitingToSend to i8*
  %call32 = call i32 @icall_arg1p(i32 0, i8* bitcast (i32 (%struct.xLIST*)* @xTaskRemoveFromEventList to i8*), i8* %9, i32 ptrtoint (%struct.xLIST* getelementptr (%struct.xLIST, %struct.xLIST* null, i32 1) to i32)), !dbg !4725
Instruction does not dominate all uses!
  %12 = bitcast %struct.xTIME_OUT* %xTimeOut to i8*
  call void @xcall_arg1p(i32 0, i8* bitcast (void (%struct.xTIME_OUT*)* @vTaskInternalSetTimeOutState to i8*), i8* %12, i32 mul nuw (i32 ptrtoint (i32* getelementptr (i32, i32* null, i32 1) to i32), i32 2)), !dbg !4763
PHI nodes not grouped at top of basic block!
  %xEntryTimeSet.2 = phi i32 [ %xEntryTimeSet.0, %if.end39 ], [ %xEntryTimeSet.0, %if.end50 ], [ 1, %if.else51 ], [ 1, %if.then54 ], !dbg !4659
label %cleanup
Instruction does not dominate all uses!
  %17 = bitcast %struct.tskTaskControlBlock* %16 to i8*
  %call86 = call i32 @icall_arg1p(i32 0, i8* bitcast (i32 (%struct.tskTaskControlBlock*)* @xTaskPriorityInherit to i8*), i8* %17, i32 ptrtoint (%struct.tskTaskControlBlock* getelementptr (%struct.tskTaskControlBlock, %struct.tskTaskControlBlock* null, i32 1) to i32)), !dbg !4797
Instruction does not dominate all uses!
  %16 = load %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** %xMutexHolder85, align 4, !dbg !4795, !tbaa !1246
  %17 = bitcast %struct.tskTaskControlBlock* %16 to i8*
PHI nodes not grouped at top of basic block!
  %xInheritanceOccurred.1 = phi i32 [ %call86, %if.then82 ], [ %xInheritanceOccurred.0, %if.then78 ], !dbg !4659
label %if.end88
Instruction does not dominate all uses!
  %11 = bitcast %struct.xLIST* %xTasksWaitingToReceive to i8*
  %call33 = call i32 @icall_arg1p(i32 0, i8* bitcast (i32 (%struct.xLIST*)* @xTaskRemoveFromEventList to i8*), i8* %11, i32 ptrtoint (%struct.xLIST* getelementptr (%struct.xLIST, %struct.xLIST* null, i32 1) to i32)), !dbg !4992
Instruction does not dominate all uses!
  %11 = bitcast %struct.xLIST* %xTasksWaitingToReceive to i8*
  %call32 = call i32 @icall_arg1p(i32 0, i8* bitcast (i32 (%struct.xLIST*)* @xTaskRemoveFromEventList to i8*), i8* %11, i32 ptrtoint (%struct.xLIST* getelementptr (%struct.xLIST, %struct.xLIST* null, i32 1) to i32)), !dbg !5099
Instruction does not dominate all uses!
  %8 = bitcast %struct.xLIST* %xTasksWaitingToSend to i8*
  %call26 = call i32 @icall_arg1p(i32 0, i8* bitcast (i32 (%struct.xLIST*)* @xTaskRemoveFromEventList to i8*), i8* %8, i32 ptrtoint (%struct.xLIST* getelementptr (%struct.xLIST, %struct.xLIST* null, i32 1) to i32)), !dbg !5201
Instruction does not dominate all uses!
  %10 = bitcast %struct.xTIME_OUT* %xTimeOut to i8*
  call void @xcall_arg1p(i32 0, i8* bitcast (void (%struct.xTIME_OUT*)* @vTaskInternalSetTimeOutState to i8*), i8* %10, i32 mul nuw (i32 ptrtoint (i32* getelementptr (i32, i32* null, i32 1) to i32), i32 2)), !dbg !5225
PHI nodes not grouped at top of basic block!
  %xEntryTimeSet.2 = phi i32 [ %xEntryTimeSet.0, %if.end31 ], [ %xEntryTimeSet.0, %if.then34 ], [ 1, %if.else35 ], [ 1, %if.then37 ], !dbg !5143
label %cleanup
Instruction does not dominate all uses!
  %9 = bitcast %struct.xLIST* %xTasksWaitingToReceive to i8*
  %call29 = call i32 @icall_arg1p(i32 0, i8* bitcast (i32 (%struct.xLIST*)* @xTaskRemoveFromEventList to i8*), i8* %9, i32 ptrtoint (%struct.xLIST* getelementptr (%struct.xLIST, %struct.xLIST* null, i32 1) to i32)), !dbg !5377
Instruction does not dominate all uses!
  %11 = bitcast %struct.xTIME_OUT* %xTimeOut to i8*
  call void @xcall_arg1p(i32 0, i8* bitcast (void (%struct.xTIME_OUT*)* @vTaskInternalSetTimeOutState to i8*), i8* %11, i32 mul nuw (i32 ptrtoint (i32* getelementptr (i32, i32* null, i32 1) to i32), i32 2)), !dbg !5401
PHI nodes not grouped at top of basic block!
  %xEntryTimeSet.2 = phi i32 [ %xEntryTimeSet.0, %if.end34 ], [ %xEntryTimeSet.0, %if.then37 ], [ 1, %if.else38 ], [ 1, %if.then40 ], !dbg !5319
label %cleanup
Instruction does not dominate all uses!
  %7 = bitcast %struct.xLIST* %xTasksWaitingToSend to i8*
  %call21 = call i32 @icall_arg1p(i32 0, i8* bitcast (i32 (%struct.xLIST*)* @xTaskRemoveFromEventList to i8*), i8* %7, i32 ptrtoint (%struct.xLIST* getelementptr (%struct.xLIST, %struct.xLIST* null, i32 1) to i32)), !dbg !5516
Instruction does not dominate all uses!
  %6 = bitcast %struct.xLIST_ITEM* %xTimerListItem to i8*
  %call7 = call i32 @icall_arg1p(i32 4, i8* bitcast (i32 (%struct.xLIST_ITEM*)* @uxListRemove to i8*), i8* %6, i32 ptrtoint (%struct.xLIST_ITEM* getelementptr (%struct.xLIST_ITEM, %struct.xLIST_ITEM* null, i32 1) to i32)), !dbg !6130
Instruction does not dominate all uses!
  %xTimerListItem = getelementptr inbounds %struct.tmrTimerControl, %struct.tmrTimerControl* %4, i32 0, i32 1, !dbg !6125
  %6 = bitcast %struct.xLIST_ITEM* %xTimerListItem to i8*
Instruction does not dominate all uses!
  %6 = bitcast %struct.xLIST_ITEM* %xTimerListItem to i8*
  %call = call i32 @icall_arg1p(i32 4, i8* bitcast (i32 (%struct.xLIST_ITEM*)* @uxListRemove to i8*), i8* %6, i32 ptrtoint (%struct.xLIST_ITEM* getelementptr (%struct.xLIST_ITEM, %struct.xLIST_ITEM* null, i32 1) to i32)), !dbg !6299
Instruction does not dominate all uses!
  %1 = bitcast %struct.xLIST_ITEM* %xTimerListItem to i8*
  call void @xcall_arg1p(i32 4, i8* bitcast (void (%struct.xLIST_ITEM*)* @vListInitialiseItem to i8*), i8* %1, i32 ptrtoint (%struct.xLIST_ITEM* getelementptr (%struct.xLIST_ITEM, %struct.xLIST_ITEM* null, i32 1) to i32)), !dbg !6371
Instruction does not dominate all uses!
  %1 = bitcast %struct.xLIST* %0 to i8*
  call void @xcall_arg1p(i32 4, i8* bitcast (void (%struct.xLIST*)* @vListInitialise to i8*), i8* %1, i32 ptrtoint (%struct.xLIST* getelementptr (%struct.xLIST, %struct.xLIST* null, i32 1) to i32)), !dbg !6698
Instruction does not dominate all uses!
  %0 = bitcast i8* %xTasksWaitingForBits to %struct.xLIST*, !dbg !6697
  %1 = bitcast %struct.xLIST* %0 to i8*
Instruction does not dominate all uses!
  %10 = bitcast %struct.EXTI_InitTypeDef* %EXTI_InitStructure to i8*
  call void @xcall_arg1p(i32 15, i8* bitcast (void (%struct.EXTI_InitTypeDef*)* @EXTI_Init to i8*), i8* %10, i32 mul nuw (i32 ptrtoint (i32* getelementptr (i32, i32* null, i32 1) to i32), i32 4)), !dbg !8344
Instruction does not dominate all uses!
  %11 = bitcast %struct.NVIC_InitTypeDef* %NVIC_InitStructure to i8*
  call void @xcall_arg1p(i32 1, i8* bitcast (void (%struct.NVIC_InitTypeDef*)* @NVIC_Init to i8*), i8* %11, i32 ptrtoint (%struct.NVIC_InitTypeDef* getelementptr (%struct.NVIC_InitTypeDef, %struct.NVIC_InitTypeDef* null, i32 1) to i32)), !dbg !8353
LLVM ERROR: Broken module found, compilation aborted!
PLEASE submit a bug report to https://bugs.llvm.org/ and include the crash backtrace.
Stack dump:
0.	Program arguments: llvm-dis ./temp.bc
 #0 0x0000557f4cd167d4 llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) /home/arslan/projects/LBC/llvm-pkg/llvm-project-llvmorg-12.0.0/llvm/lib/Support/Unix/Signals.inc:565:0
 #1 0x0000557f4cd1688b PrintStackTraceSignalHandler(void*) /home/arslan/projects/LBC/llvm-pkg/llvm-project-llvmorg-12.0.0/llvm/lib/Support/Unix/Signals.inc:632:0
 #2 0x0000557f4cd14549 llvm::sys::RunSignalHandlers() /home/arslan/projects/LBC/llvm-pkg/llvm-project-llvmorg-12.0.0/llvm/lib/Support/Signals.cpp:71:0
 #3 0x0000557f4cd16155 SignalHandler(int) /home/arslan/projects/LBC/llvm-pkg/llvm-project-llvmorg-12.0.0/llvm/lib/Support/Unix/Signals.inc:407:0
 #4 0x00007f1bffd613c0 __restore_rt (/lib/x86_64-linux-gnu/libpthread.so.0+0x153c0)
 #5 0x00007f1bff7ec18b raise /build/glibc-eX1tMB/glibc-2.31/signal/../sysdeps/unix/sysv/linux/raise.c:51:1
 #6 0x00007f1bff7cb859 abort /build/glibc-eX1tMB/glibc-2.31/stdlib/abort.c:81:7
 #7 0x0000557f4cc6b66f llvm::install_bad_alloc_error_handler(void (*)(void*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool), void*) /home/arslan/projects/LBC/llvm-pkg/llvm-project-llvmorg-12.0.0/llvm/lib/Support/ErrorHandling.cpp:130:0
 #8 0x0000557f4cc6b42b llvm::report_fatal_error(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool) /home/arslan/projects/LBC/llvm-pkg/llvm-project-llvmorg-12.0.0/llvm/lib/Support/ErrorHandling.cpp:86:0
 #9 0x0000557f4c9665ce llvm::UpgradeDebugInfo(llvm::Module&) /home/arslan/projects/LBC/llvm-pkg/llvm-project-llvmorg-12.0.0/llvm/lib/IR/AutoUpgrade.cpp:4019:0
#10 0x0000557f4c85a82b (anonymous namespace)::BitcodeReader::materializeModule() /home/arslan/projects/LBC/llvm-pkg/llvm-project-llvmorg-12.0.0/llvm/lib/Bitcode/Reader/BitcodeReader.cpp:5565:0
#11 0x0000557f4caedb9d llvm::Module::materializeAll() /home/arslan/projects/LBC/llvm-pkg/llvm-project-llvmorg-12.0.0/llvm/lib/IR/Module.cpp:448:0
#12 0x0000557f4c82eb68 main /home/arslan/projects/LBC/llvm-pkg/llvm-project-llvmorg-12.0.0/llvm/tools/llvm-dis/llvm-dis.cpp:176:0
#13 0x00007f1bff7cd0b3 __libc_start_main /build/glibc-eX1tMB/glibc-2.31/csu/../csu/libc-start.c:342:3
#14 0x0000557f4c82e00e _start (/home/arslan/projects/LBC/llvm-project/llvm-pkg/bin/llvm-dis+0x5400e)
make: *** [Makefile:3: all] Aborted (core dumped)
