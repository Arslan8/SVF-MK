WARNING: You're attempting to print out a bitcode file.
This is inadvisable as it may cause display problems. If
you REALLY want to taste LLVM bitcode first-hand, you
can force output with the `-f' option.

Call graph node <<null function>><<0x55653979a700>>  #uses=0
  CS<None> calls function 'ms_delay'
  CS<None> calls function 'HardFault_Handler'
  CS<None> calls function 'start_firmware'
  CS<None> calls function 'main'
  CS<None> calls function '_init'
  CS<None> calls function 'SystemInit'
  CS<None> calls function 'SystemCoreClockUpdate'
  CS<None> calls function 'tempFunc'
  CS<None> calls function 'tempFunc2'
  CS<None> calls function 'internal_compart'
  CS<None> calls function 'compart1'
  CS<None> calls function 'compart2'
  CS<None> calls function 'init_mpu'
  CS<None> calls function 'rtmk_init'
  CS<None> calls function 'switch_view'
  CS<None> calls function 'DebugMon_Handler'
  CS<None> calls function 'xcall_arg0'
  CS<None> calls function 'icall_arg0'
  CS<None> calls function 'icall_arg0_noid'
  CS<None> calls function 'xcall_arg0_noid'

Call graph node for function: 'DebugMon_Handler'<<0x55653976e510>>  #uses=1
  CS<0x5565397c1670> calls external node

Call graph node for function: 'HardFault_Handler'<<0x55653979a8a0>>  #uses=1

Call graph node for function: 'SetSysClock'<<0x55653976db80>>  #uses=1

Call graph node for function: 'SystemCoreClockUpdate'<<0x55653976dc00>>  #uses=1

Call graph node for function: 'SystemInit'<<0x55653976db00>>  #uses=1
  CS<0x55653978f7b0> calls function 'SetSysClock'

Call graph node for function: '_init'<<0x55653976d930>>  #uses=1

Call graph node for function: 'compart1'<<0x55653979aa00>>  #uses=3
  CS<0x5565397b58d0> calls external node
  CS<0x5565397b5c90> calls external node
  CS<0x5565397b5ee0> calls external node
  CS<0x5565397b60d0> calls function 'compart2'

Call graph node for function: 'compart2'<<0x55653976e120>>  #uses=2
  CS<0x5565397b7bc0> calls function 'compart1'

Call graph node for function: 'getCompartmentFromAddr'<<0x556539771250>>  #uses=2

Call graph node for function: 'icall_arg0'<<0x55653976e6c0>>  #uses=2
  CS<0x5565397c51d0> calls function 'switch_view'
  CS<0x5565397c5520> calls external node
  CS<0x5565397c56f0> calls function 'switch_view'

Call graph node for function: 'icall_arg0_noid'<<0x55653976e7f0>>  #uses=1
  CS<0x5565397c6160> calls function 'getCompartmentFromAddr'
  CS<0x5565397c62f0> calls function 'icall_arg0'

Call graph node for function: 'init_mpu'<<0x55653976e1a0>>  #uses=2
  CS<0x5565397af960> calls external node
  CS<0x5565397afa10> calls external node
  CS<0x5565397ba6d0> calls external node
  CS<0x5565397ba780> calls external node

Call graph node for function: 'internal_compart'<<0x55653976e070>>  #uses=1

Call graph node for function: 'main'<<0x55653979aa80>>  #uses=1
  CS<0x5565397a4f20> calls external node
  CS<0x5565397a4fd0> calls external node
  CS<0x5565397a5080> calls function 'start_firmware'

Call graph node for function: 'ms_delay'<<0x55653979a7c0>>  #uses=1
  CS<0x5565397a2260> calls external node

Call graph node for function: 'rtmk_init'<<0x55653976e300>>  #uses=1
  CS<0x5565397ad660> calls function 'init_mpu'
  CS<0x5565397ad700> calls function 'switch_view'

Call graph node for function: 'start_firmware'<<0x55653979a980>>  #uses=2
  CS<0x5565397a4710> calls function 'compart1'

Call graph node for function: 'switch_view'<<0x55653976e380>>  #uses=6
  CS<0x5565397ae0c0> calls external node
  CS<0x5565397ae140> calls external node
  CS<0x5565397be4e0> calls external node
  CS<0x5565397be590> calls external node

Call graph node for function: 'tempFunc'<<0x55653976dc80>>  #uses=1
  CS<0x5565397b3390> calls external node

Call graph node for function: 'tempFunc2'<<0x55653976dd30>>  #uses=1
  CS<0x5565397b3b40> calls external node

Call graph node for function: 'xcall_arg0'<<0x55653976e590>>  #uses=2
  CS<0x5565397c2bf0> calls function 'switch_view'
  CS<0x5565397c2dd0> calls external node
  CS<0x5565397c2f10> calls function 'switch_view'

Call graph node for function: 'xcall_arg0_noid'<<0x5565397712d0>>  #uses=1
  CS<0x5565397c96b0> calls function 'getCompartmentFromAddr'
  CS<0x5565397c9840> calls function 'xcall_arg0'

