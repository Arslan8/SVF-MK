WARNING: You're attempting to print out a bitcode file.
This is inadvisable as it may cause display problems. If
you REALLY want to taste LLVM bitcode first-hand, you
can force output with the `-f' option.

Call graph node <<null function>><<0x5599f639f670>>  #uses=0
  CS<None> calls function 'ms_delay'
  CS<None> calls function 'HardFault_Handler'
  CS<None> calls function 'start_firmware'
  CS<None> calls function 'main'
  CS<None> calls function '_init'
  CS<None> calls function 'SystemInit'
  CS<None> calls function 'SystemCoreClockUpdate'
  CS<None> calls function 'tempFunc'
  CS<None> calls function 'tempFunc2'
  CS<None> calls function 'internal_compart'
  CS<None> calls function 'compart1'
  CS<None> calls function 'compart2'
  CS<None> calls function 'init_mpu'
  CS<None> calls function 'rtmk_init'
  CS<None> calls function 'switch_view'
  CS<None> calls function 'DebugMon_Handler'
  CS<None> calls function 'xcall_arg0'
  CS<None> calls function 'icall_arg0'
  CS<None> calls function 'icall_arg0_noid'
  CS<None> calls function 'xcall_arg0_noid'

Call graph node for function: 'DebugMon_Handler'<<0x5599f6373430>>  #uses=1
  CS<0x5599f63c65d0> calls external node

Call graph node for function: 'HardFault_Handler'<<0x5599f639f810>>  #uses=1

Call graph node for function: 'SetSysClock'<<0x5599f6372ad0>>  #uses=1

Call graph node for function: 'SystemCoreClockUpdate'<<0x5599f6372b50>>  #uses=1

Call graph node for function: 'SystemInit'<<0x5599f6372a50>>  #uses=1
  CS<0x5599f6394780> calls function 'SetSysClock'

Call graph node for function: '_init'<<0x5599f6372880>>  #uses=1

Call graph node for function: 'compart1'<<0x5599f639f970>>  #uses=3
  CS<0x5599f63ba860> calls external node
  CS<0x5599f63bac20> calls external node
  CS<0x5599f63bae70> calls external node
  CS<0x5599f63bb060> calls function 'compart2'

Call graph node for function: 'compart2'<<0x5599f6373040>>  #uses=2
  CS<0x5599f63bcb20> calls function 'compart1'

Call graph node for function: 'getCompartmentFromAddr'<<0x5599f63737c0>>  #uses=2

Call graph node for function: 'icall_arg0'<<0x5599f6373610>>  #uses=2
  CS<0x5599f63ca130> calls function 'switch_view'
  CS<0x5599f63ca480> calls external node
  CS<0x5599f63ca650> calls function 'switch_view'

Call graph node for function: 'icall_arg0_noid'<<0x5599f6373740>>  #uses=1
  CS<0x5599f63cb0c0> calls function 'getCompartmentFromAddr'
  CS<0x5599f63cb250> calls function 'icall_arg0'

Call graph node for function: 'init_mpu'<<0x5599f63730c0>>  #uses=2
  CS<0x5599f63b4960> calls external node
  CS<0x5599f63b4a10> calls external node
  CS<0x5599f63bf630> calls external node
  CS<0x5599f63bf6e0> calls external node

Call graph node for function: 'internal_compart'<<0x5599f6372f90>>  #uses=1

Call graph node for function: 'main'<<0x5599f639f9f0>>  #uses=1
  CS<0x5599f63a9f20> calls external node
  CS<0x5599f63a9fd0> calls external node
  CS<0x5599f63aa080> calls function 'start_firmware'

Call graph node for function: 'ms_delay'<<0x5599f639f730>>  #uses=1
  CS<0x5599f63a7260> calls external node

Call graph node for function: 'rtmk_init'<<0x5599f6373220>>  #uses=1
  CS<0x5599f63b2640> calls function 'init_mpu'
  CS<0x5599f63b26e0> calls function 'switch_view'

Call graph node for function: 'start_firmware'<<0x5599f639f8f0>>  #uses=2
  CS<0x5599f63a9710> calls function 'compart1'

Call graph node for function: 'switch_view'<<0x5599f63732a0>>  #uses=6
  CS<0x5599f63b30a0> calls external node
  CS<0x5599f63b3120> calls external node
  CS<0x5599f63c3460> calls external node
  CS<0x5599f63c3510> calls external node

Call graph node for function: 'tempFunc'<<0x5599f6372bd0>>  #uses=1
  CS<0x5599f63b8390> calls external node

Call graph node for function: 'tempFunc2'<<0x5599f6372c50>>  #uses=1
  CS<0x5599f63b8b40> calls external node

Call graph node for function: 'xcall_arg0'<<0x5599f63734b0>>  #uses=2
  CS<0x5599f63c7b50> calls function 'switch_view'
  CS<0x5599f63c7d30> calls external node
  CS<0x5599f63c7e70> calls function 'switch_view'

Call graph node for function: 'xcall_arg0_noid'<<0x5599f6376210>>  #uses=1
  CS<0x5599f63ce610> calls function 'getCompartmentFromAddr'
  CS<0x5599f63ce7a0> calls function 'xcall_arg0'

