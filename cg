WARNING: You're attempting to print out a bitcode file.
This is inadvisable as it may cause display problems. If
you REALLY want to taste LLVM bitcode first-hand, you
can force output with the `-f' option.

Call graph node <<null function>><<0x558a84b0c660>>  #uses=0
  CS<None> calls function 'vTaskSwitchContext'
  CS<None> calls function 'xTaskCreate'
  CS<None> calls function 'llvm.memset.p0i8.i32'
  CS<None> calls function 'vTaskDelete'
  CS<None> calls function 'xTaskDelayUntil'
  CS<None> calls function 'vTaskSuspendAll'
  CS<None> calls function 'xTaskResumeAll'
  CS<None> calls function 'xTaskIncrementTick'
  CS<None> calls function 'vTaskDelay'
  CS<None> calls function 'eTaskGetState'
  CS<None> calls function 'uxTaskPriorityGet'
  CS<None> calls function 'uxTaskPriorityGetFromISR'
  CS<None> calls function 'vTaskPrioritySet'
  CS<None> calls function 'vTaskSuspend'
  CS<None> calls function 'vTaskResume'
  CS<None> calls function 'xTaskResumeFromISR'
  CS<None> calls function 'vTaskStartScheduler'
  CS<None> calls function 'prvIdleTask'
  CS<None> calls function 'vTaskEndScheduler'
  CS<None> calls function 'xTaskGetTickCount'
  CS<None> calls function 'xTaskGetTickCountFromISR'
  CS<None> calls function 'uxTaskGetNumberOfTasks'
  CS<None> calls function 'pcTaskGetName'
  CS<None> calls function 'uxTaskGetSystemState'
  CS<None> calls function 'vTaskGetInfo'
  CS<None> calls function 'xTaskCatchUpTicks'
  CS<None> calls function 'vTaskPlaceOnEventList'
  CS<None> calls function 'vTaskPlaceOnUnorderedEventList'
  CS<None> calls function 'vTaskPlaceOnEventListRestricted'
  CS<None> calls function 'xTaskRemoveFromEventList'
  CS<None> calls function 'vTaskRemoveFromUnorderedEventList'
  CS<None> calls function 'vTaskSetTimeOutState'
  CS<None> calls function 'vTaskInternalSetTimeOutState'
  CS<None> calls function 'xTaskCheckForTimeOut'
  CS<None> calls function 'vTaskMissedYield'
  CS<None> calls function 'uxTaskGetTaskNumber'
  CS<None> calls function 'vTaskSetTaskNumber'
  CS<None> calls function 'xTaskGetCurrentTaskHandle'
  CS<None> calls function 'xTaskGetSchedulerState'
  CS<None> calls function 'xTaskPriorityInherit'
  CS<None> calls function 'xTaskPriorityDisinherit'
  CS<None> calls function 'vTaskPriorityDisinheritAfterTimeout'
  CS<None> calls function 'uxTaskResetEventItemValue'
  CS<None> calls function 'pvTaskIncrementMutexHeldCount'
  CS<None> calls function 'ulTaskGenericNotifyTake'
  CS<None> calls function 'xTaskGenericNotifyWait'
  CS<None> calls function 'xTaskGenericNotify'
  CS<None> calls function 'xTaskGenericNotifyFromISR'
  CS<None> calls function 'vTaskGenericNotifyGiveFromISR'
  CS<None> calls function 'xTaskGenericNotifyStateClear'
  CS<None> calls function 'ulTaskGenericNotifyValueClear'
  CS<None> calls function 'testMalloc'
  CS<None> calls function 'main'
  CS<None> calls function 'vApplicationTickHook'
  CS<None> calls function 'TIM3_IRQHandler'
  CS<None> calls function 'TIM2_IRQHandler'
  CS<None> calls function 'vRegTestClearFlopRegistersToParameterValue'
  CS<None> calls function 'ulRegTestCheckFlopRegistersContainParameterValue'
  CS<None> calls function 'EXTI9_5_IRQHandler'
  CS<None> calls function 'vApplicationMallocFailedHook'
  CS<None> calls function 'vApplicationIdleHook'
  CS<None> calls function 'vApplicationStackOverflowHook'
  CS<None> calls function '_sbrk'
  CS<None> calls function 'vListInitialise'
  CS<None> calls function 'vListInitialiseItem'
  CS<None> calls function 'vListInsertEnd'
  CS<None> calls function 'vListInsert'
  CS<None> calls function 'uxListRemove'
  CS<None> calls function 'xQueueGenericReset'
  CS<None> calls function 'xQueueGenericCreate'
  CS<None> calls function 'xQueueCreateMutex'
  CS<None> calls function 'xQueueGenericSend'
  CS<None> calls function 'llvm.memcpy.p0i8.p0i8.i32'
  CS<None> calls function 'xQueueGiveMutexRecursive'
  CS<None> calls function 'xQueueTakeMutexRecursive'
  CS<None> calls function 'xQueueSemaphoreTake'
  CS<None> calls function 'xQueueCreateCountingSemaphore'
  CS<None> calls function 'xQueueGenericSend_bridge'
  CS<None> calls function 'xQueueGenericSendFromISR'
  CS<None> calls function 'xQueueGiveFromISR'
  CS<None> calls function 'xQueueReceive'
  CS<None> calls function 'xQueuePeek'
  CS<None> calls function 'xQueueReceiveFromISR'
  CS<None> calls function 'xQueuePeekFromISR'
  CS<None> calls function 'uxQueueMessagesWaiting'
  CS<None> calls function 'uxQueueSpacesAvailable'
  CS<None> calls function 'uxQueueMessagesWaitingFromISR'
  CS<None> calls function 'vQueueDelete'
  CS<None> calls function 'vQueueUnregisterQueue'
  CS<None> calls function 'uxQueueGetQueueNumber'
  CS<None> calls function 'vQueueSetQueueNumber'
  CS<None> calls function 'ucQueueGetQueueType'
  CS<None> calls function 'xQueueIsQueueEmptyFromISR'
  CS<None> calls function 'xQueueIsQueueFullFromISR'
  CS<None> calls function 'vQueueAddToRegistry'
  CS<None> calls function 'pcQueueGetName'
  CS<None> calls function 'vQueueWaitForMessageRestricted'
  CS<None> calls function 'xTimerCreateTimerTask'
  CS<None> calls function 'prvTimerTask'
  CS<None> calls function 'xTimerCreate'
  CS<None> calls function 'xTimerGenericCommand'
  CS<None> calls function 'xTimerGetTimerDaemonTaskHandle'
  CS<None> calls function 'xTimerGetPeriod'
  CS<None> calls function 'vTimerSetReloadMode'
  CS<None> calls function 'uxTimerGetReloadMode'
  CS<None> calls function 'xTimerGetExpiryTime'
  CS<None> calls function 'pcTimerGetName'
  CS<None> calls function 'xTimerIsTimerActive'
  CS<None> calls function 'pvTimerGetTimerID'
  CS<None> calls function 'vTimerSetTimerID'
  CS<None> calls function 'uxTimerGetTimerNumber'
  CS<None> calls function 'vTimerSetTimerNumber'
  CS<None> calls function 'xEventGroupCreate'
  CS<None> calls function 'xEventGroupSync'
  CS<None> calls function 'xEventGroupSetBits'
  CS<None> calls function 'xEventGroupWaitBits'
  CS<None> calls function 'xEventGroupClearBits'
  CS<None> calls function 'xEventGroupGetBitsFromISR'
  CS<None> calls function 'vEventGroupDelete'
  CS<None> calls function 'vEventGroupSetBitsCallback'
  CS<None> calls function 'vEventGroupClearBitsCallback'
  CS<None> calls function 'uxEventGroupGetNumber'
  CS<None> calls function 'vEventGroupSetNumber'
  CS<None> calls function 'pxPortInitialiseStack'
  CS<None> calls function 'prvTaskExitError'
  CS<None> calls function 'SVC_Handler'
  CS<None> calls function 'xPortStartScheduler'
  CS<None> calls function 'vPortSetupTimerInterrupt'
  CS<None> calls function 'vPortEndScheduler'
  CS<None> calls function 'vPortEnterCritical'
  CS<None> calls function 'vPortExitCritical'
  CS<None> calls function 'PendSV_Handler'
  CS<None> calls function 'SysTick_Handler'
  CS<None> calls function 'vPortValidateInterruptPriority'
  CS<None> calls function 'pvPortMalloc'
  CS<None> calls function 'pvPortMallocbyID'
  CS<None> calls function 'vPortFree'
  CS<None> calls function 'vPortInitialiseBlocks'
  CS<None> calls function 'xPortGetFreeHeapSize'
  CS<None> calls function 'NVIC_PriorityGroupConfig'
  CS<None> calls function 'NVIC_Init'
  CS<None> calls function 'NVIC_SetVectorTable'
  CS<None> calls function 'NVIC_SystemLPConfig'
  CS<None> calls function 'SysTick_CLKSourceConfig'
  CS<None> calls function 'vStartLEDFlashTasks'
  CS<None> calls function 'vLEDFlashTask'
  CS<None> calls function 'SystemInit'
  CS<None> calls function 'SystemCoreClockUpdate'
  CS<None> calls function 'init_mpu'
  CS<None> calls function 'rtmk_init'
  CS<None> calls function 'switch_view'
  CS<None> calls function 'DebugMon_Handler'
  CS<None> calls function 'lastCompart'
  CS<None> calls function 'xcall_arg0'
  CS<None> calls function 'xcall_arg1i'
  CS<None> calls function 'pcall_arg0'
  CS<None> calls function 'pcall_arg3iii'
  CS<None> calls function 'pcall_arg1i'
  CS<None> calls function 'xcall_arg2ii'
  CS<None> calls function 'rtmkcpy'
  CS<None> calls function 'xcall_arg1p'
  CS<None> calls function 'xcall_arg2pi'
  CS<None> calls function 'xcall_arg3pii'
  CS<None> calls function 'xcall_arg2pp'
  CS<None> calls function 'switch_view_svc'
  CS<None> calls function 'icall_arg0'
  CS<None> calls function 'icall_arg1i'
  CS<None> calls function 'icall_arg1p'
  CS<None> calls function 'getCompartmentFromAddr'
  CS<None> calls function 'icall_arg0_noid'
  CS<None> calls function 'xcall_arg0_noid'
  CS<None> calls function 'xcall_arg1p_noid'
  CS<None> calls function 'icall_arg2pi'
  CS<None> calls function 'icall_arg2pp'
  CS<None> calls function 'icall_arg3ppi'
  CS<None> calls function 'icall_arg4ppii'
  CS<None> calls function 'icall_arg4pppi'
  CS<None> calls function 'icall_arg6ppipip'
  CS<None> calls function 'vParTestInitialise'
  CS<None> calls function 'vParTestSetLED'
  CS<None> calls function 'vParTestToggleLED'
  CS<None> calls function 'STM_EVAL_GPIOReset'
  CS<None> calls function 'STM_EVAL_LEDInit'
  CS<None> calls function 'STM_EVAL_LEDOn'
  CS<None> calls function 'STM_EVAL_LEDOff'
  CS<None> calls function 'STM_EVAL_LEDToggle'
  CS<None> calls function 'STM_EVAL_PBInit'
  CS<None> calls function 'STM_EVAL_PBGetState'
  CS<None> calls function 'STM_EVAL_COMInit'
  CS<None> calls function 'GPIO_DeInit'
  CS<None> calls function 'GPIO_Init'
  CS<None> calls function 'GPIO_StructInit'
  CS<None> calls function 'GPIO_PinLockConfig'
  CS<None> calls function 'GPIO_ReadInputDataBit'
  CS<None> calls function 'GPIO_ReadInputData'
  CS<None> calls function 'GPIO_ReadOutputDataBit'
  CS<None> calls function 'GPIO_ReadOutputData'
  CS<None> calls function 'GPIO_SetBits'
  CS<None> calls function 'GPIO_ResetBits'
  CS<None> calls function 'GPIO_WriteBit'
  CS<None> calls function 'GPIO_Write'
  CS<None> calls function 'GPIO_ToggleBits'
  CS<None> calls function 'GPIO_PinAFConfig'
  CS<None> calls function 'RCC_DeInit'
  CS<None> calls function 'RCC_HSEConfig'
  CS<None> calls function 'RCC_WaitForHSEStartUp'
  CS<None> calls function 'RCC_GetFlagStatus'
  CS<None> calls function 'RCC_AdjustHSICalibrationValue'
  CS<None> calls function 'RCC_HSICmd'
  CS<None> calls function 'RCC_LSEConfig'
  CS<None> calls function 'RCC_LSICmd'
  CS<None> calls function 'RCC_PLLConfig'
  CS<None> calls function 'RCC_PLLCmd'
  CS<None> calls function 'RCC_PLLI2SConfig'
  CS<None> calls function 'RCC_PLLI2SCmd'
  CS<None> calls function 'RCC_ClockSecuritySystemCmd'
  CS<None> calls function 'RCC_MCO1Config'
  CS<None> calls function 'RCC_MCO2Config'
  CS<None> calls function 'RCC_SYSCLKConfig'
  CS<None> calls function 'RCC_GetSYSCLKSource'
  CS<None> calls function 'RCC_HCLKConfig'
  CS<None> calls function 'RCC_PCLK1Config'
  CS<None> calls function 'RCC_PCLK2Config'
  CS<None> calls function 'RCC_GetClocksFreq'
  CS<None> calls function 'RCC_RTCCLKConfig'
  CS<None> calls function 'RCC_RTCCLKCmd'
  CS<None> calls function 'RCC_BackupResetCmd'
  CS<None> calls function 'RCC_I2SCLKConfig'
  CS<None> calls function 'RCC_AHB1PeriphClockCmd'
  CS<None> calls function 'RCC_AHB2PeriphClockCmd'
  CS<None> calls function 'RCC_AHB3PeriphClockCmd'
  CS<None> calls function 'RCC_APB1PeriphClockCmd'
  CS<None> calls function 'RCC_APB2PeriphClockCmd'
  CS<None> calls function 'RCC_AHB1PeriphResetCmd'
  CS<None> calls function 'RCC_AHB2PeriphResetCmd'
  CS<None> calls function 'RCC_AHB3PeriphResetCmd'
  CS<None> calls function 'RCC_APB1PeriphResetCmd'
  CS<None> calls function 'RCC_APB2PeriphResetCmd'
  CS<None> calls function 'RCC_AHB1PeriphClockLPModeCmd'
  CS<None> calls function 'RCC_AHB2PeriphClockLPModeCmd'
  CS<None> calls function 'RCC_AHB3PeriphClockLPModeCmd'
  CS<None> calls function 'RCC_APB1PeriphClockLPModeCmd'
  CS<None> calls function 'RCC_APB2PeriphClockLPModeCmd'
  CS<None> calls function 'RCC_ITConfig'
  CS<None> calls function 'RCC_ClearFlag'
  CS<None> calls function 'RCC_GetITStatus'
  CS<None> calls function 'RCC_ClearITPendingBit'
  CS<None> calls function 'EXTI_DeInit'
  CS<None> calls function 'EXTI_Init'
  CS<None> calls function 'EXTI_StructInit'
  CS<None> calls function 'EXTI_GenerateSWInterrupt'
  CS<None> calls function 'EXTI_GetFlagStatus'
  CS<None> calls function 'EXTI_ClearFlag'
  CS<None> calls function 'EXTI_GetITStatus'
  CS<None> calls function 'EXTI_ClearITPendingBit'
  CS<None> calls function 'SYSCFG_DeInit'
  CS<None> calls function 'SYSCFG_MemoryRemapConfig'
  CS<None> calls function 'SYSCFG_EXTILineConfig'
  CS<None> calls function 'SYSCFG_ETH_MediaInterfaceConfig'
  CS<None> calls function 'SYSCFG_CompensationCellCmd'
  CS<None> calls function 'SYSCFG_GetCompensationCellStatus'

Call graph node for function: 'DebugMon_Handler'<<0x558a84b51050>>  #uses=1
  CS<0x558a84e20fb0> calls external node

Call graph node for function: 'EXTI9_5_IRQHandler'<<0x558a84b4fe60>>  #uses=1
  CS<0x558a84cb3a00> calls function 'EXTI_ClearITPendingBit'
  CS<0x558a84cb3b90> calls function 'xQueueGiveFromISR'
  CS<0x558a84cb3ee0> calls external node
  CS<0x558a84cb3f60> calls external node

Call graph node for function: 'EXTI_ClearFlag'<<0x558a84b94a50>>  #uses=1

Call graph node for function: 'EXTI_ClearITPendingBit'<<0x558a84b4fee0>>  #uses=2

Call graph node for function: 'EXTI_DeInit'<<0x558a84b94850>>  #uses=1

Call graph node for function: 'EXTI_GenerateSWInterrupt'<<0x558a84b94950>>  #uses=1

Call graph node for function: 'EXTI_GetFlagStatus'<<0x558a84b949d0>>  #uses=1

Call graph node for function: 'EXTI_GetITStatus'<<0x558a84b94ad0>>  #uses=1

Call graph node for function: 'EXTI_Init'<<0x558a84b92190>>  #uses=2

Call graph node for function: 'EXTI_StructInit'<<0x558a84b948d0>>  #uses=1

Call graph node for function: 'GPIO_DeInit'<<0x558a84afe3d0>>  #uses=10
  CS<0x558a84e766f0> calls function 'RCC_AHB1PeriphResetCmd'
  CS<0x558a84e767e0> calls function 'RCC_AHB1PeriphResetCmd'
  CS<0x558a84e76bb0> calls function 'RCC_AHB1PeriphResetCmd'
  CS<0x558a84e76ca0> calls function 'RCC_AHB1PeriphResetCmd'
  CS<0x558a84e77070> calls function 'RCC_AHB1PeriphResetCmd'
  CS<0x558a84e77160> calls function 'RCC_AHB1PeriphResetCmd'
  CS<0x558a84e77530> calls function 'RCC_AHB1PeriphResetCmd'
  CS<0x558a84e77620> calls function 'RCC_AHB1PeriphResetCmd'
  CS<0x558a84e779f0> calls function 'RCC_AHB1PeriphResetCmd'
  CS<0x558a84e77ae0> calls function 'RCC_AHB1PeriphResetCmd'
  CS<0x558a84e77eb0> calls function 'RCC_AHB1PeriphResetCmd'
  CS<0x558a84e77fa0> calls function 'RCC_AHB1PeriphResetCmd'
  CS<0x558a84e78370> calls function 'RCC_AHB1PeriphResetCmd'
  CS<0x558a84e78460> calls function 'RCC_AHB1PeriphResetCmd'
  CS<0x558a84e78830> calls function 'RCC_AHB1PeriphResetCmd'
  CS<0x558a84e78920> calls function 'RCC_AHB1PeriphResetCmd'
  CS<0x558a84e78cf0> calls function 'RCC_AHB1PeriphResetCmd'
  CS<0x558a84e78de0> calls function 'RCC_AHB1PeriphResetCmd'

Call graph node for function: 'GPIO_Init'<<0x558a84afe9e0>>  #uses=5

Call graph node for function: 'GPIO_PinAFConfig'<<0x558a84b92390>>  #uses=3

Call graph node for function: 'GPIO_PinLockConfig'<<0x558a84b92f50>>  #uses=1

Call graph node for function: 'GPIO_ReadInputData'<<0x558a84b92fd0>>  #uses=1

Call graph node for function: 'GPIO_ReadInputDataBit'<<0x558a84b92290>>  #uses=2

Call graph node for function: 'GPIO_ReadOutputData'<<0x558a84b930d0>>  #uses=1

Call graph node for function: 'GPIO_ReadOutputDataBit'<<0x558a84b93050>>  #uses=1

Call graph node for function: 'GPIO_ResetBits'<<0x558a84b931d0>>  #uses=1

Call graph node for function: 'GPIO_SetBits'<<0x558a84b93150>>  #uses=1

Call graph node for function: 'GPIO_StructInit'<<0x558a84b92ed0>>  #uses=1

Call graph node for function: 'GPIO_ToggleBits'<<0x558a84b93350>>  #uses=1

Call graph node for function: 'GPIO_Write'<<0x558a84b932d0>>  #uses=1

Call graph node for function: 'GPIO_WriteBit'<<0x558a84b93250>>  #uses=1

Call graph node for function: 'NVIC_Init'<<0x558a84b50830>>  #uses=2

Call graph node for function: 'NVIC_PriorityGroupConfig'<<0x558a84b4fa00>>  #uses=2

Call graph node for function: 'NVIC_SetPendingIRQ'<<0x558a84b4fc80>>  #uses=1

Call graph node for function: 'NVIC_SetVectorTable'<<0x558a84b508b0>>  #uses=1

Call graph node for function: 'NVIC_SystemLPConfig'<<0x558a84b50930>>  #uses=1

Call graph node for function: 'PendSV_Handler'<<0x558a84b502b0>>  #uses=1
  CS<0x558a84df4430> calls external node

Call graph node for function: 'RCC_AHB1PeriphClockCmd'<<0x558a84afe960>>  #uses=4

Call graph node for function: 'RCC_AHB1PeriphClockLPModeCmd'<<0x558a84b943d0>>  #uses=1

Call graph node for function: 'RCC_AHB1PeriphResetCmd'<<0x558a84b92560>>  #uses=19

Call graph node for function: 'RCC_AHB2PeriphClockCmd'<<0x558a84b94050>>  #uses=1

Call graph node for function: 'RCC_AHB2PeriphClockLPModeCmd'<<0x558a84b94450>>  #uses=1

Call graph node for function: 'RCC_AHB2PeriphResetCmd'<<0x558a84b941d0>>  #uses=1

Call graph node for function: 'RCC_AHB3PeriphClockCmd'<<0x558a84b940d0>>  #uses=1

Call graph node for function: 'RCC_AHB3PeriphClockLPModeCmd'<<0x558a84b944d0>>  #uses=1

Call graph node for function: 'RCC_AHB3PeriphResetCmd'<<0x558a84b94250>>  #uses=1

Call graph node for function: 'RCC_APB1PeriphClockCmd'<<0x558a84b94150>>  #uses=1

Call graph node for function: 'RCC_APB1PeriphClockLPModeCmd'<<0x558a84b94550>>  #uses=1

Call graph node for function: 'RCC_APB1PeriphResetCmd'<<0x558a84b942d0>>  #uses=1

Call graph node for function: 'RCC_APB2PeriphClockCmd'<<0x558a84afeae0>>  #uses=3

Call graph node for function: 'RCC_APB2PeriphClockLPModeCmd'<<0x558a84b945d0>>  #uses=1

Call graph node for function: 'RCC_APB2PeriphResetCmd'<<0x558a84b94350>>  #uses=3

Call graph node for function: 'RCC_AdjustHSICalibrationValue'<<0x558a84b935d0>>  #uses=1

Call graph node for function: 'RCC_BackupResetCmd'<<0x558a84b93f50>>  #uses=1

Call graph node for function: 'RCC_ClearFlag'<<0x558a84b946d0>>  #uses=1

Call graph node for function: 'RCC_ClearITPendingBit'<<0x558a84b947d0>>  #uses=1

Call graph node for function: 'RCC_ClockSecuritySystemCmd'<<0x558a84b939d0>>  #uses=1

Call graph node for function: 'RCC_DeInit'<<0x558a84b933d0>>  #uses=1

Call graph node for function: 'RCC_GetClocksFreq'<<0x558a84b93dd0>>  #uses=1

Call graph node for function: 'RCC_GetFlagStatus'<<0x558a84b93550>>  #uses=3

Call graph node for function: 'RCC_GetITStatus'<<0x558a84b94750>>  #uses=1

Call graph node for function: 'RCC_GetSYSCLKSource'<<0x558a84b93bd0>>  #uses=1

Call graph node for function: 'RCC_HCLKConfig'<<0x558a84b93c50>>  #uses=1

Call graph node for function: 'RCC_HSEConfig'<<0x558a84b93450>>  #uses=1

Call graph node for function: 'RCC_HSICmd'<<0x558a84b93650>>  #uses=1

Call graph node for function: 'RCC_I2SCLKConfig'<<0x558a84b93fd0>>  #uses=1

Call graph node for function: 'RCC_ITConfig'<<0x558a84b94650>>  #uses=1

Call graph node for function: 'RCC_LSEConfig'<<0x558a84b936d0>>  #uses=1

Call graph node for function: 'RCC_LSICmd'<<0x558a84b93750>>  #uses=1

Call graph node for function: 'RCC_MCO1Config'<<0x558a84b93a50>>  #uses=1

Call graph node for function: 'RCC_MCO2Config'<<0x558a84b93ad0>>  #uses=1

Call graph node for function: 'RCC_PCLK1Config'<<0x558a84b93cd0>>  #uses=1

Call graph node for function: 'RCC_PCLK2Config'<<0x558a84b93d50>>  #uses=1

Call graph node for function: 'RCC_PLLCmd'<<0x558a84b93850>>  #uses=1

Call graph node for function: 'RCC_PLLConfig'<<0x558a84b937d0>>  #uses=1

Call graph node for function: 'RCC_PLLI2SCmd'<<0x558a84b93950>>  #uses=1

Call graph node for function: 'RCC_PLLI2SConfig'<<0x558a84b938d0>>  #uses=1

Call graph node for function: 'RCC_RTCCLKCmd'<<0x558a84b93ed0>>  #uses=1

Call graph node for function: 'RCC_RTCCLKConfig'<<0x558a84b93e50>>  #uses=1

Call graph node for function: 'RCC_SYSCLKConfig'<<0x558a84b93b50>>  #uses=1

Call graph node for function: 'RCC_WaitForHSEStartUp'<<0x558a84b934d0>>  #uses=1
  CS<0x558a84e96f40> calls function 'RCC_GetFlagStatus'
  CS<0x558a84e97880> calls function 'RCC_GetFlagStatus'

Call graph node for function: 'STM_EVAL_COMInit'<<0x558a84b92310>>  #uses=1
  CS<0x558a84e71c00> calls function 'RCC_AHB1PeriphClockCmd'
  CS<0x558a84e72130> calls function 'RCC_APB2PeriphClockCmd'
  CS<0x558a84e72950> calls function 'GPIO_PinAFConfig'
  CS<0x558a84e730d0> calls function 'GPIO_PinAFConfig'
  CS<0x558a84e73ea0> calls function 'GPIO_Init'
  CS<0x558a84e74760> calls function 'GPIO_Init'

Call graph node for function: 'STM_EVAL_GPIOReset'<<0x558a84afe350>>  #uses=1
  CS<0x558a84e65ae0> calls function 'GPIO_DeInit'
  CS<0x558a84e65b80> calls function 'GPIO_DeInit'
  CS<0x558a84e65c50> calls function 'GPIO_DeInit'
  CS<0x558a84e65d20> calls function 'GPIO_DeInit'
  CS<0x558a84e65df0> calls function 'GPIO_DeInit'
  CS<0x558a84e65ec0> calls function 'GPIO_DeInit'
  CS<0x558a84e65f90> calls function 'GPIO_DeInit'
  CS<0x558a84e66060> calls function 'GPIO_DeInit'
  CS<0x558a84e66130> calls function 'GPIO_DeInit'

Call graph node for function: 'STM_EVAL_LEDInit'<<0x558a84afe8e0>>  #uses=1
  CS<0x558a84d8ad30> calls function 'RCC_AHB1PeriphClockCmd'
  CS<0x558a84d8bb00> calls function 'GPIO_Init'

Call graph node for function: 'STM_EVAL_LEDOff'<<0x558a84afe1f0>>  #uses=2

Call graph node for function: 'STM_EVAL_LEDOn'<<0x558a84afe170>>  #uses=2

Call graph node for function: 'STM_EVAL_LEDToggle'<<0x558a84afe270>>  #uses=2

Call graph node for function: 'STM_EVAL_PBGetState'<<0x558a84b92210>>  #uses=1
  CS<0x558a84e701b0> calls function 'GPIO_ReadInputDataBit'

Call graph node for function: 'STM_EVAL_PBInit'<<0x558a84afea60>>  #uses=1
  CS<0x558a84d900a0> calls function 'RCC_AHB1PeriphClockCmd'
  CS<0x558a84d90190> calls function 'RCC_APB2PeriphClockCmd'
  CS<0x558a84d90c00> calls function 'GPIO_Init'
  CS<0x558a84d91410> calls function 'SYSCFG_EXTILineConfig'
  CS<0x558a84d92310> calls function 'EXTI_Init'
  CS<0x558a84e6ecd0> calls function 'NVIC_Init'

Call graph node for function: 'SVC_Handler'<<0x558a84afc290>>  #uses=1
  CS<0x558a84de1a50> calls external node

Call graph node for function: 'SYSCFG_CompensationCellCmd'<<0x558a84b8f9c0>>  #uses=1

Call graph node for function: 'SYSCFG_DeInit'<<0x558a84b94b50>>  #uses=1
  CS<0x558a84ee26b0> calls function 'RCC_APB2PeriphResetCmd'
  CS<0x558a84ee2770> calls function 'RCC_APB2PeriphResetCmd'

Call graph node for function: 'SYSCFG_ETH_MediaInterfaceConfig'<<0x558a84b8f940>>  #uses=1

Call graph node for function: 'SYSCFG_EXTILineConfig'<<0x558a84b92110>>  #uses=2

Call graph node for function: 'SYSCFG_GetCompensationCellStatus'<<0x558a84b8fa40>>  #uses=1

Call graph node for function: 'SYSCFG_MemoryRemapConfig'<<0x558a84b94c30>>  #uses=1

Call graph node for function: 'SetSysClock'<<0x558a84b50d90>>  #uses=1

Call graph node for function: 'SysTick_CLKSourceConfig'<<0x558a84b509b0>>  #uses=1

Call graph node for function: 'SysTick_Handler'<<0x558a84b50330>>  #uses=1
  CS<0x558a84df4c50> calls external node
  CS<0x558a84df4cd0> calls function 'xTaskIncrementTick'
  CS<0x558a84df52b0> calls external node

Call graph node for function: 'SystemCoreClockUpdate'<<0x558a84b50e10>>  #uses=1

Call graph node for function: 'SystemInit'<<0x558a84b4f980>>  #uses=2
  CS<0x558a84e0f5d0> calls function 'SetSysClock'

Call graph node for function: 'TIM2_IRQHandler'<<0x558a84b4fb80>>  #uses=1
  CS<0x558a84cb1b30> calls function 'vRegTestClearFlopRegistersToParameterValue'
  CS<0x558a84cb1bd0> calls function 'NVIC_SetPendingIRQ'
  CS<0x558a84cb1c70> calls function 'ulRegTestCheckFlopRegistersContainParameterValue'
  CS<0x558a84cb1f10> calls external node

Call graph node for function: 'TIM3_IRQHandler'<<0x558a84b4fb00>>  #uses=1

Call graph node for function: '_sbrk'<<0x558a84b50170>>  #uses=1

Call graph node for function: 'eTaskGetState'<<0x558a84b3d220>>  #uses=2
  CS<0x558a84beb550> calls external node
  CS<0x558a84bebb70> calls function 'vPortEnterCritical'
  CS<0x558a84bec230> calls function 'vPortExitCritical'

Call graph node for function: 'getCompartmentFromAddr'<<0x558a84afd2e0>>  #uses=4

Call graph node for function: 'icall_arg0'<<0x558a84afcfd0>>  #uses=2
  CS<0x558a84e40f20> calls function 'switch_view'
  CS<0x558a84e41580> calls external node
  CS<0x558a84e41750> calls function 'switch_view'

Call graph node for function: 'icall_arg0_noid'<<0x558a84afd360>>  #uses=1
  CS<0x558a84e4aaa0> calls function 'getCompartmentFromAddr'
  CS<0x558a84e4aca0> calls function 'icall_arg0'

Call graph node for function: 'icall_arg1i'<<0x558a84afd080>>  #uses=1
  CS<0x558a84e43270> calls function 'switch_view'
  CS<0x558a84e43990> calls external node
  CS<0x558a84e43b60> calls function 'switch_view'

Call graph node for function: 'icall_arg1p'<<0x558a84afd1b0>>  #uses=1
  CS<0x558a84e457e0> calls function 'rtmkcpy'
  CS<0x558a84e45ac0> calls function 'switch_view'
  CS<0x558a84e46140> calls external node
  CS<0x558a84e46310> calls function 'switch_view'

Call graph node for function: 'icall_arg2pi'<<0x558a84afd5a0>>  #uses=1
  CS<0x558a84d04800> calls function 'rtmkcpy'
  CS<0x558a84d04ae0> calls function 'switch_view'
  CS<0x558a84d05220> calls external node
  CS<0x558a84d053f0> calls function 'switch_view'

Call graph node for function: 'icall_arg2pp'<<0x558a84afd730>>  #uses=1
  CS<0x558a84d07860> calls function 'rtmkcpy'
  CS<0x558a84d07cb0> calls function 'rtmkcpy'
  CS<0x558a84d07f90> calls function 'switch_view'
  CS<0x558a84d08830> calls external node
  CS<0x558a84d08a00> calls function 'switch_view'

Call graph node for function: 'icall_arg3ppi'<<0x558a84afd9b0>>  #uses=1
  CS<0x558a84d0b5f0> calls function 'rtmkcpy'
  CS<0x558a84d0ba40> calls function 'rtmkcpy'
  CS<0x558a84d0bd20> calls function 'switch_view'
  CS<0x558a84d0c680> calls external node
  CS<0x558a84d0c850> calls function 'switch_view'

Call graph node for function: 'icall_arg4ppii'<<0x558a84afdb80>>  #uses=1
  CS<0x558a84d0fbf0> calls function 'rtmkcpy'
  CS<0x558a84d10040> calls function 'rtmkcpy'
  CS<0x558a84d10320> calls function 'switch_view'
  CS<0x558a84d10d40> calls external node
  CS<0x558a84d10f10> calls function 'switch_view'

Call graph node for function: 'icall_arg4pppi'<<0x558a84afdd50>>  #uses=1
  CS<0x558a84d48e50> calls function 'rtmkcpy'
  CS<0x558a84d492a0> calls function 'rtmkcpy'
  CS<0x558a84d49850> calls function 'rtmkcpy'
  CS<0x558a84d49b30> calls function 'switch_view'
  CS<0x558a84d4a810> calls external node
  CS<0x558a84d4a9e0> calls function 'switch_view'

Call graph node for function: 'icall_arg6ppipip'<<0x558a84afdf20>>  #uses=1
  CS<0x558a84e5e760> calls function 'rtmkcpy'
  CS<0x558a84e5f2f0> calls function 'rtmkcpy'
  CS<0x558a84e5fe80> calls function 'rtmkcpy'
  CS<0x558a84e60a10> calls function 'rtmkcpy'
  CS<0x558a84e60d80> calls function 'switch_view'
  CS<0x558a84e61860> calls external node
  CS<0x558a84e61a30> calls function 'switch_view'

Call graph node for function: 'init_mpu'<<0x558a84b50e90>>  #uses=2
  CS<0x558a84e19550> calls external node
  CS<0x558a84e19600> calls external node
  CS<0x558a84e1b0f0> calls external node
  CS<0x558a84e1b1a0> calls external node

Call graph node for function: 'lastCompart'<<0x558a84b504f0>>  #uses=4

Call graph node for function: 'llvm.memcpy.p0i8.p0i8.i32'<<0x558a84b51e30>>  #uses=1

Call graph node for function: 'llvm.memset.p0i8.i32'<<0x558a84af6470>>  #uses=1

Call graph node for function: 'main'<<0x558a84b4f5f0>>  #uses=1
  CS<0x558a84caf9c0> calls function 'prvSetupHardware'
  CS<0x558a84cafa60> calls function 'vStartLEDFlashTasks'
  CS<0x558a84cafae0> calls function 'prvOptionallyCreateComprehensveTestApplication'
  CS<0x558a84cafb60> calls function 'rtmk_init'
  CS<0x558a84cafc10> calls function 'vTaskStartScheduler'

Call graph node for function: 'pcQueueGetName'<<0x558a84af95f0>>  #uses=1
  CS<0x558a84c52160> calls external node

Call graph node for function: 'pcTaskGetName'<<0x558a84b4cab0>>  #uses=1
  CS<0x558a84c207c0> calls external node

Call graph node for function: 'pcTimerGetName'<<0x558a84afac60>>  #uses=1
  CS<0x558a84da4470> calls external node

Call graph node for function: 'pcall_arg0'<<0x558a84b51360>>  #uses=1
  CS<0x558a84e25e70> calls function 'switch_view'
  CS<0x558a84e26570> calls external node
  CS<0x558a84e26740> calls function 'switch_view'

Call graph node for function: 'pcall_arg1i'<<0x558a84afc660>>  #uses=1
  CS<0x558a84e2b770> calls function 'switch_view'
  CS<0x558a84e2bec0> calls external node
  CS<0x558a84e2c090> calls function 'switch_view'

Call graph node for function: 'pcall_arg3iii'<<0x558a84b51490>>  #uses=1
  CS<0x558a84e28ff0> calls function 'switch_view'
  CS<0x558a84e298c0> calls external node
  CS<0x558a84e29a90> calls function 'switch_view'

Call graph node for function: 'prvAddCurrentTaskToDelayedList'<<0x558a84b3c760>>  #uses=7
  CS<0x558a84bce860> calls function 'uxListRemove'
  CS<0x558a84bcf690> calls function 'vListInsertEnd'
  CS<0x558a84bd0310> calls function 'vListInsert'
  CS<0x558a84bd06d0> calls function 'vListInsert'

Call graph node for function: 'prvAddNewTaskToReadyList'<<0x558a84af5c80>>  #uses=1
  CS<0x558a84b747d0> calls function 'vPortEnterCritical'
  CS<0x558a84bb72e0> calls function 'prvInitialiseTaskLists'
  CS<0x558a84bb8d80> calls function 'vListInsertEnd'
  CS<0x558a84bb8ea0> calls function 'vPortExitCritical'
  CS<0x558a84bb97f0> calls external node
  CS<0x558a84bb9870> calls external node

Call graph node for function: 'prvCheckForValidListAndQueue'<<0x558a84af9800>>  #uses=2
  CS<0x558a84d70260> calls function 'vPortEnterCritical'
  CS<0x558a84d70540> calls function 'vListInitialise'
  CS<0x558a84d70610> calls function 'vListInitialise'
  CS<0x558a84d708a0> calls function 'xQueueGenericCreate'
  CS<0x558a84d70d30> calls function 'vQueueAddToRegistry'
  CS<0x558a84d71000> calls function 'vPortExitCritical'

Call graph node for function: 'prvCheckTasksWaitingTermination'<<0x558a84b4c680>>  #uses=1
  CS<0x558a84c1b580> calls function 'vPortEnterCritical'
  CS<0x558a84c1bae0> calls function 'uxListRemove'
  CS<0x558a84c1bf10> calls function 'vPortExitCritical'
  CS<0x558a84c1c080> calls function 'prvDeleteTCB'

Call graph node for function: 'prvCopyDataFromQueue'<<0x558a84af7ed0>>  #uses=4

Call graph node for function: 'prvCopyDataToQueue'<<0x558a84b4e2c0>>  #uses=2
  CS<0x558a84ce5c90> calls function 'xTaskPriorityDisinherit'

Call graph node for function: 'prvDeleteTCB'<<0x558a84b3c180>>  #uses=2
  CS<0x558a84bc3590> calls function 'vPortFree'
  CS<0x558a84bc3770> calls function 'vPortFree'

Call graph node for function: 'prvGetDisinheritPriorityAfterTimeout'<<0x558a84af6e20>>  #uses=1

Call graph node for function: 'prvGetNextExpireTime'<<0x558a84af9bb0>>  #uses=1

Call graph node for function: 'prvIdleTask'<<0x558a84b4c600>>  #uses=1
  CS<0x558a84c1a340> calls function 'prvCheckTasksWaitingTermination'
  CS<0x558a84c1a6f0> calls external node
  CS<0x558a84c1a770> calls external node
  CS<0x558a84c1a900> calls function 'vApplicationIdleHook'

Call graph node for function: 'prvInitialiseMutex'<<0x558a84b4dfe0>>  #uses=1
  CS<0x558a84c92680> calls function 'xQueueGenericSend'

Call graph node for function: 'prvInitialiseNewQueue'<<0x558a84b4dd60>>  #uses=1
  CS<0x558a84cc5100> calls function 'xQueueGenericReset'

Call graph node for function: 'prvInitialiseNewTask'<<0x558a84af5c00>>  #uses=1
  CS<0x558a84bac930> calls external node
  CS<0x558a84baead0> calls external node
  CS<0x558a84bafaa0> calls function 'vListInitialiseItem'
  CS<0x558a84bb0520> calls function 'vListInitialiseItem'
  CS<0x558a84bb1c50> calls function 'pxPortInitialiseStack'

Call graph node for function: 'prvInitialiseNewTimer'<<0x558a84afa610>>  #uses=1
  CS<0x558a84d93f80> calls external node
  CS<0x558a84d94160> calls function 'prvCheckForValidListAndQueue'
  CS<0x558a84d94f80> calls function 'vListInitialiseItem'

Call graph node for function: 'prvInitialiseTaskLists'<<0x558a84af5fd0>>  #uses=1
  CS<0x558a84bbb0c0> calls function 'vListInitialise'
  CS<0x558a84bbb490> calls function 'vListInitialise'
  CS<0x558a84bbb560> calls function 'vListInitialise'
  CS<0x558a84bbb630> calls function 'vListInitialise'
  CS<0x558a84bbb700> calls function 'vListInitialise'
  CS<0x558a84bbb7d0> calls function 'vListInitialise'

Call graph node for function: 'prvInsertTimerInActiveList'<<0x558a84afa030>>  #uses=3
  CS<0x558a84d87820> calls function 'vListInsert'
  CS<0x558a84d88370> calls function 'vListInsert'

Call graph node for function: 'prvIsQueueEmpty'<<0x558a84b522e0>>  #uses=6
  CS<0x558a84d13450> calls function 'vPortEnterCritical'
  CS<0x558a84d13b30> calls function 'vPortExitCritical'

Call graph node for function: 'prvIsQueueFull'<<0x558a84b4e340>>  #uses=1
  CS<0x558a84cecbc0> calls function 'vPortEnterCritical'
  CS<0x558a84ced3e0> calls function 'vPortExitCritical'

Call graph node for function: 'prvListTasksWithinSingleList'<<0x558a84b4cc10>>  #uses=5
  CS<0x558a84c2ac50> calls function 'vTaskGetInfo'

Call graph node for function: 'prvOptionallyCreateComprehensveTestApplication'<<0x558a84b4f7d0>>  #uses=1

Call graph node for function: 'prvPortStartFirstTask'<<0x558a84afc5f0>>  #uses=1
  CS<0x558a84dee340> calls external node

Call graph node for function: 'prvProcessExpiredTimer'<<0x558a84af9e60>>  #uses=2
  CS<0x558a84ca6ff0> calls function 'uxListRemove'
  CS<0x558a84ca77b0> calls function 'prvReloadTimer'
  CS<0x558a84ca8060> calls external node

Call graph node for function: 'prvProcessReceivedCommands'<<0x558a84af9cb0>>  #uses=1
  CS<0x558a84d7aff0> calls function 'xQueueReceive'
  CS<0x558a84d7bfc0> calls function 'uxListRemove'
  CS<0x558a84d7c1a0> calls function 'prvSampleTimeNow'
  CS<0x558a84d7d5c0> calls function 'prvInsertTimerInActiveList'
  CS<0x558a84d7e430> calls function 'prvReloadTimer'
  CS<0x558a84d7ece0> calls external node
  CS<0x558a84d802f0> calls external node
  CS<0x558a84d80a90> calls function 'prvInsertTimerInActiveList'
  CS<0x558a84d811e0> calls function 'vPortFree'

Call graph node for function: 'prvProcessTimerOrBlockTask'<<0x558a84af9c30>>  #uses=1
  CS<0x558a84c94690> calls function 'vTaskSuspendAll'
  CS<0x558a84c94760> calls function 'prvSampleTimeNow'
  CS<0x558a84d773f0> calls function 'xTaskResumeAll'
  CS<0x558a84d77620> calls function 'prvProcessExpiredTimer'
  CS<0x558a84d78230> calls function 'vQueueWaitForMessageRestricted'
  CS<0x558a84d782e0> calls function 'xTaskResumeAll'
  CS<0x558a84d785f0> calls external node
  CS<0x558a84d78670> calls external node
  CS<0x558a84d78910> calls function 'xTaskResumeAll'

Call graph node for function: 'prvReloadTimer'<<0x558a84afa0b0>>  #uses=2
  CS<0x558a84d8a290> calls function 'prvInsertTimerInActiveList'
  CS<0x558a84ca39f0> calls external node

Call graph node for function: 'prvResetNextTaskUnblockTime'<<0x558a84b3c350>>  #uses=4

Call graph node for function: 'prvSampleTimeNow'<<0x558a84af9d30>>  #uses=2
  CS<0x558a84d83ec0> calls function 'xTaskGetTickCount'
  CS<0x558a84d84310> calls function 'prvSwitchTimerLists'

Call graph node for function: 'prvSetupHardware'<<0x558a84b4f670>>  #uses=1
  CS<0x558a84cb0080> calls function 'SystemInit'
  CS<0x558a84cb0120> calls function 'NVIC_PriorityGroupConfig'
  CS<0x558a84cb01d0> calls function 'vParTestInitialise'

Call graph node for function: 'prvSwitchTimerLists'<<0x558a84afa3c0>>  #uses=1
  CS<0x558a84ca52d0> calls function 'prvProcessExpiredTimer'

Call graph node for function: 'prvTaskCheckFreeStackSpace'<<0x558a84b4cfa0>>  #uses=1

Call graph node for function: 'prvTaskExitError'<<0x558a84afc1e0>>  #uses=2
  CS<0x558a84de0230> calls external node
  CS<0x558a84de0570> calls external node

Call graph node for function: 'prvTaskIsTaskSuspended'<<0x558a84b3dc90>>  #uses=2
  CS<0x558a84c0d0d0> calls external node

Call graph node for function: 'prvTestWaitCondition'<<0x558a84afba10>>  #uses=2

Call graph node for function: 'prvTimerTask'<<0x558a84af9b30>>  #uses=1
  CS<0x558a84d72060> calls function 'prvGetNextExpireTime'
  CS<0x558a84d72350> calls function 'prvProcessTimerOrBlockTask'
  CS<0x558a84d72400> calls function 'prvProcessReceivedCommands'

Call graph node for function: 'prvUnlockQueue'<<0x558a84b4e3c0>>  #uses=13
  CS<0x558a84ceeb70> calls function 'vPortEnterCritical'
  CS<0x558a84cefa10> calls function 'xTaskRemoveFromEventList'
  CS<0x558a84cefc60> calls function 'vTaskMissedYield'
  CS<0x558a84cf03e0> calls function 'vPortExitCritical'
  CS<0x558a84cf0490> calls function 'vPortEnterCritical'
  CS<0x558a84cf13c0> calls function 'xTaskRemoveFromEventList'
  CS<0x558a84cf1610> calls function 'vTaskMissedYield'
  CS<0x558a84cf1d90> calls function 'vPortExitCritical'

Call graph node for function: 'pvPortMalloc'<<0x558a84af5900>>  #uses=5
  CS<0x558a84df87d0> calls function 'lastCompart'
  CS<0x558a84df8c00> calls function 'pvPortMallocbyID'

Call graph node for function: 'pvPortMallocbyID'<<0x558a84b50570>>  #uses=2
  CS<0x558a84dfb3f0> calls function 'vTaskSuspendAll'
  CS<0x558a84dfdf20> calls function 'xTaskResumeAll'
  CS<0x558a84dfe210> calls function 'vApplicationMallocFailedHook'

Call graph node for function: 'pvTaskIncrementMutexHeldCount'<<0x558a84b4e750>>  #uses=2

Call graph node for function: 'pvTimerGetTimerID'<<0x558a84afae70>>  #uses=1
  CS<0x558a84da80a0> calls external node
  CS<0x558a84da8280> calls function 'vPortEnterCritical'
  CS<0x558a84da85f0> calls function 'vPortExitCritical'

Call graph node for function: 'pxPortInitialiseStack'<<0x558a84af5d80>>  #uses=2

Call graph node for function: 'rtmk_init'<<0x558a84b4f900>>  #uses=2
  CS<0x558a84e1b830> calls function 'init_mpu'
  CS<0x558a84e1b8d0> calls function 'switch_view'

Call graph node for function: 'rtmkcpy'<<0x558a84afc8c0>>  #uses=21

Call graph node for function: 'switch_view'<<0x558a84af7000>>  #uses=42
  CS<0x558a84e1c780> calls external node
  CS<0x558a84e1e4f0> calls external node
  CS<0x558a84e1e5a0> calls external node

Call graph node for function: 'switch_view_svc'<<0x558a84afcf50>>  #uses=1
  CS<0x558a84e3fa40> calls external node

Call graph node for function: 'testMalloc'<<0x558a84b4f510>>  #uses=1
  CS<0x558a84cae590> calls external node
  CS<0x558a84caec20> calls external node

Call graph node for function: 'ucQueueGetQueueType'<<0x558a84af9360>>  #uses=1

Call graph node for function: 'ulRegTestCheckFlopRegistersContainParameterValue'<<0x558a84b4fd00>>  #uses=2
  CS<None> calls external node

Call graph node for function: 'ulTaskGenericNotifyTake'<<0x558a84b4e7d0>>  #uses=1
  CS<0x558a84c7bd40> calls external node
  CS<0x558a84c7bf20> calls function 'vPortEnterCritical'
  CS<0x558a84c7cba0> calls function 'prvAddCurrentTaskToDelayedList'
  CS<0x558a84c7cd10> calls external node
  CS<0x558a84c7cd90> calls external node
  CS<0x558a84c7d030> calls function 'vPortExitCritical'
  CS<0x558a84c7d0e0> calls function 'vPortEnterCritical'
  CS<0x558a84c7e8c0> calls function 'vPortExitCritical'

Call graph node for function: 'ulTaskGenericNotifyValueClear'<<0x558a84b4f490>>  #uses=1
  CS<0x558a84cac6f0> calls function 'vPortEnterCritical'
  CS<0x558a84cad1d0> calls function 'vPortExitCritical'

Call graph node for function: 'uxEventGroupGetNumber'<<0x558a84afc0e0>>  #uses=1

Call graph node for function: 'uxListRemove'<<0x558a84b3c050>>  #uses=26

Call graph node for function: 'uxQueueGetQueueNumber'<<0x558a84af9260>>  #uses=1

Call graph node for function: 'uxQueueMessagesWaiting'<<0x558a84af8e50>>  #uses=1
  CS<0x558a84d501d0> calls external node
  CS<0x558a84d503b0> calls function 'vPortEnterCritical'
  CS<0x558a84d50720> calls function 'vPortExitCritical'

Call graph node for function: 'uxQueueMessagesWaitingFromISR'<<0x558a84af9000>>  #uses=1
  CS<0x558a84d53a40> calls external node

Call graph node for function: 'uxQueueSpacesAvailable'<<0x558a84af8ed0>>  #uses=1
  CS<0x558a84d51c90> calls external node
  CS<0x558a84d51e70> calls function 'vPortEnterCritical'
  CS<0x558a84d524a0> calls function 'vPortExitCritical'

Call graph node for function: 'uxTaskGetNumberOfTasks'<<0x558a84b4ca30>>  #uses=1

Call graph node for function: 'uxTaskGetSystemState'<<0x558a84b4cb60>>  #uses=1
  CS<0x558a84c22a00> calls function 'vTaskSuspendAll'
  CS<0x558a84c23390> calls function 'prvListTasksWithinSingleList'
  CS<0x558a84c23b90> calls function 'prvListTasksWithinSingleList'
  CS<0x558a84c240e0> calls function 'prvListTasksWithinSingleList'
  CS<0x558a84c24590> calls function 'prvListTasksWithinSingleList'
  CS<0x558a84c24a40> calls function 'prvListTasksWithinSingleList'
  CS<0x558a84c25200> calls function 'xTaskResumeAll'

Call graph node for function: 'uxTaskGetTaskNumber'<<0x558a84b3e290>>  #uses=1

Call graph node for function: 'uxTaskPriorityGet'<<0x558a84b3d2a0>>  #uses=1
  CS<0x558a84bf0520> calls function 'vPortEnterCritical'
  CS<0x558a84bf0d50> calls function 'vPortExitCritical'

Call graph node for function: 'uxTaskPriorityGetFromISR'<<0x558a84b3d320>>  #uses=1
  CS<0x558a84bf27e0> calls function 'vPortValidateInterruptPriority'
  CS<0x558a84bf2b90> calls external node
  CS<0x558a84bf39b0> calls external node

Call graph node for function: 'uxTaskResetEventItemValue'<<0x558a84b4e6d0>>  #uses=3

Call graph node for function: 'uxTimerGetReloadMode'<<0x558a84afaab0>>  #uses=1
  CS<0x558a84da0c10> calls external node
  CS<0x558a84da0df0> calls function 'vPortEnterCritical'
  CS<0x558a84da1600> calls function 'vPortExitCritical'

Call graph node for function: 'uxTimerGetTimerNumber'<<0x558a84afb0d0>>  #uses=1

Call graph node for function: 'vApplicationIdleHook'<<0x558a84b4c700>>  #uses=2

Call graph node for function: 'vApplicationMallocFailedHook'<<0x558a84b500c0>>  #uses=2
  CS<0x558a84cb48b0> calls external node

Call graph node for function: 'vApplicationStackOverflowHook'<<0x558a84af5660>>  #uses=2
  CS<0x558a84cb5b80> calls external node

Call graph node for function: 'vApplicationTickHook'<<0x558a84b3ce90>>  #uses=3

Call graph node for function: 'vEventGroupClearBitsCallback'<<0x558a84afc030>>  #uses=1
  CS<0x558a84dda330> calls function 'xEventGroupClearBits'

Call graph node for function: 'vEventGroupDelete'<<0x558a84afbe20>>  #uses=1
  CS<0x558a84dd67a0> calls external node
  CS<0x558a84dd6f80> calls function 'vTaskSuspendAll'
  CS<0x558a84dd7be0> calls external node
  CS<0x558a84dd80f0> calls function 'vTaskRemoveFromUnorderedEventList'
  CS<0x558a84dd8340> calls function 'vPortFree'
  CS<0x558a84dd83f0> calls function 'xTaskResumeAll'

Call graph node for function: 'vEventGroupSetBitsCallback'<<0x558a84afbfb0>>  #uses=1
  CS<0x558a84dd9640> calls function 'xEventGroupSetBits'

Call graph node for function: 'vEventGroupSetNumber'<<0x558a84afc160>>  #uses=1

Call graph node for function: 'vLEDFlashTask'<<0x558a84b50a60>>  #uses=1
  CS<0x558a84e0d010> calls function 'vPortEnterCritical'
  CS<0x558a84e0d3e0> calls function 'vPortExitCritical'
  CS<0x558a84e0daf0> calls function 'xTaskGetTickCount'
  CS<0x558a84e0dde0> calls function 'xTaskDelayUntil'
  CS<0x558a84e0df20> calls function 'vParTestToggleLED'
  CS<0x558a84e0e0b0> calls function 'xTaskDelayUntil'
  CS<0x558a84e0e1f0> calls function 'vParTestToggleLED'

Call graph node for function: 'vListInitialise'<<0x558a84af62a0>>  #uses=12

Call graph node for function: 'vListInitialiseItem'<<0x558a84af5d00>>  #uses=4

Call graph node for function: 'vListInsert'<<0x558a84b3c9b0>>  #uses=6

Call graph node for function: 'vListInsertEnd'<<0x558a84af6050>>  #uses=24

Call graph node for function: 'vParTestInitialise'<<0x558a84b4fa80>>  #uses=2

Call graph node for function: 'vParTestSetLED'<<0x558a84afe0f0>>  #uses=1
  CS<0x558a84e63f00> calls function 'STM_EVAL_LEDOn'
  CS<0x558a84e64270> calls function 'STM_EVAL_LEDOff'

Call graph node for function: 'vParTestToggleLED'<<0x558a84b50bc0>>  #uses=3
  CS<0x558a84e650d0> calls function 'vPortEnterCritical'
  CS<0x558a84e653a0> calls function 'STM_EVAL_LEDToggle'
  CS<0x558a84e65450> calls function 'vPortExitCritical'

Call graph node for function: 'vPortEnableVFP'<<0x558a84afc420>>  #uses=1
  CS<0x558a84ded560> calls external node

Call graph node for function: 'vPortEndScheduler'<<0x558a84b4c8b0>>  #uses=2
  CS<0x558a84deeb20> calls external node

Call graph node for function: 'vPortEnterCritical'<<0x558a84af5f50>>  #uses=49
  CS<0x558a84def7a0> calls external node
  CS<0x558a84df00c0> calls external node

Call graph node for function: 'vPortExitCritical'<<0x558a84af60d0>>  #uses=57
  CS<0x558a84df1060> calls external node
  CS<0x558a84df18d0> calls external node

Call graph node for function: 'vPortFree'<<0x558a84af5a30>>  #uses=7

Call graph node for function: 'vPortInitialiseBlocks'<<0x558a84b50700>>  #uses=1
  CS<0x558a84dfff00> calls function 'lastCompart'

Call graph node for function: 'vPortSetupTimerInterrupt'<<0x558a84afc3a0>>  #uses=2

Call graph node for function: 'vPortValidateInterruptPriority'<<0x558a84b3d3a0>>  #uses=10
  CS<0x558a84df6550> calls external node
  CS<0x558a84df6fc0> calls external node
  CS<0x558a84df77b0> calls external node

Call graph node for function: 'vQueueAddToRegistry'<<0x558a84af9540>>  #uses=2
  CS<0x558a84d601e0> calls external node

Call graph node for function: 'vQueueDelete'<<0x558a84af9080>>  #uses=1
  CS<0x558a84d55130> calls external node
  CS<0x558a84d553d0> calls function 'vQueueUnregisterQueue'
  CS<0x558a84d555b0> calls function 'vPortFree'

Call graph node for function: 'vQueueSetQueueNumber'<<0x558a84af92e0>>  #uses=1

Call graph node for function: 'vQueueUnregisterQueue'<<0x558a84af9130>>  #uses=2
  CS<0x558a84d56a30> calls external node

Call graph node for function: 'vQueueWaitForMessageRestricted'<<0x558a84af96a0>>  #uses=2
  CS<0x558a84c54de0> calls function 'vPortEnterCritical'
  CS<0x558a84c55a80> calls function 'vPortExitCritical'
  CS<0x558a84d6da20> calls function 'vTaskPlaceOnEventListRestricted'
  CS<0x558a84d6dca0> calls function 'prvUnlockQueue'

Call graph node for function: 'vRegTestClearFlopRegistersToParameterValue'<<0x558a84b4fc00>>  #uses=2
  CS<None> calls external node

Call graph node for function: 'vStartLEDFlashTasks'<<0x558a84b4f6f0>>  #uses=2
  CS<0x558a84e0b950> calls function 'xTaskCreate'

Call graph node for function: 'vTaskDelay'<<0x558a84b3cf10>>  #uses=1
  CS<0x558a84be7be0> calls external node
  CS<0x558a84be7dc0> calls function 'vTaskSuspendAll'
  CS<0x558a84be7f50> calls function 'prvAddCurrentTaskToDelayedList'
  CS<0x558a84be8000> calls function 'xTaskResumeAll'
  CS<0x558a84be8580> calls external node
  CS<0x558a84be8600> calls external node

Call graph node for function: 'vTaskDelete'<<0x558a84af64f0>>  #uses=1
  CS<0x558a84bbca60> calls function 'vPortEnterCritical'
  CS<0x558a84b6b950> calls function 'uxListRemove'
  CS<0x558a84bbfcb0> calls function 'uxListRemove'
  CS<0x558a84bc04e0> calls function 'vListInsertEnd'
  CS<0x558a84bc0a70> calls function 'prvDeleteTCB'
  CS<0x558a84bc0b20> calls function 'prvResetNextTaskUnblockTime'
  CS<0x558a84bc0c40> calls function 'vPortExitCritical'
  CS<0x558a84bc1680> calls external node
  CS<0x558a84bc1920> calls external node
  CS<0x558a84bc19a0> calls external node

Call graph node for function: 'vTaskEndScheduler'<<0x558a84b4c830>>  #uses=1
  CS<0x558a84bbe040> calls external node
  CS<0x558a84bbe150> calls function 'vPortEndScheduler'

Call graph node for function: 'vTaskGenericNotifyGiveFromISR'<<0x558a84b4f100>>  #uses=1
  CS<0x558a84ca2000> calls external node
  CS<0x558a84ca2650> calls external node
  CS<0x558a84ca2830> calls function 'vPortValidateInterruptPriority'
  CS<0x558a84ca2ce0> calls external node
  CS<0x558a84b99670> calls external node
  CS<0x558a84b99c40> calls function 'uxListRemove'
  CS<0x558a84b9a4b0> calls function 'vListInsertEnd'
  CS<0x558a84b9a7a0> calls function 'vListInsertEnd'
  CS<0x558a84b9b840> calls external node

Call graph node for function: 'vTaskGetInfo'<<0x558a84b4cef0>>  #uses=2
  CS<0x558a84c33c20> calls function 'vTaskSuspendAll'
  CS<0x558a84c343f0> calls function 'xTaskResumeAll'
  CS<0x558a84c34710> calls function 'eTaskGetState'
  CS<0x558a84c34f80> calls function 'prvTaskCheckFreeStackSpace'

Call graph node for function: 'vTaskInternalSetTimeOutState'<<0x558a84b4d9b0>>  #uses=6

Call graph node for function: 'vTaskMissedYield'<<0x558a84b3e210>>  #uses=3

Call graph node for function: 'vTaskPlaceOnEventList'<<0x558a84b4d150>>  #uses=5
  CS<0x558a84c3a6a0> calls external node
  CS<0x558a84c3aaf0> calls function 'vListInsert'
  CS<0x558a84c3ac80> calls function 'prvAddCurrentTaskToDelayedList'

Call graph node for function: 'vTaskPlaceOnEventListRestricted'<<0x558a84b4d3b0>>  #uses=2
  CS<0x558a84bd5550> calls external node
  CS<0x558a84bd59a0> calls function 'vListInsertEnd'
  CS<0x558a84bd5f70> calls function 'prvAddCurrentTaskToDelayedList'

Call graph node for function: 'vTaskPlaceOnUnorderedEventList'<<0x558a84b4d280>>  #uses=3
  CS<0x558a84bd2c40> calls external node
  CS<0x558a84bd3290> calls external node
  CS<0x558a84bd3a90> calls function 'vListInsertEnd'
  CS<0x558a84bd3c20> calls function 'prvAddCurrentTaskToDelayedList'

Call graph node for function: 'vTaskPriorityDisinheritAfterTimeout'<<0x558a84b4e5a0>>  #uses=2
  CS<0x558a84c72b00> calls external node
  CS<0x558a84c74310> calls external node
  CS<0x558a84c75d10> calls function 'uxListRemove'
  CS<0x558a84c76cb0> calls function 'vListInsertEnd'

Call graph node for function: 'vTaskPrioritySet'<<0x558a84b3d530>>  #uses=1
  CS<0x558a84bf6e90> calls external node
  CS<0x558a84bf7480> calls function 'vPortEnterCritical'
  CS<0x558a84bfd3f0> calls function 'uxListRemove'
  CS<0x558a84bfe260> calls function 'vListInsertEnd'
  CS<0x558a84bfe6f0> calls external node
  CS<0x558a84bfe770> calls external node
  CS<0x558a84bfea40> calls function 'vPortExitCritical'

Call graph node for function: 'vTaskRemoveFromUnorderedEventList'<<0x558a84b4d760>>  #uses=3
  CS<0x558a84c4e330> calls external node
  CS<0x558a84c4ee70> calls external node
  CS<0x558a84c4f110> calls function 'uxListRemove'
  CS<0x558a84c4f370> calls function 'uxListRemove'
  CS<0x558a84c4fbe0> calls function 'vListInsertEnd'

Call graph node for function: 'vTaskResume'<<0x558a84b3dc10>>  #uses=1
  CS<0x558a84c09160> calls external node
  CS<0x558a84c09860> calls function 'vPortEnterCritical'
  CS<0x558a84c099d0> calls function 'prvTaskIsTaskSuspended'
  CS<0x558a84c09dd0> calls function 'uxListRemove'
  CS<0x558a84c0a640> calls function 'vListInsertEnd'
  CS<0x558a84c0ad20> calls external node
  CS<0x558a84c0ada0> calls external node
  CS<0x558a84c0b040> calls function 'vPortExitCritical'

Call graph node for function: 'vTaskSetTaskNumber'<<0x558a84b3e310>>  #uses=1

Call graph node for function: 'vTaskSetTimeOutState'<<0x558a84b4d930>>  #uses=1
  CS<0x558a84bb4f30> calls external node
  CS<0x558a84bb5110> calls function 'vPortEnterCritical'
  CS<0x558a84bb57a0> calls function 'vPortExitCritical'

Call graph node for function: 'vTaskStartScheduler'<<0x558a84b3df10>>  #uses=2
  CS<0x558a84b6c1b0> calls function 'xTaskCreate'
  CS<0x558a84bda260> calls function 'xTimerCreateTimerTask'
  CS<0x558a84bda880> calls external node
  CS<0x558a84bdac00> calls function 'xPortStartScheduler'
  CS<0x558a84c18e70> calls external node

Call graph node for function: 'vTaskSuspend'<<0x558a84b3d7b0>>  #uses=1
  CS<0x558a84c01ea0> calls function 'vPortEnterCritical'
  CS<0x558a84c02590> calls function 'uxListRemove'
  CS<0x558a84c038f0> calls function 'uxListRemove'
  CS<0x558a84c03c80> calls function 'vListInsertEnd'
  CS<0x558a84c04ed0> calls function 'vPortExitCritical'
  CS<0x558a84c051c0> calls function 'vPortEnterCritical'
  CS<0x558a84c05270> calls function 'prvResetNextTaskUnblockTime'
  CS<0x558a84c05320> calls function 'vPortExitCritical'
  CS<0x558a84c05e70> calls external node
  CS<0x558a84c06110> calls external node
  CS<0x558a84c06190> calls external node
  CS<0x558a84c066f0> calls function 'vTaskSwitchContext'

Call graph node for function: 'vTaskSuspendAll'<<0x558a84b3c6e0>>  #uses=16
  CS<0x558a84bccf10> calls external node

Call graph node for function: 'vTaskSwitchContext'<<0x558a84af55b0>>  #uses=3
  CS<0x558a84b46800> calls function 'vApplicationStackOverflowHook'
  CS<0x558a84b46f00> calls external node
  CS<0x558a84b47ce0> calls external node

Call graph node for function: 'vTimerSetReloadMode'<<0x558a84afaa00>>  #uses=1
  CS<0x558a84d9e4e0> calls external node
  CS<0x558a84d9e6c0> calls function 'vPortEnterCritical'
  CS<0x558a84d9f320> calls function 'vPortExitCritical'

Call graph node for function: 'vTimerSetTimerID'<<0x558a84afafa0>>  #uses=1
  CS<0x558a84da9ce0> calls external node
  CS<0x558a84da9ec0> calls function 'vPortEnterCritical'
  CS<0x558a84daa260> calls function 'vPortExitCritical'

Call graph node for function: 'vTimerSetTimerNumber'<<0x558a84afb150>>  #uses=1

Call graph node for function: 'xEventGroupClearBits'<<0x558a84afbd20>>  #uses=2
  CS<0x558a84dd11d0> calls external node
  CS<0x558a84dd18b0> calls external node
  CS<0x558a84dd1a90> calls function 'vPortEnterCritical'
  CS<0x558a84dd22b0> calls function 'vPortExitCritical'

Call graph node for function: 'xEventGroupCreate'<<0x558a84afb1d0>>  #uses=1
  CS<0x558a84dac290> calls function 'pvPortMalloc'
  CS<0x558a84dacae0> calls function 'vListInitialise'

Call graph node for function: 'xEventGroupGetBitsFromISR'<<0x558a84afbda0>>  #uses=1
  CS<0x558a84dd45a0> calls external node
  CS<0x558a84dd5010> calls external node

Call graph node for function: 'xEventGroupSetBits'<<0x558a84afb530>>  #uses=3
  CS<0x558a84dba6f0> calls external node
  CS<0x558a84dbadd0> calls external node
  CS<0x558a84dbb490> calls function 'vTaskSuspendAll'
  CS<0x558a84dbe800> calls function 'vTaskRemoveFromUnorderedEventList'
  CS<0x558a84dbefd0> calls function 'xTaskResumeAll'

Call graph node for function: 'xEventGroupSync'<<0x558a84afb250>>  #uses=1
  CS<0x558a84db0990> calls external node
  CS<0x558a84db0fe0> calls external node
  CS<0x558a84db11c0> calls function 'xTaskGetSchedulerState'
  CS<0x558a84db1980> calls external node
  CS<0x558a84db1b60> calls function 'vTaskSuspendAll'
  CS<0x558a84db2050> calls function 'xEventGroupSetBits'
  CS<0x558a84db3660> calls function 'vTaskPlaceOnUnorderedEventList'
  CS<0x558a84db3cd0> calls function 'xTaskResumeAll'
  CS<0x558a84db4380> calls external node
  CS<0x558a84db4400> calls external node
  CS<0x558a84db4590> calls function 'uxTaskResetEventItemValue'
  CS<0x558a84db4a00> calls function 'vPortEnterCritical'
  CS<0x558a84db5770> calls function 'vPortExitCritical'

Call graph node for function: 'xEventGroupWaitBits'<<0x558a84afb840>>  #uses=1
  CS<0x558a84dc4b20> calls external node
  CS<0x558a84dc5200> calls external node
  CS<0x558a84dc5850> calls external node
  CS<0x558a84dc5a30> calls function 'xTaskGetSchedulerState'
  CS<0x558a84dc61f0> calls external node
  CS<0x558a84dc63d0> calls function 'vTaskSuspendAll'
  CS<0x558a84dc6a00> calls function 'prvTestWaitCondition'
  CS<0x558a84dc8c20> calls function 'vTaskPlaceOnUnorderedEventList'
  CS<0x558a84dc8e70> calls function 'xTaskResumeAll'
  CS<0x558a84dc9520> calls external node
  CS<0x558a84dc95a0> calls external node
  CS<0x558a84dc9730> calls function 'uxTaskResetEventItemValue'
  CS<0x558a84dc9ba0> calls function 'vPortEnterCritical'
  CS<0x558a84dca150> calls function 'prvTestWaitCondition'
  CS<0x558a84dcad70> calls function 'vPortExitCritical'

Call graph node for function: 'xPortGetFreeHeapSize'<<0x558a84b50780>>  #uses=1
  CS<0x558a84e008b0> calls function 'lastCompart'

Call graph node for function: 'xPortStartScheduler'<<0x558a84b4c430>>  #uses=2
  CS<0x558a84ccfab0> calls external node
  CS<0x558a84cd0010> calls external node
  CS<0x558a84cd1c30> calls external node
  CS<0x558a84dea3c0> calls function 'vPortSetupTimerInterrupt'
  CS<0x558a84dea530> calls function 'vPortEnableVFP'
  CS<0x558a84dea7a0> calls function 'prvPortStartFirstTask'
  CS<0x558a84dea850> calls function 'vTaskSwitchContext'
  CS<0x558a84dea900> calls function 'prvTaskExitError'

Call graph node for function: 'xQueueCreateCountingSemaphore'<<0x558a84af6ea0>>  #uses=1
  CS<0x558a84c3e170> calls external node
  CS<0x558a84c3e830> calls external node
  CS<0x558a84c3eb10> calls function 'xQueueGenericCreate'

Call graph node for function: 'xQueueCreateMutex'<<0x558a84b4df30>>  #uses=1
  CS<0x558a84cd3980> calls function 'xQueueGenericCreate'
  CS<0x558a84cd3bb0> calls function 'prvInitialiseMutex'

Call graph node for function: 'xQueueGenericCreate'<<0x558a84b4dce0>>  #uses=4
  CS<0x558a84ccaba0> calls external node
  CS<0x558a84ccb8a0> calls external node
  CS<0x558a84ccbff0> calls external node
  CS<0x558a84ccc350> calls function 'pvPortMalloc'
  CS<0x558a84b18510> calls function 'prvInitialiseNewQueue'

Call graph node for function: 'xQueueGenericReset'<<0x558a84b4da30>>  #uses=2
  CS<0x558a84c1e1f0> calls external node
  CS<0x558a84c1e3d0> calls function 'vPortEnterCritical'
  CS<0x558a84cc6de0> calls function 'xTaskRemoveFromEventList'
  CS<0x558a84cc70f0> calls external node
  CS<0x558a84cc7170> calls external node
  CS<0x558a84cc7660> calls function 'vListInitialise'
  CS<0x558a84cc78c0> calls function 'vListInitialise'
  CS<0x558a84cc79e0> calls function 'vPortExitCritical'

Call graph node for function: 'xQueueGenericSend'<<0x558a84b4e060>>  #uses=6
  CS<0x558a84cd9e90> calls external node
  CS<0x558a84cda950> calls external node
  CS<0x558a84cdb460> calls external node
  CS<0x558a84cdb640> calls function 'xTaskGetSchedulerState'
  CS<0x558a84cdbe50> calls external node
  CS<0x558a84cdc0d0> calls function 'vPortEnterCritical'
  CS<0x558a84cdcba0> calls function 'prvCopyDataToQueue'
  CS<0x558a84cdd4a0> calls function 'xTaskRemoveFromEventList'
  CS<0x558a84cdd7b0> calls external node
  CS<0x558a84cdd830> calls external node
  CS<0x558a84cddd60> calls external node
  CS<0x558a84cddde0> calls external node
  CS<0x558a84cddfe0> calls function 'vPortExitCritical'
  CS<0x558a84cde400> calls function 'vPortExitCritical'
  CS<0x558a84cde840> calls function 'vTaskInternalSetTimeOutState'
  CS<0x558a84cdeba0> calls function 'vPortExitCritical'
  CS<0x558a84cdec50> calls function 'vTaskSuspendAll'
  CS<0x558a84cded00> calls function 'vPortEnterCritical'
  CS<0x558a84cdf9a0> calls function 'vPortExitCritical'
  CS<0x558a84cdfa60> calls function 'xTaskCheckForTimeOut'
  CS<0x558a84cdfd70> calls function 'prvIsQueueFull'
  CS<0x558a84ce0230> calls function 'vTaskPlaceOnEventList'
  CS<0x558a84ce03a0> calls function 'prvUnlockQueue'
  CS<0x558a84ce0450> calls function 'xTaskResumeAll'
  CS<0x558a84ce0760> calls external node
  CS<0x558a84ce07e0> calls external node
  CS<0x558a84ce0a60> calls function 'prvUnlockQueue'
  CS<0x558a84ce0b10> calls function 'xTaskResumeAll'
  CS<0x558a84ce0d90> calls function 'prvUnlockQueue'
  CS<0x558a84ce0e40> calls function 'xTaskResumeAll'

Call graph node for function: 'xQueueGenericSendFromISR'<<0x558a84af7130>>  #uses=2
  CS<0x558a84c46df0> calls external node
  CS<0x558a84c478b0> calls external node
  CS<0x558a84c483c0> calls external node
  CS<0x558a84c485a0> calls function 'vPortValidateInterruptPriority'
  CS<0x558a84c48950> calls external node
  CS<0x558a84c49fc0> calls function 'prvCopyDataToQueue'
  CS<0x558a84c4aab0> calls function 'xTaskRemoveFromEventList'
  CS<0x558a84d148c0> calls external node
  CS<0x558a84d155c0> calls external node

Call graph node for function: 'xQueueGenericSend_bridge'<<0x558a84af6f80>>  #uses=1
  CS<0x558a84c42190> calls function 'switch_view'
  CS<0x558a84c42740> calls function 'xQueueGenericSend'
  CS<0x558a84c42940> calls function 'switch_view'

Call graph node for function: 'xQueueGiveFromISR'<<0x558a84b4ff90>>  #uses=2
  CS<0x558a84d19c20> calls external node
  CS<0x558a84d1a3a0> calls external node
  CS<0x558a84d1b0c0> calls external node
  CS<0x558a84d1b2a0> calls function 'vPortValidateInterruptPriority'
  CS<0x558a84d1b5f0> calls external node
  CS<0x558a84d1d470> calls function 'xTaskRemoveFromEventList'
  CS<0x558a84d1e310> calls external node
  CS<0x558a84d1efe0> calls external node

Call graph node for function: 'xQueueGiveMutexRecursive'<<0x558a84b51eb0>>  #uses=1
  CS<0x558a84c109c0> calls external node
  CS<0x558a84c10f30> calls function 'xTaskGetCurrentTaskHandle'
  CS<0x558a84cf7420> calls function 'xQueueGenericSend'

Call graph node for function: 'xQueueIsQueueEmptyFromISR'<<0x558a84af93e0>>  #uses=1
  CS<0x558a84d5b790> calls external node

Call graph node for function: 'xQueueIsQueueFullFromISR'<<0x558a84af9490>>  #uses=1
  CS<0x558a84d5d730> calls external node

Call graph node for function: 'xQueuePeek'<<0x558a84af72e0>>  #uses=1
  CS<0x558a84d337c0> calls external node
  CS<0x558a84d34280> calls external node
  CS<0x558a84d34460> calls function 'xTaskGetSchedulerState'
  CS<0x558a84d34c70> calls external node
  CS<0x558a84d34ef0> calls function 'vPortEnterCritical'
  CS<0x558a84d35bb0> calls function 'prvCopyDataFromQueue'
  CS<0x558a84d36870> calls function 'xTaskRemoveFromEventList'
  CS<0x558a84d36b80> calls external node
  CS<0x558a84d36c00> calls external node
  CS<0x558a84d36ea0> calls function 'vPortExitCritical'
  CS<0x558a84d372c0> calls function 'vPortExitCritical'
  CS<0x558a84d37700> calls function 'vTaskInternalSetTimeOutState'
  CS<0x558a84d37a60> calls function 'vPortExitCritical'
  CS<0x558a84d37b10> calls function 'vTaskSuspendAll'
  CS<0x558a84d37bc0> calls function 'vPortEnterCritical'
  CS<0x558a84d38860> calls function 'vPortExitCritical'
  CS<0x558a84d38920> calls function 'xTaskCheckForTimeOut'
  CS<0x558a84d38c30> calls function 'prvIsQueueEmpty'
  CS<0x558a84d390f0> calls function 'vTaskPlaceOnEventList'
  CS<0x558a84d39260> calls function 'prvUnlockQueue'
  CS<0x558a84d39310> calls function 'xTaskResumeAll'
  CS<0x558a84d39620> calls external node
  CS<0x558a84d396a0> calls external node
  CS<0x558a84d39990> calls function 'prvUnlockQueue'
  CS<0x558a84d39a40> calls function 'xTaskResumeAll'
  CS<0x558a84d39cc0> calls function 'prvUnlockQueue'
  CS<0x558a84d39d70> calls function 'xTaskResumeAll'
  CS<0x558a84d39ee0> calls function 'prvIsQueueEmpty'

Call graph node for function: 'xQueuePeekFromISR'<<0x558a84af8c80>>  #uses=1
  CS<0x558a84c88fa0> calls external node
  CS<0x558a84c89a60> calls external node
  CS<0x558a84c8a1e0> calls external node
  CS<0x558a84c8a3c0> calls function 'vPortValidateInterruptPriority'
  CS<0x558a84c8a710> calls external node
  CS<0x558a84c8b4d0> calls function 'prvCopyDataFromQueue'
  CS<0x558a84c8bfc0> calls external node

Call graph node for function: 'xQueueReceive'<<0x558a84af7260>>  #uses=2
  CS<0x558a84d24010> calls external node
  CS<0x558a84d24ad0> calls external node
  CS<0x558a84d24cb0> calls function 'xTaskGetSchedulerState'
  CS<0x558a84d254c0> calls external node
  CS<0x558a84d25740> calls function 'vPortEnterCritical'
  CS<0x558a84d25fb0> calls function 'prvCopyDataFromQueue'
  CS<0x558a84d26ba0> calls function 'xTaskRemoveFromEventList'
  CS<0x558a84d26eb0> calls external node
  CS<0x558a84d26f30> calls external node
  CS<0x558a84d271d0> calls function 'vPortExitCritical'
  CS<0x558a84d275f0> calls function 'vPortExitCritical'
  CS<0x558a84d27a30> calls function 'vTaskInternalSetTimeOutState'
  CS<0x558a84d27d90> calls function 'vPortExitCritical'
  CS<0x558a84d27e40> calls function 'vTaskSuspendAll'
  CS<0x558a84d27ef0> calls function 'vPortEnterCritical'
  CS<0x558a84d28b90> calls function 'vPortExitCritical'
  CS<0x558a84d28c50> calls function 'xTaskCheckForTimeOut'
  CS<0x558a84d28f60> calls function 'prvIsQueueEmpty'
  CS<0x558a84d29420> calls function 'vTaskPlaceOnEventList'
  CS<0x558a84d29590> calls function 'prvUnlockQueue'
  CS<0x558a84d29640> calls function 'xTaskResumeAll'
  CS<0x558a84d29950> calls external node
  CS<0x558a84d299d0> calls external node
  CS<0x558a84d29cc0> calls function 'prvUnlockQueue'
  CS<0x558a84d29d70> calls function 'xTaskResumeAll'
  CS<0x558a84d29ff0> calls function 'prvUnlockQueue'
  CS<0x558a84d2a0a0> calls function 'xTaskResumeAll'
  CS<0x558a84d2a210> calls function 'prvIsQueueEmpty'

Call graph node for function: 'xQueueReceiveFromISR'<<0x558a84af8c00>>  #uses=1
  CS<0x558a84d3f2f0> calls external node
  CS<0x558a84d3fdb0> calls external node
  CS<0x558a84d3ff90> calls function 'vPortValidateInterruptPriority'
  CS<0x558a84d402e0> calls external node
  CS<0x558a84d412f0> calls function 'prvCopyDataFromQueue'
  CS<0x558a84d42190> calls function 'xTaskRemoveFromEventList'
  CS<0x558a84d43030> calls external node
  CS<0x558a84d43d00> calls external node

Call graph node for function: 'xQueueSemaphoreTake'<<0x558a84b51fb0>>  #uses=2
  CS<0x558a84cfff70> calls external node
  CS<0x558a84d006f0> calls external node
  CS<0x558a84d008d0> calls function 'xTaskGetSchedulerState'
  CS<0x558a84d01090> calls external node
  CS<0x558a84d01310> calls function 'vPortEnterCritical'
  CS<0x558a84d02150> calls function 'pvTaskIncrementMutexHeldCount'
  CS<0x558a84c5ca40> calls function 'xTaskRemoveFromEventList'
  CS<0x558a84c5cd50> calls external node
  CS<0x558a84c5cdd0> calls external node
  CS<0x558a84c5d070> calls function 'vPortExitCritical'
  CS<0x558a84c5d900> calls external node
  CS<0x558a84c5dae0> calls function 'vPortExitCritical'
  CS<0x558a84c5df20> calls function 'vTaskInternalSetTimeOutState'
  CS<0x558a84c5e280> calls function 'vPortExitCritical'
  CS<0x558a84c5e330> calls function 'vTaskSuspendAll'
  CS<0x558a84c5e3e0> calls function 'vPortEnterCritical'
  CS<0x558a84c5f080> calls function 'vPortExitCritical'
  CS<0x558a84c5f140> calls function 'xTaskCheckForTimeOut'
  CS<0x558a84c5f450> calls function 'prvIsQueueEmpty'
  CS<0x558a84c5fa40> calls function 'vPortEnterCritical'
  CS<0x558a84c5fea0> calls function 'xTaskPriorityInherit'
  CS<0x558a84c60010> calls function 'vPortExitCritical'
  CS<0x558a84c60440> calls function 'vTaskPlaceOnEventList'
  CS<0x558a84c605b0> calls function 'prvUnlockQueue'
  CS<0x558a84c60660> calls function 'xTaskResumeAll'
  CS<0x558a84c60970> calls external node
  CS<0x558a84c609f0> calls external node
  CS<0x558a84c60ce0> calls function 'prvUnlockQueue'
  CS<0x558a84c60d90> calls function 'xTaskResumeAll'
  CS<0x558a84c61010> calls function 'prvUnlockQueue'
  CS<0x558a84c610c0> calls function 'xTaskResumeAll'
  CS<0x558a84c61230> calls function 'prvIsQueueEmpty'
  CS<0x558a84c616c0> calls function 'vPortEnterCritical'
  CS<0x558a84c619a0> calls function 'prvGetDisinheritPriorityAfterTimeout'
  CS<0x558a84c61f80> calls function 'vTaskPriorityDisinheritAfterTimeout'
  CS<0x558a84c62030> calls function 'vPortExitCritical'

Call graph node for function: 'xQueueTakeMutexRecursive'<<0x558a84b51f30>>  #uses=1
  CS<0x558a84cf98e0> calls external node
  CS<0x558a84cf9e50> calls function 'xTaskGetCurrentTaskHandle'
  CS<0x558a84cfa860> calls function 'xQueueSemaphoreTake'

Call graph node for function: 'xTaskCatchUpTicks'<<0x558a84b4d020>>  #uses=1
  CS<0x558a84c38e00> calls external node
  CS<0x558a84c38fe0> calls function 'vTaskSuspendAll'
  CS<0x558a84c392f0> calls function 'xTaskResumeAll'

Call graph node for function: 'xTaskCheckForTimeOut'<<0x558a84b3df90>>  #uses=5
  CS<0x558a84c572f0> calls external node
  CS<0x558a84c57840> calls external node
  CS<0x558a84c57a20> calls function 'vPortEnterCritical'
  CS<0x558a84c59990> calls function 'vTaskInternalSetTimeOutState'
  CS<0x558a84c59f10> calls function 'vPortExitCritical'

Call graph node for function: 'xTaskCreate'<<0x558a84af5820>>  #uses=4
  CS<0x558a84ba2e80> calls external node
  CS<0x558a84ba2f70> calls external node
  CS<0x558a84ba33b0> calls function 'pvPortMalloc'
  CS<0x558a84ba40d0> calls function 'vPortFree'
  CS<0x558a84ba46c0> calls external node
  CS<0x558a84b1c610> calls function 'prvInitialiseNewTask'
  CS<0x558a84ba53b0> calls function 'prvAddNewTaskToReadyList'

Call graph node for function: 'xTaskDelayUntil'<<0x558a84b3c660>>  #uses=3
  CS<0x558a84bc7160> calls external node
  CS<0x558a84bc77b0> calls external node
  CS<0x558a84bc7e00> calls external node
  CS<0x558a84bc7fe0> calls function 'vTaskSuspendAll'
  CS<0x558a84bb2d30> calls function 'prvAddCurrentTaskToDelayedList'
  CS<0x558a84bb2ef0> calls function 'xTaskResumeAll'
  CS<0x558a84bcb830> calls external node
  CS<0x558a84bcb8b0> calls external node

Call graph node for function: 'xTaskGenericNotify'<<0x558a84b4ec20>>  #uses=1
  CS<0x558a84c175f0> calls external node
  CS<0x558a84c17b40> calls external node
  CS<0x558a84c17e80> calls function 'vPortEnterCritical'
  CS<0x558a84c8eba0> calls external node
  CS<0x558a84c8f280> calls function 'uxListRemove'
  CS<0x558a84c8faf0> calls function 'vListInsertEnd'
  CS<0x558a84c901d0> calls external node
  CS<0x558a84c90a10> calls external node
  CS<0x558a84c90a90> calls external node
  CS<0x558a84c90d30> calls function 'vPortExitCritical'

Call graph node for function: 'xTaskGenericNotifyFromISR'<<0x558a84b4edf0>>  #uses=1
  CS<0x558a84c96a70> calls external node
  CS<0x558a84c970c0> calls external node
  CS<0x558a84c972a0> calls function 'vPortValidateInterruptPriority'
  CS<0x558a84c97750> calls external node
  CS<0x558a84c9aa90> calls external node
  CS<0x558a84c9b620> calls external node
  CS<0x558a84c9bbf0> calls function 'uxListRemove'
  CS<0x558a84c9c460> calls function 'vListInsertEnd'
  CS<0x558a84c9c750> calls function 'vListInsertEnd'
  CS<0x558a84c9d7f0> calls external node

Call graph node for function: 'xTaskGenericNotifyStateClear'<<0x558a84b4f410>>  #uses=1
  CS<0x558a84b9e270> calls external node
  CS<0x558a84b9e910> calls function 'vPortEnterCritical'
  CS<0x558a84b9f570> calls function 'vPortExitCritical'

Call graph node for function: 'xTaskGenericNotifyWait'<<0x558a84b4ea50>>  #uses=1
  CS<0x558a84c81930> calls external node
  CS<0x558a84c81b10> calls function 'vPortEnterCritical'
  CS<0x558a84c82e10> calls function 'prvAddCurrentTaskToDelayedList'
  CS<0x558a84c82f80> calls external node
  CS<0x558a84c83000> calls external node
  CS<0x558a84c832a0> calls function 'vPortExitCritical'
  CS<0x558a84c83350> calls function 'vPortEnterCritical'
  CS<0x558a84c84d60> calls function 'vPortExitCritical'

Call graph node for function: 'xTaskGetCurrentTaskHandle'<<0x558a84b3e390>>  #uses=3

Call graph node for function: 'xTaskGetSchedulerState'<<0x558a84b3e410>>  #uses=8

Call graph node for function: 'xTaskGetTickCount'<<0x558a84b4c930>>  #uses=3

Call graph node for function: 'xTaskGetTickCountFromISR'<<0x558a84b4c9b0>>  #uses=1
  CS<0x558a84c1cb00> calls function 'vPortValidateInterruptPriority'

Call graph node for function: 'xTaskIncrementTick'<<0x558a84b3cb80>>  #uses=3
  CS<0x558a84be02b0> calls external node
  CS<0x558a84be0920> calls function 'prvResetNextTaskUnblockTime'
  CS<0x558a84be23f0> calls function 'uxListRemove'
  CS<0x558a84be2a80> calls function 'uxListRemove'
  CS<0x558a84be3400> calls function 'vListInsertEnd'
  CS<0x558a84be4710> calls function 'vApplicationTickHook'
  CS<0x558a84be4f40> calls function 'vApplicationTickHook'

Call graph node for function: 'xTaskPriorityDisinherit'<<0x558a84b4e4c0>>  #uses=2
  CS<0x558a84c6bb00> calls external node
  CS<0x558a84c6c180> calls external node
  CS<0x558a84c6d1a0> calls function 'uxListRemove'
  CS<0x558a84c6ea70> calls function 'vListInsertEnd'

Call graph node for function: 'xTaskPriorityInherit'<<0x558a84b4e440>>  #uses=2
  CS<0x558a84c667e0> calls function 'uxListRemove'
  CS<0x558a84c67bd0> calls function 'vListInsertEnd'

Call graph node for function: 'xTaskRemoveFromEventList'<<0x558a84b4d4e0>>  #uses=11
  CS<0x558a84bd8e00> calls external node
  CS<0x558a84bd9190> calls function 'uxListRemove'
  CS<0x558a84bd9630> calls function 'uxListRemove'
  CS<0x558a84c4b700> calls function 'vListInsertEnd'
  CS<0x558a84c4b9f0> calls function 'vListInsertEnd'

Call graph node for function: 'xTaskResumeAll'<<0x558a84b3c930>>  #uses=26
  CS<0x558a84b44740> calls external node
  CS<0x558a84b44920> calls function 'vPortEnterCritical'
  CS<0x558a84b458f0> calls function 'uxListRemove'
  CS<0x558a84b45b50> calls function 'uxListRemove'
  CS<0x558a84b463c0> calls function 'vListInsertEnd'
  CS<0x558a84bd9ed0> calls function 'prvResetNextTaskUnblockTime'
  CS<0x558a84baa750> calls function 'xTaskIncrementTick'
  CS<0x558a84bdbba0> calls external node
  CS<0x558a84bdbc20> calls external node
  CS<0x558a84bdbf60> calls function 'vPortExitCritical'

Call graph node for function: 'xTaskResumeFromISR'<<0x558a84b3dd10>>  #uses=1
  CS<0x558a84c11f10> calls external node
  CS<0x558a84c120f0> calls function 'vPortValidateInterruptPriority'
  CS<0x558a84c12440> calls external node
  CS<0x558a84c12950> calls function 'prvTaskIsTaskSuspended'
  CS<0x558a84c137c0> calls function 'uxListRemove'
  CS<0x558a84c14030> calls function 'vListInsertEnd'
  CS<0x558a84c14320> calls function 'vListInsertEnd'
  CS<0x558a84c14880> calls external node

Call graph node for function: 'xTimerCreate'<<0x558a84afa590>>  #uses=1
  CS<0x558a84ca9d20> calls function 'pvPortMalloc'
  CS<0x558a84caa840> calls function 'prvInitialiseNewTimer'

Call graph node for function: 'xTimerCreateTimerTask'<<0x558a84b4c3b0>>  #uses=2
  CS<0x558a84d6ee40> calls function 'prvCheckForValidListAndQueue'
  CS<0x558a84d6f190> calls function 'xTaskCreate'
  CS<0x558a84d6f7b0> calls external node

Call graph node for function: 'xTimerGenericCommand'<<0x558a84afa7a0>>  #uses=1
  CS<0x558a84d98470> calls external node
  CS<0x558a84d994e0> calls function 'xTaskGetSchedulerState'
  CS<0x558a84d99930> calls function 'xQueueGenericSend'
  CS<0x558a84d99ca0> calls function 'xQueueGenericSend'
  CS<0x558a84d9a0f0> calls function 'xQueueGenericSendFromISR'

Call graph node for function: 'xTimerGetExpiryTime'<<0x558a84afabe0>>  #uses=1
  CS<0x558a84da2cc0> calls external node

Call graph node for function: 'xTimerGetPeriod'<<0x558a84afa950>>  #uses=1
  CS<0x558a84d9c990> calls external node

Call graph node for function: 'xTimerGetTimerDaemonTaskHandle'<<0x558a84afa8d0>>  #uses=1
  CS<0x558a84d9b6c0> calls external node

Call graph node for function: 'xTimerIsTimerActive'<<0x558a84afad10>>  #uses=1
  CS<0x558a84da5ec0> calls external node
  CS<0x558a84da60a0> calls function 'vPortEnterCritical'
  CS<0x558a84da68b0> calls function 'vPortExitCritical'

Call graph node for function: 'xcall_arg0'<<0x558a84b510d0>>  #uses=2
  CS<0x558a84e22590> calls function 'switch_view'
  CS<0x558a84e22ab0> calls external node
  CS<0x558a84e22bf0> calls function 'switch_view'

Call graph node for function: 'xcall_arg0_noid'<<0x558a84afd3e0>>  #uses=1
  CS<0x558a84e4b5d0> calls function 'getCompartmentFromAddr'
  CS<0x558a84e4b7d0> calls function 'xcall_arg0'

Call graph node for function: 'xcall_arg1i'<<0x558a84b51230>>  #uses=1
  CS<0x558a84e243d0> calls function 'switch_view'
  CS<0x558a84e249b0> calls external node
  CS<0x558a84e24af0> calls function 'switch_view'

Call graph node for function: 'xcall_arg1p'<<0x558a84afc940>>  #uses=2
  CS<0x558a84e337d0> calls function 'rtmkcpy'
  CS<0x558a84e33b40> calls function 'switch_view'
  CS<0x558a84e34120> calls external node
  CS<0x558a84e34260> calls function 'switch_view'

Call graph node for function: 'xcall_arg1p_noid'<<0x558a84afd4c0>>  #uses=1
  CS<0x558a84e4c7e0> calls function 'getCompartmentFromAddr'
  CS<0x558a84e3f400> calls function 'xcall_arg1p'

Call graph node for function: 'xcall_arg2ii'<<0x558a84afc790>>  #uses=1
  CS<0x558a84e2e0f0> calls function 'switch_view'
  CS<0x558a84e2e790> calls external node
  CS<0x558a84e2e8d0> calls function 'switch_view'

Call graph node for function: 'xcall_arg2pi'<<0x558a84afca70>>  #uses=1
  CS<0x558a84e36540> calls function 'rtmkcpy'
  CS<0x558a84e368b0> calls function 'switch_view'
  CS<0x558a84e36f50> calls external node
  CS<0x558a84e37090> calls function 'switch_view'

Call graph node for function: 'xcall_arg2pp'<<0x558a84afccd0>>  #uses=1
  CS<0x558a84e3cb20> calls function 'rtmkcpy'
  CS<0x558a84e3d8b0> calls function 'rtmkcpy'
  CS<0x558a84e3dc20> calls function 'switch_view'
  CS<0x558a84e3e2c0> calls external node
  CS<0x558a84e3e400> calls function 'switch_view'

Call graph node for function: 'xcall_arg3pii'<<0x558a84afcba0>>  #uses=1
  CS<0x558a84e39860> calls function 'rtmkcpy'
  CS<0x558a84e39b40> calls function 'switch_view'
  CS<0x558a84e3a200> calls external node
  CS<0x558a84e3a340> calls function 'switch_view'

